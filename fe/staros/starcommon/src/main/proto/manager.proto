// Copyright 2021-present StarRocks, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "shard.proto";
import "service.proto";
import "star_status.proto";
import "file_store.proto";
import "worker.proto";

package staros;
option java_package = "com.staros.proto";
option java_multiple_files = true;

service StarManager {
    // Service API
    rpc RegisterService(RegisterServiceRequest) returns (RegisterServiceResponse) {}
    rpc DeregisterService(DeregisterServiceRequest) returns (DeregisterServiceResponse) {}
    rpc BootstrapService(BootstrapServiceRequest) returns (BootstrapServiceResponse) {}
    rpc ShutdownService(ShutdownServiceRequest) returns (ShutdownServiceResponse) {}
    rpc GetService(GetServiceRequest) returns (GetServiceResponse) {}

    // Shard API
    rpc CreateShard(CreateShardRequest) returns (CreateShardResponse) {}
    rpc UpdateShard(UpdateShardRequest) returns (UpdateShardResponse) {}
    rpc DeleteShard(DeleteShardRequest) returns (DeleteShardResponse) {}
    rpc GetShard(GetShardRequest) returns (GetShardResponse) {}
    rpc ListShard(ListShardRequest) returns (ListShardResponse) {}
    rpc CreateShardGroup(CreateShardGroupRequest) returns (CreateShardGroupResponse) {}
    rpc UpdateShardGroup(UpdateShardGroupRequest) returns (UpdateShardGroupResponse) {}
    rpc DeleteShardGroup(DeleteShardGroupRequest) returns (DeleteShardGroupResponse) {}
    rpc ListShardGroup(ListShardGroupRequest) returns (ListShardGroupResponse) {}
    rpc GetShardGroup(GetShardGroupRequest) returns (GetShardGroupResponse) {}
    rpc CreateMetaGroup(CreateMetaGroupRequest) returns (CreateMetaGroupResponse) {}
    rpc DeleteMetaGroup(DeleteMetaGroupRequest) returns (DeleteMetaGroupResponse) {}
    rpc UpdateMetaGroup(UpdateMetaGroupRequest) returns (UpdateMetaGroupResponse) {}
    rpc GetMetaGroup(GetMetaGroupRequest) returns (GetMetaGroupResponse) {}
    rpc ListMetaGroup(ListMetaGroupRequest) returns (ListMetaGroupResponse) {}
    rpc QueryMetaGroupStable(QueryMetaGroupStableRequest) returns (QueryMetaGroupStableResponse) {}
    rpc UpdateShardReplicaInfo(UpdateShardReplicaRequest) returns (UpdateShardReplicaResponse) {}

    // Worker API
    rpc AddWorker(AddWorkerRequest) returns (AddWorkerResponse) {}
    rpc RemoveWorker(RemoveWorkerRequest) returns (RemoveWorkerResponse) {}
    rpc GetWorker(GetWorkerRequest) returns (GetWorkerResponse) {}
    rpc WorkerHeartbeat(WorkerHeartbeatRequest) returns (WorkerHeartbeatResponse) {}

    // WorkerGroup API
    rpc CreateWorkerGroup(CreateWorkerGroupRequest) returns (CreateWorkerGroupResponse) {}
    rpc ListWorkerGroup(ListWorkerGroupRequest) returns (ListWorkerGroupResponse) {}
    rpc UpdateWorkerGroup(UpdateWorkerGroupRequest) returns (UpdateWorkerGroupResponse) {}
    rpc DeleteWorkerGroup(DeleteWorkerGroupRequest) returns (DeleteWorkerGroupResponse) {}

    // File Store API
    rpc AllocateFilePath(AllocateFilePathRequest) returns (AllocateFilePathResponse) {}
    rpc AddFileStore(AddFileStoreRequest) returns (AddFileStoreResponse) {}
    rpc RemoveFileStore(RemoveFileStoreRequest) returns (RemoveFileStoreResponse) {}
    rpc ListFileStore(ListFileStoreRequest) returns (ListFileStoreResponse) {}
    rpc UpdateFileStore(UpdateFileStoreRequest) returns (UpdateFileStoreResponse) {}
    rpc ReplaceFileStore(ReplaceFileStoreRequest) returns (ReplaceFileStoreResponse) {}
    rpc GetFileStore(GetFileStoreRequest) returns (GetFileStoreResponse) {}

    // for debug purpose
    rpc Dump(DumpRequest) returns (DumpResponse) {}
}

message DumpRequest {
}

message DumpResponse {
    StarStatus status = 1;
    string location = 2;
}
