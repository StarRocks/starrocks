{
  "statement": "SELECT tbl_mock_431.mock_088 AS mock_424, concat(tbl_mock_431.mock_050, tbl_mock_431.mock_070) AS mock_413, tbl_mock_431.mock_109 AS mock_420, tbl_mock_431.mock_089 AS mock_423, tbl_mock_431.mock_127 AS mock_418, tbl_mock_432.mock_183 AS mock_425, tbl_mock_435.mock_394 AS mock_400, tbl_mock_431.mock_064 AS mock_416, tbl_mock_431.mock_065 AS mock_417, tbl_mock_431.mock_002 / 100 AS mock_429, tbl_mock_431.mock_047 AS mock_412, tbl_mock_431.mock_048 AS mock_421, tbl_mock_431.mock_059 AS mock_405, tbl_mock_431.mock_046 AS mock_403, tbl_mock_431.mock_076 AS mock_414, tbl_mock_431.mock_131 AS mock_399, tbl_mock_431.mock_051 AS mock_406, tbl_mock_431.mock_077 AS mock_415, tbl_mock_431.mock_087 AS mock_404, tbl_mock_431.mock_034 AS mock_401, trim(tbl_mock_433.mock_332) AS mock_402, tbl_mock_431.mock_003 AS mock_397, trim(tbl_mock_434.mock_332) AS mock_398, tbl_mock_431.mock_121 AS mock_428, tbl_mock_431.mock_014 AS mock_426, tbl_mock_431.mock_111 AS mock_419, tbl_mock_431.mock_118 AS mock_422, tbl_mock_431.mock_123 AS mock_410, tbl_mock_431.mock_124 AS mock_411, tbl_mock_431.mock_117 AS mock_407, tbl_mock_431.mock_052 AS mock_408, tbl_mock_431.mock_036 AS mock_427, tbl_mock_431.mock_044 AS mock_409\nFROM db_mock_000.tbl_mock_001 AS tbl_mock_431 INNER JOIN db_mock_000.tbl_mock_143 AS tbl_mock_432 ON tbl_mock_431.mock_088 = tbl_mock_432.mock_201 LEFT OUTER JOIN db_mock_000.tbl_mock_296 AS tbl_mock_433 ON tbl_mock_431.mock_034 = tbl_mock_433.mock_333 LEFT OUTER JOIN db_mock_000.tbl_mock_296 AS tbl_mock_434 ON (trim(tbl_mock_431.mock_003)) = (trim(tbl_mock_434.mock_333)) LEFT OUTER JOIN db_mock_000.tbl_mock_392 AS tbl_mock_435 ON tbl_mock_431.mock_014 = tbl_mock_435.mock_393\nWHERE (((((tbl_mock_431.mock_002 != 0) AND (((trim(tbl_mock_431.mock_089)) = '124320') OR ((trim(tbl_mock_431.mock_089)) = '124321'))) AND (((trim(tbl_mock_431.mock_127)) = '0101') OR ((trim(tbl_mock_431.mock_127)) = '0102'))) AND (((trim(tbl_mock_431.mock_046)) = '03042') OR ((trim(tbl_mock_431.mock_046)) = '03044'))) AND (((trim(tbl_mock_431.mock_087)) = 'AA') OR ((trim(tbl_mock_431.mock_087)) = 'AP'))) AND ((tbl_mock_431.mock_053 >= '120183') AND (tbl_mock_431.mock_053 <= '120213'))",
  "table_meta": {
    "db_mock_000.tbl_mock_001": "CREATE TABLE db_mock_000.tbl_mock_001 (\nmock_085 varchar(15) NOT NULL ,\nmock_051 varchar(6) NOT NULL ,\nmock_059 varchar(128) NOT NULL ,\nmock_053 bigint(20) NOT NULL ,\nmock_082 varchar(128) NOT NULL ,\nmock_067 varchar(6) NOT NULL ,\nmock_087 varchar(6) NOT NULL ,\nmock_111 varchar(3) ,\nmock_076 varchar(128) ,\nmock_077 varchar(6) ,\nmock_054 bigint(20) ,\nmock_062 bigint(20) ,\nmock_129 varchar(128) ,\nmock_046 varchar(15) ,\nmock_035 varchar(87) ,\nmock_033 varchar(3) ,\nmock_014 varchar(24) ,\nmock_088 varchar(36) ,\nmock_089 varchar(18) ,\nmock_127 varchar(24) ,\nmock_123 varchar(24) ,\nmock_124 varchar(3) ,\nmock_109 varchar(128) ,\nmock_050 varchar(128) ,\nmock_070 varchar(128) ,\nmock_069 varchar(12) ,\nmock_047 varchar(9) ,\nmock_048 varchar(128) ,\nmock_073 varchar(128) ,\nmock_074 bigint(20) ,\nmock_002 varchar(128) ,\nmock_134 varchar(128) ,\nmock_135 varchar(6) ,\nmock_071 varchar(12) ,\nmock_121 varchar(3) ,\nmock_064 varchar(90) ,\nmock_065 varchar(90) ,\nmock_116 varchar(24) ,\nmock_117 varchar(24) ,\nmock_118 varchar(24) ,\nmock_125 varchar(9) ,\nmock_091 varchar(128) ,\nmock_090 varchar(6) ,\nmock_095 varchar(9) ,\nmock_098 varchar(15) ,\nmock_093 varchar(15) ,\nmock_096 varchar(6) ,\nmock_034 varchar(128) ,\nmock_045 varchar(24) ,\nmock_056 bigint(20) ,\nmock_055 bigint(20) ,\nmock_036 varchar(75) ,\nmock_040 varchar(3) ,\nmock_120 varchar(3) ,\nmock_128 varchar(3) ,\nmock_112 varchar(3) ,\nmock_130 varchar(3) ,\nmock_017 varchar(3) ,\nmock_018 varchar(3) ,\nmock_019 varchar(3) ,\nmock_020 varchar(3) ,\nmock_021 varchar(3) ,\nmock_022 varchar(3) ,\nmock_023 varchar(3) ,\nmock_024 varchar(3) ,\nmock_025 varchar(3) ,\nmock_016 varchar(3) ,\nmock_026 varchar(3) ,\nmock_027 varchar(3) ,\nmock_028 varchar(3) ,\nmock_029 varchar(3) ,\nmock_030 varchar(3) ,\nmock_032 varchar(3) ,\nmock_057 varchar(3) ,\nmock_042 varchar(3) ,\nmock_043 varchar(3) ,\nmock_037 varchar(3) ,\nmock_038 varchar(3) ,\nmock_139 varchar(75) ,\nmock_079 bigint(20) ,\nmock_141 varchar(12) ,\nmock_110 varchar(24) ,\nmock_114 varchar(9) ,\nmock_052 varchar(6) ,\nmock_086 varchar(128) ,\nmock_142 varchar(128) ,\nmock_140 varchar(128) ,\nmock_068 varchar(3) ,\nmock_094 varchar(128) ,\nmock_080 varchar(18) ,\nmock_081 varchar(12) ,\nmock_075 varchar(36) ,\nmock_060 varchar(128) ,\nmock_015 varchar(75) ,\nmock_031 varchar(6) ,\nmock_061 bigint(20) ,\nmock_131 varchar(30) ,\nmock_122 varchar(128) ,\nmock_115 varchar(128) ,\nmock_138 varchar(30) ,\nmock_097 varchar(30) ,\nmock_083 varchar(30) ,\nmock_136 bigint(20) ,\nmock_137 varchar(128) ,\nmock_003 varchar(36) ,\nmock_004 varchar(36) ,\nmock_005 varchar(36) ,\nmock_006 varchar(36) ,\nmock_007 varchar(3) ,\nmock_008 varchar(3) ,\nmock_009 varchar(3) ,\nmock_010 varchar(3) ,\nmock_078 varchar(128) ,\nmock_099 varchar(3) ,\nmock_100 varchar(3) ,\nmock_101 varchar(3) ,\nmock_102 varchar(3) ,\nmock_103 varchar(3) ,\nmock_104 varchar(3) ,\nmock_105 varchar(3) ,\nmock_106 varchar(3) ,\nmock_107 varchar(3) ,\nmock_108 varchar(3) ,\nmock_039 varchar(9) ,\nmock_049 varchar(3) ,\nmock_113 varchar(3) ,\nmock_132 varchar(30) ,\nmock_066 varchar(6) ,\nmock_133 varchar(128) ,\nmock_012 varchar(30) ,\nmock_072 varchar(3) ,\nmock_011 varchar(128) ,\nmock_058 varchar(128) ,\nmock_044 varchar(75) ,\nmock_041 varchar(3) ,\nmock_013 varchar(36) ,\nmock_063 varchar(9) ,\nmock_084 varchar(9) ,\nmock_119 varchar(128) ,\nmock_126 varchar(128) ,\nmock_092 varchar(3) \n) ENGINE= OLAP \nPRIMARY KEY(mock_085, mock_051, mock_059, mock_053, mock_082, mock_067, mock_087)\nDISTRIBUTED BY HASH(mock_085, mock_051, mock_059, mock_053, mock_082, mock_067, mock_087) BUCKETS 4 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);",
    "db_mock_000.tbl_mock_143": "CREATE TABLE db_mock_000.tbl_mock_143 (\nmock_201 varchar(36) NOT NULL ,\nmock_275 varchar(6) ,\nmock_182 varchar(120) ,\nmock_198 varchar(3) ,\nmock_174 varchar(15) ,\nmock_148 varchar(128) ,\nmock_154 varchar(128) ,\nmock_173 varchar(9) ,\nmock_144 varchar(9) ,\nmock_191 varchar(3) ,\nmock_183 varchar(90) ,\nmock_184 varchar(90) ,\nmock_185 varchar(90) ,\nmock_186 varchar(90) ,\nmock_224 varchar(9) ,\nmock_225 varchar(9) ,\nmock_226 varchar(9) ,\nmock_227 varchar(9) ,\nmock_228 varchar(9) ,\nmock_229 varchar(9) ,\nmock_230 varchar(9) ,\nmock_231 varchar(9) ,\nmock_232 varchar(9) ,\nmock_233 varchar(9) ,\nmock_234 varchar(9) ,\nmock_235 varchar(9) ,\nmock_236 varchar(9) ,\nmock_237 varchar(9) ,\nmock_238 varchar(9) ,\nmock_239 varchar(9) ,\nmock_240 varchar(9) ,\nmock_241 varchar(9) ,\nmock_242 varchar(9) ,\nmock_243 varchar(9) ,\nmock_244 varchar(30) ,\nmock_245 varchar(30) ,\nmock_246 varchar(30) ,\nmock_247 varchar(30) ,\nmock_248 varchar(30) ,\nmock_249 varchar(30) ,\nmock_250 varchar(30) ,\nmock_251 varchar(30) ,\nmock_252 varchar(30) ,\nmock_253 varchar(30) ,\nmock_277 varchar(30) ,\nmock_291 varchar(128) ,\nmock_290 varchar(30) ,\nmock_190 varchar(6) ,\nmock_278 varchar(12) ,\nmock_279 varchar(12) ,\nmock_280 varchar(12) ,\nmock_281 varchar(12) ,\nmock_282 varchar(12) ,\nmock_283 varchar(12) ,\nmock_284 varchar(12) ,\nmock_285 varchar(12) ,\nmock_286 varchar(12) ,\nmock_287 varchar(12) ,\nmock_203 varchar(3) ,\nmock_204 varchar(3) ,\nmock_205 varchar(3) ,\nmock_206 varchar(3) ,\nmock_207 varchar(3) ,\nmock_208 varchar(3) ,\nmock_209 varchar(3) ,\nmock_210 varchar(3) ,\nmock_211 varchar(3) ,\nmock_212 varchar(3) ,\nmock_161 varchar(3) ,\nmock_162 varchar(3) ,\nmock_163 varchar(3) ,\nmock_164 varchar(3) ,\nmock_165 varchar(3) ,\nmock_166 varchar(3) ,\nmock_167 varchar(3) ,\nmock_168 varchar(3) ,\nmock_169 varchar(3) ,\nmock_170 varchar(3) ,\nmock_221 varchar(3) ,\nmock_147 varchar(3) ,\nmock_196 varchar(3) ,\nmock_193 varchar(24) ,\nmock_146 varchar(6) ,\nmock_200 varchar(3) ,\nmock_199 varchar(128) ,\nmock_213 varchar(18) ,\nmock_214 varchar(18) ,\nmock_215 varchar(18) ,\nmock_276 varchar(24) ,\nmock_288 varchar(128) ,\nmock_274 varchar(3) ,\nmock_155 varchar(128) ,\nmock_175 varchar(12) ,\nmock_171 varchar(3) ,\nmock_202 varchar(36) ,\nmock_158 varchar(3) ,\nmock_217 varchar(128) ,\nmock_218 varchar(128) ,\nmock_219 varchar(128) ,\nmock_194 varchar(12) ,\nmock_195 varchar(12) ,\nmock_176 bigint(20) ,\nmock_177 bigint(20) ,\nmock_178 bigint(20) ,\nmock_179 bigint(20) ,\nmock_180 bigint(20) ,\nmock_181 bigint(20) ,\nmock_192 bigint(20) ,\nmock_160 varchar(128) ,\nmock_216 varchar(128) ,\nmock_188 varchar(3) ,\nmock_189 varchar(6) ,\nmock_295 varchar(30) ,\nmock_222 varchar(30) ,\nmock_293 bigint(20) ,\nmock_197 varchar(30) ,\nmock_294 varchar(128) ,\nmock_157 varchar(45) ,\nmock_156 varchar(3) ,\nmock_289 varchar(36) ,\nmock_254 varchar(30) ,\nmock_255 varchar(30) ,\nmock_256 varchar(30) ,\nmock_257 varchar(30) ,\nmock_258 varchar(30) ,\nmock_259 varchar(30) ,\nmock_260 varchar(30) ,\nmock_261 varchar(30) ,\nmock_262 varchar(30) ,\nmock_263 varchar(30) ,\nmock_264 varchar(30) ,\nmock_265 varchar(30) ,\nmock_266 varchar(30) ,\nmock_267 varchar(30) ,\nmock_268 varchar(30) ,\nmock_269 varchar(30) ,\nmock_270 varchar(30) ,\nmock_271 varchar(30) ,\nmock_272 varchar(30) ,\nmock_273 varchar(30) ,\nmock_149 varchar(128) ,\nmock_150 varchar(128) ,\nmock_151 varchar(128) ,\nmock_152 varchar(128) ,\nmock_153 varchar(128) ,\nmock_223 varchar(36) ,\nmock_187 varchar(128) ,\nmock_220 varchar(128) ,\nmock_172 varchar(128) ,\nmock_159 varchar(15) ,\nmock_145 varchar(3) ,\nmock_292 varchar(3) \n) ENGINE= OLAP \nPRIMARY KEY(mock_201)\nDISTRIBUTED BY HASH(mock_201) BUCKETS 4 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);",
    "db_mock_000.tbl_mock_296": "CREATE TABLE db_mock_000.tbl_mock_296 (\nmock_333 varchar(128) NOT NULL ,\nmock_330 varchar(60) ,\nmock_378 varchar(60) ,\nmock_332 varchar(120) ,\nmock_356 varchar(120) ,\nmock_364 varchar(36) ,\nmock_376 varchar(30) ,\nmock_363 varchar(6) ,\nmock_340 varchar(9) ,\nmock_355 varchar(6) ,\nmock_379 varchar(3) ,\nmock_341 varchar(3) ,\nmock_342 varchar(3) ,\nmock_343 varchar(3) ,\nmock_344 varchar(3) ,\nmock_346 varchar(3) ,\nmock_348 varchar(3) ,\nmock_347 varchar(3) ,\nmock_297 varchar(3) ,\nmock_345 varchar(3) ,\nmock_374 varchar(3) ,\nmock_358 bigint(20) ,\nmock_334 varchar(128) ,\nmock_335 varchar(128) ,\nmock_336 varchar(128) ,\nmock_337 varchar(128) ,\nmock_339 varchar(128) ,\nmock_338 varchar(128) ,\nmock_298 varchar(9) ,\nmock_299 varchar(9) ,\nmock_300 varchar(9) ,\nmock_301 varchar(9) ,\nmock_302 varchar(9) ,\nmock_303 varchar(9) ,\nmock_304 varchar(9) ,\nmock_305 varchar(9) ,\nmock_306 varchar(9) ,\nmock_307 varchar(9) ,\nmock_308 varchar(9) ,\nmock_309 varchar(9) ,\nmock_310 varchar(9) ,\nmock_311 varchar(9) ,\nmock_312 varchar(9) ,\nmock_313 varchar(9) ,\nmock_314 varchar(9) ,\nmock_315 varchar(9) ,\nmock_316 varchar(9) ,\nmock_317 varchar(9) ,\nmock_318 varchar(9) ,\nmock_319 varchar(9) ,\nmock_320 varchar(9) ,\nmock_321 varchar(9) ,\nmock_322 varchar(9) ,\nmock_323 varchar(9) ,\nmock_324 varchar(9) ,\nmock_325 varchar(9) ,\nmock_326 varchar(9) ,\nmock_327 varchar(9) ,\nmock_360 varchar(24) ,\nmock_371 varchar(128) ,\nmock_367 bigint(20) ,\nmock_365 varchar(3) ,\nmock_373 varchar(90) ,\nmock_382 varchar(60) ,\nmock_381 varchar(60) ,\nmock_331 varchar(120) ,\nmock_387 varchar(6) ,\nmock_388 bigint(20) ,\nmock_386 varchar(128) ,\nmock_385 varchar(128) ,\nmock_389 varchar(45) ,\nmock_390 varchar(30) ,\nmock_369 varchar(30) ,\nmock_383 bigint(20) ,\nmock_362 varchar(30) ,\nmock_384 varchar(128) ,\nmock_370 varchar(3) ,\nmock_375 varchar(6) ,\nmock_380 varchar(30) ,\nmock_359 varchar(30) ,\nmock_357 varchar(39) ,\nmock_350 varchar(9) ,\nmock_351 varchar(9) ,\nmock_352 varchar(9) ,\nmock_353 varchar(9) ,\nmock_354 varchar(9) ,\nmock_366 varchar(128) ,\nmock_361 varchar(128) ,\nmock_391 varchar(45) ,\nmock_329 varchar(15) ,\nmock_328 varchar(3) ,\nmock_372 varchar(15) ,\nmock_377 varchar(128) ,\nmock_368 varchar(128) ,\nmock_349 varchar(128) \n) ENGINE= OLAP \nPRIMARY KEY(mock_333)\nDISTRIBUTED BY HASH(mock_333) BUCKETS 4 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);",
    "db_mock_000.tbl_mock_392": "CREATE TABLE db_mock_000.tbl_mock_392 (\nmock_395 varchar(6) NOT NULL ,\nmock_393 varchar(24) NOT NULL ,\nmock_394 varchar(90) \n) ENGINE= OLAP \nPRIMARY KEY(mock_395, mock_393)\nDISTRIBUTED BY HASH(mock_395, mock_393) BUCKETS 4 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);",
    "db_mock_000.tbl_mock_396": "CREATE MATERIALIZED VIEW `tbl_mock_396` (`mock_424`, `mock_413`, `mock_420`, `mock_423`, `mock_418`, `mock_425`, `mock_400`, `mock_416`, `mock_417`, `mock_429`, `mock_412`, `mock_421`, `mock_405`, `mock_403`, `mock_414`, `mock_399`, `mock_406`, `mock_415`, `mock_404`, `mock_401`, `mock_402`, `mock_397`, `mock_398`, `mock_428`, `mock_426`, `mock_419`, `mock_422`, `mock_410`, `mock_411`, `mock_407`, `mock_408`, `mock_427`, `mock_409`)\n\nDISTRIBUTED BY RANDOM\nREFRESH MANUAL\nPROPERTIES (\n\"replication_num\" = \"1\"\n)\nAS SELECT tbl_mock_431.mock_088 AS mock_424, concat(tbl_mock_431.mock_050, tbl_mock_431.mock_070) AS mock_413, tbl_mock_431.mock_109 AS mock_420, tbl_mock_431.mock_089 AS mock_423, tbl_mock_431.mock_127 AS mock_418, tbl_mock_432.mock_183 AS mock_425, tbl_mock_435.mock_394 AS mock_400, tbl_mock_431.mock_064 AS mock_416, tbl_mock_431.mock_065 AS mock_417, tbl_mock_431.mock_002 / 100 AS mock_429, tbl_mock_431.mock_047 AS mock_412, tbl_mock_431.mock_048 AS mock_421, tbl_mock_431.mock_059 AS mock_405, tbl_mock_431.mock_046 AS mock_403, tbl_mock_431.mock_076 AS mock_414, tbl_mock_431.mock_131 AS mock_399, tbl_mock_431.mock_051 AS mock_406, tbl_mock_431.mock_077 AS mock_415, tbl_mock_431.mock_087 AS mock_404, tbl_mock_431.mock_034 AS mock_401, trim(tbl_mock_433.mock_332) AS mock_402, tbl_mock_431.mock_003 AS mock_397, trim(tbl_mock_434.mock_332) AS mock_398, tbl_mock_431.mock_121 AS mock_428, tbl_mock_431.mock_014 AS mock_426, tbl_mock_431.mock_111 AS mock_419, tbl_mock_431.mock_118 AS mock_422, tbl_mock_431.mock_123 AS mock_410, tbl_mock_431.mock_124 AS mock_411, tbl_mock_431.mock_117 AS mock_407, tbl_mock_431.mock_052 AS mock_408, tbl_mock_431.mock_036 AS mock_427, tbl_mock_431.mock_044 AS mock_409\nFROM db_mock_000.tbl_mock_001 AS tbl_mock_431 INNER JOIN db_mock_000.tbl_mock_143 AS tbl_mock_432 ON tbl_mock_431.mock_088 = tbl_mock_432.mock_201 LEFT OUTER JOIN db_mock_000.tbl_mock_296 AS tbl_mock_433 ON tbl_mock_431.mock_034 = tbl_mock_433.mock_333 LEFT OUTER JOIN db_mock_000.tbl_mock_296 AS tbl_mock_434 ON (trim(tbl_mock_431.mock_003)) = (trim(tbl_mock_434.mock_333)) LEFT OUTER JOIN db_mock_000.tbl_mock_392 AS tbl_mock_435 ON tbl_mock_431.mock_014 = tbl_mock_435.mock_393\nWHERE (((((tbl_mock_431.mock_002 != 0) AND (((trim(tbl_mock_431.mock_089)) = '124320') OR ((trim(tbl_mock_431.mock_089)) = '124321'))) AND (((trim(tbl_mock_431.mock_127)) = '0101') OR ((trim(tbl_mock_431.mock_127)) = '0102'))) AND (((trim(tbl_mock_431.mock_046)) = '03042') OR ((trim(tbl_mock_431.mock_046)) = '03044'))) AND (((trim(tbl_mock_431.mock_087)) = 'AA') OR ((trim(tbl_mock_431.mock_087)) = 'AP'))) AND ((tbl_mock_431.mock_053 >= '120183') AND (tbl_mock_431.mock_053 <= '120213'));"
  },
  "table_row_count": {
    "db_mock_000.tbl_mock_001": {
      "tbl_mock_001": 180277573
    },
    "db_mock_000.tbl_mock_143": {
      "tbl_mock_143": 549626
    },
    "db_mock_000.tbl_mock_392": {
      "tbl_mock_392": 65430509
    },
    "db_mock_000.tbl_mock_396": {
      "tbl_mock_396": 23
    },
    "db_mock_000.tbl_mock_296": {
      "tbl_mock_296": 219703
    }
  },
  "column_statistics": {
    "db_mock_000.tbl_mock_001": {
      "mock_048": "[-Infinity, Infinity, 0.0, 1.1135137033462579, 4114.0] ESTIMATE",
      "mock_065": "[-Infinity, Infinity, 3.6871515568803874E-8, 29.999998856983016, 2511831.0] ESTIMATE",
      "mock_088": "[-Infinity, Infinity, 0.0, 12.0, 372477.0] ESTIMATE",
      "mock_076": "[-Infinity, Infinity, 0.0, 6.786498426146537, 2410344.0] ESTIMATE",
      "mock_070": "[-Infinity, Infinity, 0.0, 1.9994117476164674, 43.0] ESTIMATE",
      "mock_051": "[-Infinity, Infinity, 0.0, 2.0, 77.0] ESTIMATE",
      "mock_036": "[-Infinity, Infinity, 0.0, 25.0, 269842.0] ESTIMATE",
      "mock_109": "[-Infinity, Infinity, 0.0, 1.2593133987361398, 13.0] ESTIMATE",
      "mock_117": "[-Infinity, Infinity, 0.0, 8.0, 5580428.0] ESTIMATE",
      "mock_118": "[-Infinity, Infinity, 1.7888030258657046E-5, 7.99985689575793, 2869.0] ESTIMATE",
      "mock_124": "[-Infinity, Infinity, 0.0, 1.0, 9.0] ESTIMATE",
      "mock_047": "[-Infinity, Infinity, 0.0, 3.0, 16.0] ESTIMATE",
      "mock_064": "[-Infinity, Infinity, 0.0, 29.999999889380497, 3719013.0] ESTIMATE",
      "mock_053": "[0.0, 150167.0, 0.0, 8.0, 4524.0] ESTIMATE",
      "mock_087": "[-Infinity, Infinity, 0.0, 2.0, 12.0] ESTIMATE",
      "mock_046": "[-Infinity, Infinity, 0.0, 5.0, 227.0] ESTIMATE",
      "mock_127": "[-Infinity, Infinity, 0.0, 8.0, 15117.0] ESTIMATE",
      "mock_123": "[-Infinity, Infinity, 0.0, 8.0, 60565.0] ESTIMATE",
      "mock_003": "[-Infinity, Infinity, 0.0, 12.0, 311.0] ESTIMATE",
      "mock_121": "[-Infinity, Infinity, 1.2291606188123095E-8, 0.9999999877083938, 3.0] ESTIMATE",
      "mock_014": "[-Infinity, Infinity, 0.0, 8.0, 3453770.0] ESTIMATE",
      "mock_111": "[-Infinity, Infinity, 0.0, 1.0, 3.0] ESTIMATE",
      "mock_089": "[-Infinity, Infinity, 0.0, 6.0, 1125.0] ESTIMATE",
      "mock_059": "[-Infinity, Infinity, 0.0, 7.95230918554345, 5852931.0] ESTIMATE",
      "mock_002": "[-Infinity, Infinity, 0.0, 4.508498525533348, 7423646.0] ESTIMATE",
      "mock_044": "[-Infinity, Infinity, 0.0, 25.0, 840542.0] ESTIMATE",
      "mock_034": "[-Infinity, Infinity, 0.0, 5.6289222664610925, 112913.0] ESTIMATE",
      "mock_077": "[-Infinity, Infinity, 0.0, 2.0, 15.0] ESTIMATE",
      "mock_052": "[-Infinity, Infinity, 0.0, 2.0, 37.0] ESTIMATE",
      "mock_131": "[-Infinity, Infinity, 0.0, 10.0, 1573.0] ESTIMATE",
      "mock_050": "[-Infinity, Infinity, 0.0, 1.9999994466284687, 2.0] ESTIMATE"
    },
    "db_mock_000.tbl_mock_143": {
      "mock_201": "[-Infinity, Infinity, 0.0, 12.0, 547014.0] ESTIMATE",
      "mock_183": "[-Infinity, Infinity, 0.0, 30.0, 254024.0] ESTIMATE"
    },
    "db_mock_000.tbl_mock_392": {
      "mock_394": "[-Infinity, Infinity, 0.0, 30.0, 14646.0] ESTIMATE",
      "mock_393": "[-Infinity, Infinity, 0.0, 8.0, 5.6492128E7] ESTIMATE"
    },
    "db_mock_000.tbl_mock_396": {
      "mock_413": "[-Infinity, Infinity, 0.0, 0.17391304347826086, 1.0] ESTIMATE",
      "mock_426": "[-Infinity, Infinity, 0.0, 1.391304347826087, 4.0] ESTIMATE",
      "mock_403": "[-Infinity, Infinity, 0.0, 0.43478260869565216, 2.0] ESTIMATE",
      "mock_408": "[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE",
      "mock_409": "[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE",
      "mock_398": "[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE",
      "mock_402": "[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE",
      "mock_406": "[-Infinity, Infinity, 0.0, 0.2608695652173913, 3.0] ESTIMATE",
      "mock_424": "[-Infinity, Infinity, 0.0, 1.0434782608695652, 2.0] ESTIMATE",
      "mock_423": "[-Infinity, Infinity, 0.0, 0.2608695652173913, 1.0] ESTIMATE",
      "mock_414": "[-Infinity, Infinity, 0.0, 0.30434782608695654, 1.0] ESTIMATE",
      "mock_404": "[-Infinity, Infinity, 0.0, 0.17391304347826086, 2.0] ESTIMATE",
      "mock_425": "[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE",
      "mock_397": "[-Infinity, Infinity, 0.0, 0.5217391304347826, 1.0] ESTIMATE",
      "mock_419": "[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE",
      "mock_416": "[-Infinity, Infinity, 0.0, 23.47826086956522, 18.0] ESTIMATE",
      "mock_417": "[-Infinity, Infinity, 0.0, 26.08695652173913, 20.0] ESTIMATE",
      "mock_405": "[-Infinity, Infinity, 0.0, 6.260869565217392, 18.0] ESTIMATE",
      "mock_410": "[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE",
      "mock_401": "[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE",
      "mock_418": "[-Infinity, Infinity, 0.0, 0.6956521739130435, 2.0] ESTIMATE",
      "mock_407": "[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE",
      "mock_411": "[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE",
      "mock_412": "[-Infinity, Infinity, 0.0, 0.13043478260869565, 1.0] ESTIMATE",
      "mock_400": "[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE",
      "mock_415": "[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE",
      "mock_427": "[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE",
      "mock_421": "[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE",
      "mock_428": "[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE",
      "mock_422": "[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE",
      "mock_420": "[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE",
      "mock_399": "[-Infinity, Infinity, 0.0, 0.43478260869565216, 1.0] ESTIMATE",
      "mock_429": "[-7010640.0, 7010640.0, 0.0, 8.0, 23.0] ESTIMATE"
    },
    "db_mock_000.tbl_mock_296": {
      "mock_332": "[-Infinity, Infinity, 0.0, 40.0, 184301.0] ESTIMATE",
      "mock_333": "[-Infinity, Infinity, 0.0, 7.394778405392735, 220134.0] ESTIMATE"
    }
  },
  "explain_info": "PLAN FRAGMENT 0(F01)\n  Output Exprs:18: mock_088 | 487: concat | 23: mock_109 | 19: mock_089 | 20: mock_127 | 152: mock_183 | 486: mock_394 | 36: mock_064 | 37: mock_065 | 488: expr | 27: mock_047 | 28: mock_048 | 3: mock_059 | 14: mock_046 | 9: mock_076 | 97: mock_131 | 2: mock_051 | 10: mock_077 | 7: mock_087 | 48: mock_034 | 489: trim | 105: mock_003 | 490: trim | 35: mock_121 | 17: mock_014 | 8: mock_111 | 40: mock_118 | 21: mock_123 | 22: mock_124 | 39: mock_117 | 84: mock_052 | 52: mock_036 | 134: mock_044\n  Input Partition: UNPARTITIONED\n  RESULT SINK\n\n  2:EXCHANGE\n     cardinality: 23\n\nPLAN FRAGMENT 1(F00)\n\n  Input Partition: RANDOM\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 02\n\n  1:Project\n  |  output columns:\n  |  2 <-> [507: mock_406, VARCHAR, false]\n  |  3 <-> [503: mock_405, VARCHAR, false]\n  |  7 <-> [509: mock_404, VARCHAR, false]\n  |  8 <-> [516: mock_419, VARCHAR, true]\n  |  9 <-> [505: mock_414, VARCHAR, true]\n  |  10 <-> [508: mock_415, VARCHAR, true]\n  |  14 <-> [504: mock_403, VARCHAR, true]\n  |  17 <-> [515: mock_426, VARCHAR, true]\n  |  18 <-> [491: mock_424, VARCHAR, true]\n  |  19 <-> [494: mock_423, VARCHAR, true]\n  |  20 <-> [495: mock_418, VARCHAR, true]\n  |  21 <-> [518: mock_410, VARCHAR, true]\n  |  22 <-> [519: mock_411, VARCHAR, true]\n  |  23 <-> [493: mock_420, VARCHAR, true]\n  |  27 <-> [501: mock_412, VARCHAR, true]\n  |  28 <-> [502: mock_421, VARCHAR, true]\n  |  35 <-> [514: mock_428, VARCHAR, true]\n  |  36 <-> [498: mock_416, VARCHAR, true]\n  |  37 <-> [499: mock_417, VARCHAR, true]\n  |  39 <-> [520: mock_407, VARCHAR, true]\n  |  40 <-> [517: mock_422, VARCHAR, true]\n  |  48 <-> [510: mock_401, VARCHAR, true]\n  |  52 <-> [522: mock_427, VARCHAR, true]\n  |  84 <-> [521: mock_408, VARCHAR, true]\n  |  97 <-> [506: mock_399, VARCHAR, true]\n  |  105 <-> [512: mock_397, VARCHAR, true]\n  |  134 <-> [523: mock_409, VARCHAR, true]\n  |  152 <-> [496: mock_425, VARCHAR, true]\n  |  486 <-> [497: mock_400, VARCHAR, true]\n  |  487 <-> [492: mock_413, VARCHAR, true]\n  |  488 <-> [500: mock_429, DOUBLE, true]\n  |  489 <-> [511: mock_402, VARCHAR, true]\n  |  490 <-> [513: mock_398, VARCHAR, true]\n  |  cardinality: 23\n  |  column statistics: \n  |  * mock_051-->[-Infinity, Infinity, 0.0, 0.2608695652173913, 3.0] ESTIMATE\n  |  * mock_059-->[-Infinity, Infinity, 0.0, 6.260869565217392, 18.0] ESTIMATE\n  |  * mock_087-->[-Infinity, Infinity, 0.0, 0.17391304347826086, 2.0] ESTIMATE\n  |  * mock_111-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n  |  * mock_076-->[-Infinity, Infinity, 0.0, 0.30434782608695654, 1.0] ESTIMATE\n  |  * mock_077-->[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE\n  |  * mock_046-->[-Infinity, Infinity, 0.0, 0.43478260869565216, 2.0] ESTIMATE\n  |  * mock_014-->[-Infinity, Infinity, 0.0, 1.391304347826087, 4.0] ESTIMATE\n  |  * mock_088-->[-Infinity, Infinity, 0.0, 1.0434782608695652, 2.0] ESTIMATE\n  |  * mock_089-->[-Infinity, Infinity, 0.0, 0.2608695652173913, 1.0] ESTIMATE\n  |  * mock_127-->[-Infinity, Infinity, 0.0, 0.6956521739130435, 2.0] ESTIMATE\n  |  * mock_123-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n  |  * mock_124-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n  |  * mock_109-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n  |  * mock_047-->[-Infinity, Infinity, 0.0, 0.13043478260869565, 1.0] ESTIMATE\n  |  * mock_048-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n  |  * mock_121-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n  |  * mock_064-->[-Infinity, Infinity, 0.0, 23.47826086956522, 18.0] ESTIMATE\n  |  * mock_065-->[-Infinity, Infinity, 0.0, 26.08695652173913, 20.0] ESTIMATE\n  |  * mock_117-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n  |  * mock_118-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n  |  * mock_034-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n  |  * mock_036-->[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE\n  |  * mock_131-->[-Infinity, Infinity, 0.0, 0.43478260869565216, 1.0] ESTIMATE\n  |  * mock_003-->[-Infinity, Infinity, 0.0, 0.5217391304347826, 1.0] ESTIMATE\n  |  * mock_044-->[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE\n  |  * mock_183-->[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE\n  |  * mock_394-->[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE\n  |  * concat-->[-Infinity, Infinity, 0.0, 0.17391304347826086, 1.0] ESTIMATE\n  |  * expr-->[-7010640.0, 7010640.0, 0.0, 8.0, 23.0] ESTIMATE\n  |  * trim-->[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE\n  |  * trim-->[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE\n  |  \n  0:OlapScanNode\n     table: mock_396, rollup: mock_396\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=4/4\n     tabletList=32228,32233,32238,32243\n     actualRows=23, avgRowSize=157.04347\n     MaterializedView: true\n     cardinality: 23\n     column statistics: \n     * mock_051-->[-Infinity, Infinity, 0.0, 0.2608695652173913, 3.0] ESTIMATE\n     * mock_059-->[-Infinity, Infinity, 0.0, 6.260869565217392, 18.0] ESTIMATE\n     * mock_087-->[-Infinity, Infinity, 0.0, 0.17391304347826086, 2.0] ESTIMATE\n     * mock_111-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_076-->[-Infinity, Infinity, 0.0, 0.30434782608695654, 1.0] ESTIMATE\n     * mock_077-->[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE\n     * mock_046-->[-Infinity, Infinity, 0.0, 0.43478260869565216, 2.0] ESTIMATE\n     * mock_014-->[-Infinity, Infinity, 0.0, 1.391304347826087, 4.0] ESTIMATE\n     * mock_088-->[-Infinity, Infinity, 0.0, 1.0434782608695652, 2.0] ESTIMATE\n     * mock_089-->[-Infinity, Infinity, 0.0, 0.2608695652173913, 1.0] ESTIMATE\n     * mock_127-->[-Infinity, Infinity, 0.0, 0.6956521739130435, 2.0] ESTIMATE\n     * mock_123-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n     * mock_124-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_109-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_047-->[-Infinity, Infinity, 0.0, 0.13043478260869565, 1.0] ESTIMATE\n     * mock_048-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_121-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_064-->[-Infinity, Infinity, 0.0, 23.47826086956522, 18.0] ESTIMATE\n     * mock_065-->[-Infinity, Infinity, 0.0, 26.08695652173913, 20.0] ESTIMATE\n     * mock_117-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n     * mock_118-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n     * mock_034-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_036-->[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE\n     * mock_131-->[-Infinity, Infinity, 0.0, 0.43478260869565216, 1.0] ESTIMATE\n     * mock_003-->[-Infinity, Infinity, 0.0, 0.5217391304347826, 1.0] ESTIMATE\n     * mock_044-->[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE\n     * mock_183-->[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE\n     * mock_394-->[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE\n     * concat-->[-Infinity, Infinity, 0.0, 0.17391304347826086, 1.0] ESTIMATE\n     * expr-->[-7010640.0, 7010640.0, 0.0, 8.0, 23.0] ESTIMATE\n     * trim-->[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE\n     * trim-->[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE\n     * mock_424-->[-Infinity, Infinity, 0.0, 1.0434782608695652, 2.0] ESTIMATE\n     * mock_413-->[-Infinity, Infinity, 0.0, 0.17391304347826086, 1.0] ESTIMATE\n     * mock_420-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_423-->[-Infinity, Infinity, 0.0, 0.2608695652173913, 1.0] ESTIMATE\n     * mock_418-->[-Infinity, Infinity, 0.0, 0.6956521739130435, 2.0] ESTIMATE\n     * mock_425-->[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE\n     * mock_400-->[-Infinity, Infinity, 0.0, 2.608695652173913, 2.0] ESTIMATE\n     * mock_416-->[-Infinity, Infinity, 0.0, 23.47826086956522, 18.0] ESTIMATE\n     * mock_417-->[-Infinity, Infinity, 0.0, 26.08695652173913, 20.0] ESTIMATE\n     * mock_429-->[-7010640.0, 7010640.0, 0.0, 8.0, 23.0] ESTIMATE\n     * mock_412-->[-Infinity, Infinity, 0.0, 0.13043478260869565, 1.0] ESTIMATE\n     * mock_421-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_405-->[-Infinity, Infinity, 0.0, 6.260869565217392, 18.0] ESTIMATE\n     * mock_403-->[-Infinity, Infinity, 0.0, 0.43478260869565216, 2.0] ESTIMATE\n     * mock_414-->[-Infinity, Infinity, 0.0, 0.30434782608695654, 1.0] ESTIMATE\n     * mock_399-->[-Infinity, Infinity, 0.0, 0.43478260869565216, 1.0] ESTIMATE\n     * mock_406-->[-Infinity, Infinity, 0.0, 0.2608695652173913, 3.0] ESTIMATE\n     * mock_415-->[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE\n     * mock_404-->[-Infinity, Infinity, 0.0, 0.17391304347826086, 2.0] ESTIMATE\n     * mock_401-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_402-->[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE\n     * mock_397-->[-Infinity, Infinity, 0.0, 0.5217391304347826, 1.0] ESTIMATE\n     * mock_398-->[-Infinity, Infinity, 1.0, 0.0, 1.0] ESTIMATE\n     * mock_428-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_426-->[-Infinity, Infinity, 0.0, 1.391304347826087, 4.0] ESTIMATE\n     * mock_419-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_422-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n     * mock_410-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n     * mock_411-->[-Infinity, Infinity, 0.0, 0.043478260869565216, 1.0] ESTIMATE\n     * mock_407-->[-Infinity, Infinity, 0.0, 0.34782608695652173, 1.0] ESTIMATE\n     * mock_408-->[-Infinity, Infinity, 0.0, 0.08695652173913043, 1.0] ESTIMATE\n     * mock_427-->[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE\n     * mock_409-->[-Infinity, Infinity, 0.0, 1.0869565217391304, 1.0] ESTIMATE\n",
  "session_variables": "{\"partial_update_mode\":\"auto\",\"cbo_cte_reuse\":true,\"character_set_connection\":\"utf8\",\"cbo_use_correlated_join_estimate\":true,\"enable_insert_strict\":true,\"enable_connector_adaptive_io_tasks\":true,\"tx_isolation\":\"REPEATABLE-READ\",\"enable_hive_metadata_cache_with_insert\":false,\"cbo_cte_reuse_rate_v2\":1.15,\"character_set_results\":\"utf8\",\"enable_count_star_optimization\":true,\"global_runtime_filter_build_min_size\":131072,\"enable_iceberg_identity_column_optimize\":true,\"query_excluding_mv_names\":\"\",\"enable_rewrite_simple_agg_to_meta_scan\":false,\"enable_adaptive_sink_dop\":true,\"consistent_hash_virtual_number\":32,\"enable_profile\":true,\"load_mem_limit\":0,\"large_decimal_underlying_type\":\"panic\",\"sql_safe_updates\":0,\"runtime_filter_early_return_selectivity\":0.05,\"enable_local_shuffle_agg\":true,\"disable_function_fold_constants\":false,\"select_ratio_threshold\":0.15,\"query_delivery_timeout\":300,\"collation_database\":\"utf8_general_ci\",\"spill_mem_table_size\":104857600,\"cbo_use_lock_db\":false,\"new_planner_agg_stage\":0,\"hash_join_interpolate_passthrough\":false,\"use_compute_nodes\":-1,\"collation_connection\":\"utf8_general_ci\",\"resource_group\":\"\",\"profile_limit_fold\":true,\"enable_materialized_view_plan_cache\":true,\"spill_operator_max_bytes\":1048576000,\"cbo_max_reorder_node_use_dp\":10,\"enable_hive_column_stats\":true,\"enable_async_profile\":true,\"enable_groupby_use_output_alias\":false,\"forward_to_leader\":false,\"count_distinct_column_buckets\":1024,\"query_cache_agg_cardinality_limit\":5000000,\"enable_pipeline_query_statistic\":true,\"cboPushDownAggregateMode_v1\":-1,\"window_partition_mode\":1,\"enable_deliver_batch_fragments\":true,\"enable_tablet_internal_parallel_v2\":false,\"interpolate_passthrough\":true,\"enable_incremental_mv\":false,\"cbo_push_down_topn_limit\":0,\"SQL_AUTO_IS_NULL\":false,\"event_scheduler\":\"OFF\",\"max_pipeline_dop\":64,\"broadcast_right_table_scale_factor\":10,\"materialized_view_rewrite_mode\":\"DEFAULT\",\"enable_simplify_case_when\":true,\"runtime_join_filter_push_down_limit\":1024000,\"big_query_log_cpu_second_threshold\":480,\"div_precision_increment\":4,\"runtime_adaptive_dop_max_block_rows_per_driver_seq\":16384,\"log_rejected_record_num\":0,\"cbo_push_down_distinct_below_window\":true,\"sql_mode_v2\":32,\"prefer_cte_rewrite\":false,\"hdfs_backend_selector_scan_range_shuffle\":false,\"pipeline_profile_level\":1,\"parallel_fragment_exec_instance_num\":1,\"max_scan_key_num\":-1,\"net_read_timeout\":60,\"streaming_preaggregation_mode\":\"auto\",\"hive_partition_stats_sample_size\":3000,\"enable_mv_planner\":false,\"enable_collect_table_level_scan_stats\":true,\"profile_timeout\":2,\"cbo_push_down_aggregate\":\"global\",\"spill_encode_level\":7,\"enable_query_dump\":false,\"global_runtime_filter_build_max_size\":67108864,\"enable_rewrite_sum_by_associative_rule\":true,\"query_cache_hot_partition_num\":3,\"enable_prune_complex_types\":true,\"query_cache_type\":0,\"max_parallel_scan_instance_num\":-1,\"query_cache_entry_max_rows\":409600,\"enable_mv_optimizer_trace_log\":false,\"connector_io_tasks_per_scan_operator\":16,\"enable_materialized_view_union_rewrite\":true,\"sql_quote_show_create\":true,\"scan_or_to_union_threshold\":50000000,\"enable_exchange_pass_through\":true,\"runtime_profile_report_interval\":10,\"query_cache_entry_max_bytes\":4194304,\"enable_partition_column_value_only_optimization\":true,\"enable_iceberg_ndv\":true,\"enable_exchange_perf\":false,\"workgroup_id\":0,\"enable_rewrite_groupingsets_to_union_all\":false,\"transmission_compression_type\":\"NO_COMPRESSION\",\"interactive_timeout\":3600,\"use_page_cache\":true,\"big_query_log_scan_bytes_threshold\":10737418240,\"collation_server\":\"utf8_general_ci\",\"tablet_internal_parallel_mode\":\"auto\",\"enable_pipeline\":true,\"spill_mode\":\"auto\",\"enable_query_debug_trace\":false,\"enable_show_all_variables\":false,\"full_sort_max_buffered_bytes\":16777216,\"wait_timeout\":28800,\"enable_query_tablet_affinity\":false,\"transmission_encode_level\":7,\"query_including_mv_names\":\"\",\"transaction_isolation\":\"REPEATABLE-READ\",\"enable_global_runtime_filter\":true,\"enable_load_profile\":false,\"enable_plan_validation\":true,\"load_transmission_compression_type\":\"NO_COMPRESSION\",\"cbo_enable_low_cardinality_optimize\":true,\"scan_use_query_mem_ratio\":0.3,\"new_planner_optimize_timeout\":3000,\"enable_outer_join_reorder\":true,\"force_schedule_local\":false,\"hudi_mor_force_jni_reader\":false,\"full_sort_late_materialization\":false,\"cbo_enable_greedy_join_reorder\":true,\"range_pruner_max_predicate\":100,\"enable_rbo_table_prune\":false,\"spillable_operator_mask\":-1,\"rpc_http_min_size\":2147482624,\"cbo_debug_alive_backend_number\":0,\"global_runtime_filter_probe_min_size\":102400,\"scan_or_to_union_limit\":4,\"enable_cbo_table_prune\":false,\"enable_parallel_merge\":true,\"nested_mv_rewrite_max_level\":3,\"net_write_timeout\":60,\"cbo_prune_shuffle_column_rate\":0.1,\"enable_persistent_index_by_default\":true,\"hash_join_push_down_right_table\":true,\"pipeline_sink_dop\":0,\"broadcast_row_limit\":15000000,\"enable_populate_block_cache\":true,\"exec_mem_limit\":2147483648,\"enable_sort_aggregate\":false,\"query_cache_force_populate\":false,\"runtime_filter_on_exchange_node\":false,\"disable_join_reorder\":false,\"enable_rule_based_materialized_view_rewrite\":true,\"connector_scan_use_query_mem_ratio\":0.3,\"net_buffer_length\":16384,\"cbo_prune_subfield\":true,\"full_sort_max_buffered_rows\":1024000,\"query_timeout\":1800,\"connector_io_tasks_slow_io_latency_ms\":50,\"cbo_max_reorder_node\":50,\"enable_distinct_column_bucketization\":false,\"enable_big_query_log\":true,\"analyze_mv\":\"sample\",\"runtime_filter_scan_wait_time\":20,\"enable_sync_materialized_view_rewrite\":true,\"prefer_compute_node\":false,\"enable_strict_type\":false,\"enable_table_prune_on_update\":false,\"group_concat_max_len\":1024,\"parse_tokens_limit\":3500000,\"chunk_size\":4096,\"global_runtime_filter_probe_min_selectivity\":0.5,\"query_mem_limit\":0,\"enable_filter_unused_columns_in_scan_stage\":true,\"enable_scan_block_cache\":false,\"enable_materialized_view_single_table_view_delta_rewrite\":false,\"enable_prune_complex_types_in_unnest\":true,\"auto_increment_increment\":1,\"sql_dialect\":\"StarRocks\",\"big_query_log_scan_rows_threshold\":1000000000,\"character_set_client\":\"utf8\",\"autocommit\":true,\"enable_column_expr_predicate\":true,\"enable_runtime_adaptive_dop\":false,\"cbo_cte_max_limit\":10,\"storage_engine\":\"olap\",\"enable_optimizer_trace_log\":false,\"spill_operator_min_bytes\":10485760,\"cbo_enable_dp_join_reorder\":true,\"tx_visible_wait_timeout\":10,\"enable_materialized_view_view_delta_rewrite\":true,\"cbo_max_reorder_node_use_exhaustive\":4,\"enable_sql_digest\":false,\"spill_mem_table_num\":2,\"enable_spill\":false,\"enable_materialized_view_rewrite_greedy_mode\":false,\"pipeline_dop\":1,\"single_node_exec_plan\":false,\"join_implementation_mode_v2\":\"auto\",\"sql_select_limit\":9223372036854775807,\"enable_materialized_view_rewrite\":true,\"statistic_collect_parallel\":1,\"hdfs_backend_selector_hash_algorithm\":\"consistent\",\"enable_expr_prune_partition\":true,\"enable_topn_runtime_filter\":true,\"disable_colocate_join\":false,\"max_pushdown_conditions_per_column\":-1,\"default_table_compression\":\"lz4_frame\",\"runtime_adaptive_dop_max_output_amplification_factor\":0,\"choose_execute_instances_mode\":\"ADAPTIVE_DECREASE\",\"innodb_read_only\":true,\"spill_mem_limit_threshold\":0.8,\"cbo_reorder_threshold_use_exhaustive\":6,\"enable_predicate_reorder\":false,\"enable_query_cache\":false,\"max_allowed_packet\":33554432,\"time_zone\":\"Asia/Shanghai\",\"enable_multicolumn_global_runtime_filter\":false,\"character_set_server\":\"utf8\",\"cbo_use_nth_exec_plan\":0,\"io_tasks_per_scan_operator\":4,\"parallel_exchange_instance_num\":-1,\"enable_shared_scan\":false,\"cbo_derive_range_join_predicate\":false,\"allow_default_partition\":false}",
  "be_number": 6,
  "be_core_stat": {
    "numOfHardwareCoresPerBe": "{\"10387\":16,\"10004\":16,\"10756\":16,\"10005\":16,\"10006\":16,\"10362\":16}",
    "cachedAvgNumOfHardwareCores": 16
  },
  "exception": [],
  "version": "3.1.4-ee",
  "commit_version": "c6dcf77"
}