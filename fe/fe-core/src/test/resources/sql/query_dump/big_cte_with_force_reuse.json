{"statement":"WITH tbl_mock_198 (mock_197) AS (SELECT 1 AS mock_197) , tbl_mock_206 (mock_028, mock_030, mock_200, mock_201, mock_202, mock_203, mock_204, mock_205, mock_034, id, mock_039, mock_042, mock_022, mock_007, mock_021, mock_006, mock_017, mock_024, mock_018, mock_023, mock_020) AS (SELECT tbl_mock_208.mock_028, tbl_mock_208.mock_030, (((tbl_mock_208.mock_055 + tbl_mock_208.mock_042) + (CASE WHEN (tbl_mock_208.mock_046 IS NULL) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_208.mock_046 END)) * (CAST(365 AS BIGINT))) / (CASE WHEN (((tbl_mock_208.mock_005 IS NULL) OR (tbl_mock_208.mock_005 < (CAST(0 AS BIGINT)))) AND (tbl_mock_208.mock_054 != 'N')) THEN NULL ELSE tbl_mock_208.mock_005 END) AS mock_200, tbl_mock_208.mock_035 * (CAST(0 AS BIGINT)) AS mock_201, xx_hash3_64(tbl_mock_208.mock_058) AS mock_202, xx_hash3_64(tbl_mock_208.mock_043) AS mock_203, xx_hash3_64(tbl_mock_208.mock_002, tbl_mock_208.mock_039) AS mock_204, xx_hash3_64(tbl_mock_208.mock_039, tbl_mock_208.mock_052) AS mock_205, tbl_mock_208.mock_034, tbl_mock_208.id, tbl_mock_208.mock_039, tbl_mock_208.mock_042, tbl_mock_208.mock_022, tbl_mock_208.mock_007, tbl_mock_208.mock_021, tbl_mock_208.mock_006, tbl_mock_208.mock_017, tbl_mock_208.mock_024, tbl_mock_208.mock_018, tbl_mock_208.mock_023, tbl_mock_208.mock_020\nFROM db_mock_000.tbl_mock_001 AS tbl_mock_208) , tbl_mock_001 (mock_028, mock_030, mock_209, mock_210, mock_202, mock_203, mock_204, mock_205, mock_034, id, mock_039, mock_042, mock_021, mock_006, mock_024, mock_020, mock_018, mock_023, mock_007, mock_017, mock_022) AS (SELECT tbl_mock_211.mock_028, tbl_mock_211.mock_030, tbl_mock_211.mock_201 * (CAST(3 AS BIGINT)) AS mock_209, tbl_mock_211.mock_200 < (CASE WHEN (((CAST(365000000000 AS BIGINT)) / (CAST(12 AS BIGINT))) > (CAST(0 AS BIGINT))) THEN ((CAST(365000000000 AS BIGINT)) / (CAST(12 AS BIGINT))) ELSE (CAST(9999999999999 AS BIGINT)) END) AS mock_210, tbl_mock_211.mock_202, tbl_mock_211.mock_203, tbl_mock_211.mock_204, tbl_mock_211.mock_205, tbl_mock_211.mock_034, tbl_mock_211.id, tbl_mock_211.mock_039, tbl_mock_211.mock_042, tbl_mock_211.mock_021, tbl_mock_211.mock_006, tbl_mock_211.mock_024, tbl_mock_211.mock_020, tbl_mock_211.mock_018, tbl_mock_211.mock_023, tbl_mock_211.mock_007, tbl_mock_211.mock_017, tbl_mock_211.mock_022\nFROM tbl_mock_206 AS tbl_mock_211) , tbl_mock_215 (mock_212, mock_213, mock_214) AS (SELECT tbl_mock_216.mock_071 AS mock_212, tbl_mock_217.mock_133 AS mock_213, tbl_mock_218.mock_148 AS mock_214\nFROM db_mock_000.tbl_mock_065 AS tbl_mock_216 LEFT OUTER JOIN db_mock_000.tbl_mock_125 AS tbl_mock_217 ON tbl_mock_216.mock_077 = tbl_mock_217.mock_077 LEFT OUTER JOIN db_mock_000.tbl_mock_136 AS tbl_mock_218 ON tbl_mock_216.mock_075 = tbl_mock_218.mock_075) , tbl_mock_239 (mock_219, mock_220, mock_221, mock_222, mock_223, mock_224, mock_225, mock_226, mock_227, mock_228, mock_229, mock_230, mock_231, mock_232, mock_233, mock_234, mock_235, mock_236, mock_237, mock_238, mock_006, mock_007) AS (SELECT tbl_mock_240.mock_209 AS mock_219, tbl_mock_243.mock_157 AS mock_220, tbl_mock_244.mock_157 AS mock_221, tbl_mock_241.mock_213 AS mock_222, tbl_mock_242.mock_133 AS mock_223, tbl_mock_241.mock_214 AS mock_224, tbl_mock_240.mock_034 AS mock_225, tbl_mock_240.mock_017 AS mock_226, tbl_mock_240.mock_024 AS mock_227, tbl_mock_240.mock_021 AS mock_228, tbl_mock_240.mock_018 AS mock_229, tbl_mock_240.mock_023 AS mock_230, tbl_mock_240.mock_022 AS mock_231, tbl_mock_240.mock_020 AS mock_232, tbl_mock_240.mock_210 AS mock_233, tbl_mock_240.id AS mock_234, tbl_mock_240.mock_039 AS mock_235, tbl_mock_240.mock_042 AS mock_236, tbl_mock_240.mock_204 AS mock_237, tbl_mock_240.mock_205 AS mock_238, tbl_mock_240.mock_006, tbl_mock_240.mock_007\nFROM tbl_mock_001 AS tbl_mock_240 LEFT OUTER JOIN tbl_mock_215 AS tbl_mock_241 ON tbl_mock_240.mock_028 = tbl_mock_241.mock_212 LEFT OUTER JOIN db_mock_000.tbl_mock_154 AS tbl_mock_242 ON tbl_mock_240.mock_030 = tbl_mock_242.mock_030 LEFT OUTER JOIN db_mock_000.tbl_mock_156 AS tbl_mock_243 ON tbl_mock_240.mock_202 = tbl_mock_243.mock_177 LEFT OUTER JOIN db_mock_000.tbl_mock_188 AS tbl_mock_244 ON tbl_mock_240.mock_203 = tbl_mock_244.mock_189) , tbl_mock_249 (mock_219, mock_224, mock_226, mock_227, mock_228, mock_229, mock_230, mock_231, mock_232, mock_233, mock_234, mock_236, mock_237, mock_238, mock_245, mock_246, mock_247, mock_248, mock_007, mock_006) AS (SELECT tbl_mock_250.mock_219, tbl_mock_250.mock_224, tbl_mock_250.mock_226, tbl_mock_250.mock_227, tbl_mock_250.mock_228, tbl_mock_250.mock_229, tbl_mock_250.mock_230, tbl_mock_250.mock_231, tbl_mock_250.mock_232, tbl_mock_250.mock_233, tbl_mock_250.mock_234, tbl_mock_250.mock_236, tbl_mock_250.mock_237, tbl_mock_250.mock_238, CASE tbl_mock_250.mock_222 WHEN tbl_mock_250.mock_223 THEN tbl_mock_250.mock_235 ELSE NULL END AS mock_245, CASE WHEN (tbl_mock_250.mock_222 != tbl_mock_250.mock_223) THEN tbl_mock_250.mock_235 ELSE NULL END AS mock_246, tbl_mock_250.mock_225 = tbl_mock_250.mock_220 AS mock_247, tbl_mock_250.mock_225 = tbl_mock_250.mock_221 AS mock_248, tbl_mock_250.mock_007, tbl_mock_250.mock_006\nFROM tbl_mock_239 AS tbl_mock_250) , tbl_mock_254 (mock_219, mock_224, mock_226, mock_227, mock_228, mock_229, mock_230, mock_231, mock_232, mock_233, mock_234, mock_236, mock_237, mock_238, mock_251, mock_247, mock_248, mock_252, mock_253) AS (SELECT tbl_mock_255.mock_219, tbl_mock_255.mock_224, tbl_mock_255.mock_226, tbl_mock_255.mock_227, tbl_mock_255.mock_228, tbl_mock_255.mock_229, tbl_mock_255.mock_230, tbl_mock_255.mock_231, tbl_mock_255.mock_232, tbl_mock_255.mock_233, tbl_mock_255.mock_234, tbl_mock_255.mock_236, tbl_mock_255.mock_237, tbl_mock_255.mock_238, (((((((tbl_mock_255.mock_227 AND tbl_mock_255.mock_228) AND tbl_mock_255.mock_229) AND tbl_mock_255.mock_230) AND tbl_mock_255.mock_226) AND tbl_mock_255.mock_231) AND tbl_mock_255.mock_247) AND tbl_mock_255.mock_248) AND tbl_mock_255.mock_232 AS mock_251, tbl_mock_255.mock_247, tbl_mock_255.mock_248, CASE WHEN (tbl_mock_255.mock_245 IS NULL) THEN NULL ELSE tbl_mock_255.mock_007 END AS mock_252, CASE WHEN (tbl_mock_255.mock_246 IS NULL) THEN NULL ELSE tbl_mock_255.mock_006 END AS mock_253\nFROM tbl_mock_249 AS tbl_mock_255) , tbl_mock_259 (mock_219, mock_224, mock_226, mock_227, mock_228, mock_229, mock_230, mock_231, mock_232, mock_233, mock_234, mock_237, mock_238, mock_256, mock_257, mock_258, mock_247, mock_248, mock_252, mock_253) AS (SELECT tbl_mock_260.mock_219, tbl_mock_260.mock_224, tbl_mock_260.mock_226, tbl_mock_260.mock_227, tbl_mock_260.mock_228, tbl_mock_260.mock_229, tbl_mock_260.mock_230, tbl_mock_260.mock_231, tbl_mock_260.mock_232, tbl_mock_260.mock_233, tbl_mock_260.mock_234, tbl_mock_260.mock_237, tbl_mock_260.mock_238, CASE tbl_mock_260.mock_252 WHEN (CAST(1 AS BIGINT)) THEN tbl_mock_260.mock_236 ELSE (CAST(0 AS BIGINT)) END AS mock_256, CASE tbl_mock_260.mock_253 WHEN (CAST(1 AS BIGINT)) THEN tbl_mock_260.mock_236 ELSE (CAST(0 AS BIGINT)) END AS mock_257, tbl_mock_260.mock_251 AS mock_258, tbl_mock_260.mock_247, tbl_mock_260.mock_248, tbl_mock_260.mock_252, tbl_mock_260.mock_253\nFROM tbl_mock_254 AS tbl_mock_260) , tbl_mock_264 (mock_261, mock_262, mock_263, mock_237, mock_238) AS (SELECT CASE WHEN tbl_mock_265.mock_258 THEN tbl_mock_265.mock_256 ELSE NULL END AS mock_261, tbl_mock_265.mock_258 AS mock_262, CASE WHEN tbl_mock_265.mock_258 THEN tbl_mock_265.mock_257 ELSE NULL END AS mock_263, tbl_mock_265.mock_237, tbl_mock_265.mock_238\nFROM tbl_mock_259 AS tbl_mock_265) , tbl_mock_266 (mock_237, mock_261) AS (SELECT tbl_mock_267.mock_237, tbl_mock_267.mock_261\nFROM tbl_mock_264 AS tbl_mock_267\nWHERE (tbl_mock_267.mock_237 IS NOT NULL) AND tbl_mock_267.mock_262) , tbl_mock_269 (mock_237, mock_268) AS (SELECT tbl_mock_267.mock_237, sum(tbl_mock_267.mock_261) AS mock_268\nFROM tbl_mock_266 AS tbl_mock_267\nGROUP BY tbl_mock_267.mock_237) , tbl_mock_270 (mock_238, mock_261, mock_263) AS (SELECT tbl_mock_271.mock_238, tbl_mock_271.mock_261, tbl_mock_271.mock_263\nFROM tbl_mock_264 AS tbl_mock_271\nWHERE (tbl_mock_271.mock_238 IS NOT NULL) AND (tbl_mock_271.mock_262 OR tbl_mock_271.mock_262)) , tbl_mock_274 (mock_238, mock_272, mock_273) AS (SELECT tbl_mock_271.mock_238, sum(tbl_mock_271.mock_261) AS mock_272, sum(tbl_mock_271.mock_263) AS mock_273\nFROM tbl_mock_270 AS tbl_mock_271\nGROUP BY tbl_mock_271.mock_238) , tbl_mock_277 (mock_275, mock_276) AS (SELECT tbl_mock_279.mock_268 AS mock_275, tbl_mock_278.mock_191 AS mock_276\nFROM db_mock_000.tbl_mock_190 AS tbl_mock_278 LEFT OUTER JOIN tbl_mock_269 AS tbl_mock_279 ON tbl_mock_278.mock_191 = tbl_mock_279.mock_237) , tbl_mock_283 (mock_280, mock_281, mock_282) AS (SELECT tbl_mock_285.mock_272 AS mock_280, tbl_mock_285.mock_273 AS mock_281, tbl_mock_284.mock_193 AS mock_282\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_284 LEFT OUTER JOIN tbl_mock_274 AS tbl_mock_285 ON tbl_mock_284.mock_193 = tbl_mock_285.mock_238) , tbl_mock_308 (mock_286, mock_287, mock_288, mock_289, mock_290, mock_291, mock_292, mock_293, mock_294, mock_295, mock_296, mock_297, mock_298, mock_299, mock_300, mock_301, mock_302, mock_303, mock_304, mock_305, mock_306, mock_307) AS (SELECT tbl_mock_309.mock_219 AS mock_286, tbl_mock_309.mock_256 AS mock_287, tbl_mock_309.mock_257 AS mock_288, tbl_mock_310.mock_275 AS mock_289, tbl_mock_311.mock_280 AS mock_290, tbl_mock_311.mock_281 AS mock_291, tbl_mock_309.mock_224 AS mock_292, tbl_mock_309.mock_226 AS mock_293, tbl_mock_309.mock_227 AS mock_294, tbl_mock_309.mock_228 AS mock_295, tbl_mock_309.mock_229 AS mock_296, tbl_mock_309.mock_230 AS mock_297, tbl_mock_309.mock_231 AS mock_298, tbl_mock_309.mock_247 AS mock_299, tbl_mock_309.mock_248 AS mock_300, tbl_mock_309.mock_232 AS mock_301, tbl_mock_309.mock_233 AS mock_302, tbl_mock_309.mock_234 AS mock_303, tbl_mock_309.mock_238 AS mock_304, tbl_mock_309.mock_237 AS mock_305, tbl_mock_309.mock_252 AS mock_306, tbl_mock_309.mock_253 AS mock_307\nFROM tbl_mock_259 AS tbl_mock_309 LEFT OUTER JOIN tbl_mock_277 AS tbl_mock_310 ON tbl_mock_309.mock_237 = tbl_mock_310.mock_276 LEFT OUTER JOIN tbl_mock_283 AS tbl_mock_311 ON tbl_mock_309.mock_238 = tbl_mock_311.mock_282) , tbl_mock_314 (mock_286, mock_287, mock_288, mock_292, mock_293, mock_294, mock_295, mock_296, mock_297, mock_298, mock_299, mock_300, mock_301, mock_302, mock_303, mock_304, mock_305, mock_306, mock_307, mock_312, mock_313) AS (SELECT tbl_mock_315.mock_286, tbl_mock_315.mock_287, tbl_mock_315.mock_288, tbl_mock_315.mock_292, tbl_mock_315.mock_293, tbl_mock_315.mock_294, tbl_mock_315.mock_295, tbl_mock_315.mock_296, tbl_mock_315.mock_297, tbl_mock_315.mock_298, tbl_mock_315.mock_299, tbl_mock_315.mock_300, tbl_mock_315.mock_301, tbl_mock_315.mock_302, tbl_mock_315.mock_303, tbl_mock_315.mock_304, tbl_mock_315.mock_305, tbl_mock_315.mock_306, tbl_mock_315.mock_307, CASE WHEN ((tbl_mock_315.mock_289 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_315.mock_306, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_315.mock_290 WHEN ((tbl_mock_315.mock_289 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_315.mock_306, CAST(0 AS BIGINT))) = (CAST(0 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_315.mock_291 END AS mock_312, CASE (CASE WHEN ((tbl_mock_315.mock_289 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_315.mock_306, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_315.mock_306 WHEN ((tbl_mock_315.mock_289 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_315.mock_306, CAST(0 AS BIGINT))) != (CAST(1 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_315.mock_307 END) WHEN (CAST(1 AS BIGINT)) THEN (CAST(1 AS BIGINT)) ELSE (CAST(0 AS BIGINT)) END AS mock_313\nFROM tbl_mock_308 AS tbl_mock_315) , tbl_mock_319 (mock_286, mock_287, mock_288, mock_292, mock_293, mock_294, mock_295, mock_296, mock_297, mock_298, mock_299, mock_300, mock_301, mock_302, mock_303, mock_304, mock_305, mock_306, mock_307, mock_316, mock_317, mock_318) AS (SELECT tbl_mock_320.mock_286, tbl_mock_320.mock_287, tbl_mock_320.mock_288, tbl_mock_320.mock_292, tbl_mock_320.mock_293, tbl_mock_320.mock_294, tbl_mock_320.mock_295, tbl_mock_320.mock_296, tbl_mock_320.mock_297, tbl_mock_320.mock_298, tbl_mock_320.mock_299, tbl_mock_320.mock_300, tbl_mock_320.mock_301, tbl_mock_320.mock_302, tbl_mock_320.mock_303, tbl_mock_320.mock_304, tbl_mock_320.mock_305, tbl_mock_320.mock_306, tbl_mock_320.mock_307, CASE WHEN (tbl_mock_320.mock_312 > tbl_mock_320.mock_286) THEN (tbl_mock_320.mock_312 * tbl_mock_320.mock_313) ELSE (CAST(0 AS BIGINT)) END AS mock_316, CASE tbl_mock_320.mock_313 WHEN (CAST(1 AS BIGINT)) THEN tbl_mock_320.mock_303 ELSE NULL END AS mock_317, (((((((tbl_mock_320.mock_294 AND tbl_mock_320.mock_295) AND tbl_mock_320.mock_296) AND tbl_mock_320.mock_297) AND tbl_mock_320.mock_293) AND tbl_mock_320.mock_298) AND tbl_mock_320.mock_299) AND tbl_mock_320.mock_300) AND tbl_mock_320.mock_301 AS mock_318\nFROM tbl_mock_314 AS tbl_mock_320) , tbl_mock_323 (mock_321, mock_322, mock_304) AS (SELECT CASE WHEN tbl_mock_324.mock_318 THEN tbl_mock_324.mock_317 ELSE NULL END AS mock_321, tbl_mock_324.mock_318 AS mock_322, tbl_mock_324.mock_304\nFROM tbl_mock_319 AS tbl_mock_324) , tbl_mock_325 (mock_304, mock_321) AS (SELECT tbl_mock_326.mock_304, tbl_mock_326.mock_321\nFROM tbl_mock_323 AS tbl_mock_326\nWHERE (tbl_mock_326.mock_304 IS NOT NULL) AND tbl_mock_326.mock_322) , tbl_mock_328 (mock_304, mock_327) AS (SELECT tbl_mock_326.mock_304, count(tbl_mock_326.mock_321) AS mock_327\nFROM tbl_mock_325 AS tbl_mock_326\nGROUP BY tbl_mock_326.mock_304) , tbl_mock_331 (mock_329, mock_330) AS (SELECT tbl_mock_333.mock_327 AS mock_329, tbl_mock_332.mock_193 AS mock_330\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_332 LEFT OUTER JOIN tbl_mock_328 AS tbl_mock_333 ON tbl_mock_332.mock_193 = tbl_mock_333.mock_304) , tbl_mock_335 (mock_330, mock_334) AS (SELECT tbl_mock_336.mock_330, coalesce(tbl_mock_336.mock_329, 0) AS mock_334\nFROM tbl_mock_331 AS tbl_mock_336) , tbl_mock_358 (mock_337, mock_338, mock_339, mock_340, mock_341, mock_342, mock_343, mock_344, mock_345, mock_346, mock_347, mock_348, mock_349, mock_350, mock_351, mock_352, mock_353, mock_354, mock_355, mock_356, mock_357) AS (SELECT tbl_mock_359.mock_316 AS mock_337, tbl_mock_359.mock_287 AS mock_338, tbl_mock_359.mock_288 AS mock_339, tbl_mock_359.mock_286 AS mock_340, tbl_mock_359.mock_292 AS mock_341, tbl_mock_359.mock_293 AS mock_342, tbl_mock_359.mock_294 AS mock_343, tbl_mock_359.mock_295 AS mock_344, tbl_mock_359.mock_296 AS mock_345, tbl_mock_359.mock_297 AS mock_346, tbl_mock_359.mock_298 AS mock_347, tbl_mock_359.mock_299 AS mock_348, tbl_mock_359.mock_300 AS mock_349, tbl_mock_359.mock_301 AS mock_350, tbl_mock_359.mock_302 AS mock_351, tbl_mock_359.mock_303 AS mock_352, tbl_mock_360.mock_334 AS mock_353, tbl_mock_359.mock_305 AS mock_354, tbl_mock_359.mock_304 AS mock_355, tbl_mock_359.mock_306 AS mock_356, tbl_mock_359.mock_307 AS mock_357\nFROM tbl_mock_319 AS tbl_mock_359 LEFT OUTER JOIN tbl_mock_335 AS tbl_mock_360 ON tbl_mock_359.mock_304 = tbl_mock_360.mock_330) , tbl_mock_362 (mock_338, mock_339, mock_340, mock_341, mock_342, mock_343, mock_344, mock_345, mock_346, mock_347, mock_348, mock_349, mock_350, mock_351, mock_352, mock_354, mock_355, mock_356, mock_357, mock_361) AS (SELECT tbl_mock_363.mock_338, tbl_mock_363.mock_339, tbl_mock_363.mock_340, tbl_mock_363.mock_341, tbl_mock_363.mock_342, tbl_mock_363.mock_343, tbl_mock_363.mock_344, tbl_mock_363.mock_345, tbl_mock_363.mock_346, tbl_mock_363.mock_347, tbl_mock_363.mock_348, tbl_mock_363.mock_349, tbl_mock_363.mock_350, tbl_mock_363.mock_351, tbl_mock_363.mock_352, tbl_mock_363.mock_354, tbl_mock_363.mock_355, tbl_mock_363.mock_356, tbl_mock_363.mock_357, tbl_mock_363.mock_337 / tbl_mock_363.mock_353 AS mock_361\nFROM tbl_mock_358 AS tbl_mock_363) , tbl_mock_365 (mock_338, mock_339, mock_340, mock_341, mock_342, mock_343, mock_344, mock_345, mock_346, mock_347, mock_348, mock_349, mock_350, mock_351, mock_352, mock_354, mock_355, mock_356, mock_357, mock_364) AS (SELECT tbl_mock_366.mock_338, tbl_mock_366.mock_339, tbl_mock_366.mock_340, tbl_mock_366.mock_341, tbl_mock_366.mock_342, tbl_mock_366.mock_343, tbl_mock_366.mock_344, tbl_mock_366.mock_345, tbl_mock_366.mock_346, tbl_mock_366.mock_347, tbl_mock_366.mock_348, tbl_mock_366.mock_349, tbl_mock_366.mock_350, tbl_mock_366.mock_351, tbl_mock_366.mock_352, tbl_mock_366.mock_354, tbl_mock_366.mock_355, tbl_mock_366.mock_356, tbl_mock_366.mock_357, NOT (tbl_mock_366.mock_361 IS NULL) AS mock_364\nFROM tbl_mock_362 AS tbl_mock_366) , tbl_mock_368 (mock_338, mock_339, mock_354, mock_355, mock_367) AS (SELECT tbl_mock_369.mock_338, tbl_mock_369.mock_339, tbl_mock_369.mock_354, tbl_mock_369.mock_355, (((((((((tbl_mock_369.mock_343 AND tbl_mock_369.mock_344) AND tbl_mock_369.mock_345) AND tbl_mock_369.mock_346) AND tbl_mock_369.mock_342) AND tbl_mock_369.mock_347) AND tbl_mock_369.mock_348) AND tbl_mock_369.mock_349) AND tbl_mock_369.mock_350) AND tbl_mock_369.mock_364) AND tbl_mock_369.mock_351 AS mock_367\nFROM tbl_mock_365 AS tbl_mock_369) , tbl_mock_373 (mock_370, mock_371, mock_372, mock_354, mock_355) AS (SELECT CASE WHEN tbl_mock_374.mock_367 THEN tbl_mock_374.mock_338 ELSE NULL END AS mock_370, tbl_mock_374.mock_367 AS mock_371, CASE WHEN tbl_mock_374.mock_367 THEN tbl_mock_374.mock_339 ELSE NULL END AS mock_372, tbl_mock_374.mock_354, tbl_mock_374.mock_355\nFROM tbl_mock_368 AS tbl_mock_374) , tbl_mock_375 (mock_354, mock_370) AS (SELECT tbl_mock_376.mock_354, tbl_mock_376.mock_370\nFROM tbl_mock_373 AS tbl_mock_376\nWHERE (tbl_mock_376.mock_354 IS NOT NULL) AND tbl_mock_376.mock_371) , tbl_mock_378 (mock_354, mock_377) AS (SELECT tbl_mock_376.mock_354, sum(tbl_mock_376.mock_370) AS mock_377\nFROM tbl_mock_375 AS tbl_mock_376\nGROUP BY tbl_mock_376.mock_354) , tbl_mock_379 (mock_355, mock_370, mock_372) AS (SELECT tbl_mock_380.mock_355, tbl_mock_380.mock_370, tbl_mock_380.mock_372\nFROM tbl_mock_373 AS tbl_mock_380\nWHERE (tbl_mock_380.mock_355 IS NOT NULL) AND (tbl_mock_380.mock_371 OR tbl_mock_380.mock_371)) , tbl_mock_383 (mock_355, mock_381, mock_382) AS (SELECT tbl_mock_380.mock_355, sum(tbl_mock_380.mock_370) AS mock_381, sum(tbl_mock_380.mock_372) AS mock_382\nFROM tbl_mock_379 AS tbl_mock_380\nGROUP BY tbl_mock_380.mock_355) , tbl_mock_386 (mock_384, mock_385) AS (SELECT tbl_mock_388.mock_377 AS mock_384, tbl_mock_387.mock_191 AS mock_385\nFROM db_mock_000.tbl_mock_190 AS tbl_mock_387 LEFT OUTER JOIN tbl_mock_378 AS tbl_mock_388 ON tbl_mock_387.mock_191 = tbl_mock_388.mock_354) , tbl_mock_392 (mock_389, mock_390, mock_391) AS (SELECT tbl_mock_394.mock_381 AS mock_389, tbl_mock_394.mock_382 AS mock_390, tbl_mock_393.mock_193 AS mock_391\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_393 LEFT OUTER JOIN tbl_mock_383 AS tbl_mock_394 ON tbl_mock_393.mock_193 = tbl_mock_394.mock_355) , tbl_mock_418 (mock_395, mock_396, mock_397, mock_398, mock_399, mock_400, mock_401, mock_402, mock_403, mock_404, mock_405, mock_406, mock_407, mock_408, mock_409, mock_410, mock_411, mock_412, mock_413, mock_414, mock_415, mock_416, mock_417) AS (SELECT tbl_mock_419.mock_340 AS mock_395, tbl_mock_419.mock_338 AS mock_396, tbl_mock_419.mock_339 AS mock_397, tbl_mock_420.mock_384 AS mock_398, tbl_mock_421.mock_389 AS mock_399, tbl_mock_421.mock_390 AS mock_400, tbl_mock_419.mock_341 AS mock_401, tbl_mock_419.mock_342 AS mock_402, tbl_mock_419.mock_343 AS mock_403, tbl_mock_419.mock_344 AS mock_404, tbl_mock_419.mock_345 AS mock_405, tbl_mock_419.mock_346 AS mock_406, tbl_mock_419.mock_347 AS mock_407, tbl_mock_419.mock_348 AS mock_408, tbl_mock_419.mock_349 AS mock_409, tbl_mock_419.mock_350 AS mock_410, tbl_mock_419.mock_364 AS mock_411, tbl_mock_419.mock_351 AS mock_412, tbl_mock_419.mock_352 AS mock_413, tbl_mock_419.mock_355 AS mock_414, tbl_mock_419.mock_354 AS mock_415, tbl_mock_419.mock_356 AS mock_416, tbl_mock_419.mock_357 AS mock_417\nFROM tbl_mock_365 AS tbl_mock_419 LEFT OUTER JOIN tbl_mock_386 AS tbl_mock_420 ON tbl_mock_419.mock_354 = tbl_mock_420.mock_385 LEFT OUTER JOIN tbl_mock_392 AS tbl_mock_421 ON tbl_mock_419.mock_355 = tbl_mock_421.mock_391) , tbl_mock_424 (mock_395, mock_396, mock_397, mock_401, mock_402, mock_403, mock_404, mock_405, mock_406, mock_407, mock_408, mock_409, mock_410, mock_411, mock_412, mock_413, mock_414, mock_415, mock_416, mock_417, mock_422, mock_423) AS (SELECT tbl_mock_425.mock_395, tbl_mock_425.mock_396, tbl_mock_425.mock_397, tbl_mock_425.mock_401, tbl_mock_425.mock_402, tbl_mock_425.mock_403, tbl_mock_425.mock_404, tbl_mock_425.mock_405, tbl_mock_425.mock_406, tbl_mock_425.mock_407, tbl_mock_425.mock_408, tbl_mock_425.mock_409, tbl_mock_425.mock_410, tbl_mock_425.mock_411, tbl_mock_425.mock_412, tbl_mock_425.mock_413, tbl_mock_425.mock_414, tbl_mock_425.mock_415, tbl_mock_425.mock_416, tbl_mock_425.mock_417, CASE WHEN ((tbl_mock_425.mock_398 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_425.mock_416, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_425.mock_399 WHEN ((tbl_mock_425.mock_398 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_425.mock_416, CAST(0 AS BIGINT))) = (CAST(0 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_425.mock_400 END AS mock_422, CASE (CASE WHEN ((tbl_mock_425.mock_398 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_425.mock_416, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_425.mock_416 WHEN ((tbl_mock_425.mock_398 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_425.mock_416, CAST(0 AS BIGINT))) != (CAST(1 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_425.mock_417 END) WHEN (CAST(1 AS BIGINT)) THEN (CAST(1 AS BIGINT)) ELSE (CAST(0 AS BIGINT)) END AS mock_423\nFROM tbl_mock_418 AS tbl_mock_425) , tbl_mock_429 (mock_395, mock_396, mock_397, mock_401, mock_402, mock_403, mock_404, mock_405, mock_406, mock_407, mock_408, mock_409, mock_410, mock_411, mock_412, mock_413, mock_414, mock_415, mock_416, mock_417, mock_426, mock_427, mock_428) AS (SELECT tbl_mock_430.mock_395, tbl_mock_430.mock_396, tbl_mock_430.mock_397, tbl_mock_430.mock_401, tbl_mock_430.mock_402, tbl_mock_430.mock_403, tbl_mock_430.mock_404, tbl_mock_430.mock_405, tbl_mock_430.mock_406, tbl_mock_430.mock_407, tbl_mock_430.mock_408, tbl_mock_430.mock_409, tbl_mock_430.mock_410, tbl_mock_430.mock_411, tbl_mock_430.mock_412, tbl_mock_430.mock_413, tbl_mock_430.mock_414, tbl_mock_430.mock_415, tbl_mock_430.mock_416, tbl_mock_430.mock_417, CASE WHEN (tbl_mock_430.mock_422 > tbl_mock_430.mock_395) THEN (tbl_mock_430.mock_422 * tbl_mock_430.mock_423) ELSE (CAST(0 AS BIGINT)) END AS mock_426, CASE tbl_mock_430.mock_423 WHEN (CAST(1 AS BIGINT)) THEN tbl_mock_430.mock_413 ELSE NULL END AS mock_427, (((((((((tbl_mock_430.mock_403 AND tbl_mock_430.mock_404) AND tbl_mock_430.mock_405) AND tbl_mock_430.mock_406) AND tbl_mock_430.mock_402) AND tbl_mock_430.mock_407) AND tbl_mock_430.mock_408) AND tbl_mock_430.mock_409) AND tbl_mock_430.mock_410) AND tbl_mock_430.mock_411) AND tbl_mock_430.mock_412 AS mock_428\nFROM tbl_mock_424 AS tbl_mock_430) , tbl_mock_433 (mock_431, mock_432, mock_414) AS (SELECT CASE WHEN tbl_mock_434.mock_428 THEN tbl_mock_434.mock_427 ELSE NULL END AS mock_431, tbl_mock_434.mock_428 AS mock_432, tbl_mock_434.mock_414\nFROM tbl_mock_429 AS tbl_mock_434) , tbl_mock_435 (mock_414, mock_431) AS (SELECT tbl_mock_436.mock_414, tbl_mock_436.mock_431\nFROM tbl_mock_433 AS tbl_mock_436\nWHERE (tbl_mock_436.mock_414 IS NOT NULL) AND tbl_mock_436.mock_432) , tbl_mock_438 (mock_414, mock_437) AS (SELECT tbl_mock_436.mock_414, count(tbl_mock_436.mock_431) AS mock_437\nFROM tbl_mock_435 AS tbl_mock_436\nGROUP BY tbl_mock_436.mock_414) , tbl_mock_441 (mock_439, mock_440) AS (SELECT tbl_mock_443.mock_437 AS mock_439, tbl_mock_442.mock_193 AS mock_440\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_442 LEFT OUTER JOIN tbl_mock_438 AS tbl_mock_443 ON tbl_mock_442.mock_193 = tbl_mock_443.mock_414) , tbl_mock_445 (mock_440, mock_444) AS (SELECT tbl_mock_446.mock_440, coalesce(tbl_mock_446.mock_439, 0) AS mock_444\nFROM tbl_mock_441 AS tbl_mock_446) , tbl_mock_469 (mock_447, mock_448, mock_449, mock_450, mock_451, mock_452, mock_453, mock_454, mock_455, mock_456, mock_457, mock_458, mock_459, mock_460, mock_461, mock_462, mock_463, mock_464, mock_465, mock_466, mock_467, mock_468) AS (SELECT tbl_mock_470.mock_426 AS mock_447, tbl_mock_470.mock_396 AS mock_448, tbl_mock_470.mock_397 AS mock_449, tbl_mock_470.mock_395 AS mock_450, tbl_mock_470.mock_401 AS mock_451, tbl_mock_470.mock_402 AS mock_452, tbl_mock_470.mock_403 AS mock_453, tbl_mock_470.mock_404 AS mock_454, tbl_mock_470.mock_405 AS mock_455, tbl_mock_470.mock_406 AS mock_456, tbl_mock_470.mock_407 AS mock_457, tbl_mock_470.mock_408 AS mock_458, tbl_mock_470.mock_409 AS mock_459, tbl_mock_470.mock_410 AS mock_460, tbl_mock_470.mock_411 AS mock_461, tbl_mock_470.mock_412 AS mock_462, tbl_mock_470.mock_413 AS mock_463, tbl_mock_471.mock_444 AS mock_464, tbl_mock_470.mock_415 AS mock_465, tbl_mock_470.mock_414 AS mock_466, tbl_mock_470.mock_416 AS mock_467, tbl_mock_470.mock_417 AS mock_468\nFROM tbl_mock_429 AS tbl_mock_470 LEFT OUTER JOIN tbl_mock_445 AS tbl_mock_471 ON tbl_mock_470.mock_414 = tbl_mock_471.mock_440) , tbl_mock_473 (mock_448, mock_449, mock_450, mock_451, mock_452, mock_453, mock_454, mock_455, mock_456, mock_457, mock_458, mock_459, mock_460, mock_461, mock_462, mock_463, mock_465, mock_466, mock_467, mock_468, mock_472) AS (SELECT tbl_mock_474.mock_448, tbl_mock_474.mock_449, tbl_mock_474.mock_450, tbl_mock_474.mock_451, tbl_mock_474.mock_452, tbl_mock_474.mock_453, tbl_mock_474.mock_454, tbl_mock_474.mock_455, tbl_mock_474.mock_456, tbl_mock_474.mock_457, tbl_mock_474.mock_458, tbl_mock_474.mock_459, tbl_mock_474.mock_460, tbl_mock_474.mock_461, tbl_mock_474.mock_462, tbl_mock_474.mock_463, tbl_mock_474.mock_465, tbl_mock_474.mock_466, tbl_mock_474.mock_467, tbl_mock_474.mock_468, tbl_mock_474.mock_447 / tbl_mock_474.mock_464 AS mock_472\nFROM tbl_mock_469 AS tbl_mock_474) , tbl_mock_476 (mock_448, mock_449, mock_450, mock_451, mock_452, mock_453, mock_454, mock_455, mock_456, mock_457, mock_458, mock_459, mock_460, mock_461, mock_462, mock_463, mock_465, mock_466, mock_467, mock_468, mock_475) AS (SELECT tbl_mock_477.mock_448, tbl_mock_477.mock_449, tbl_mock_477.mock_450, tbl_mock_477.mock_451, tbl_mock_477.mock_452, tbl_mock_477.mock_453, tbl_mock_477.mock_454, tbl_mock_477.mock_455, tbl_mock_477.mock_456, tbl_mock_477.mock_457, tbl_mock_477.mock_458, tbl_mock_477.mock_459, tbl_mock_477.mock_460, tbl_mock_477.mock_461, tbl_mock_477.mock_462, tbl_mock_477.mock_463, tbl_mock_477.mock_465, tbl_mock_477.mock_466, tbl_mock_477.mock_467, tbl_mock_477.mock_468, tbl_mock_477.mock_472 > (CAST(0 AS BIGINT)) AS mock_475\nFROM tbl_mock_473 AS tbl_mock_477) , tbl_mock_479 (mock_448, mock_449, mock_465, mock_466, mock_478) AS (SELECT tbl_mock_480.mock_448, tbl_mock_480.mock_449, tbl_mock_480.mock_465, tbl_mock_480.mock_466, ((((((((((tbl_mock_480.mock_453 AND tbl_mock_480.mock_454) AND tbl_mock_480.mock_455) AND tbl_mock_480.mock_456) AND tbl_mock_480.mock_452) AND tbl_mock_480.mock_457) AND tbl_mock_480.mock_458) AND tbl_mock_480.mock_459) AND tbl_mock_480.mock_460) AND tbl_mock_480.mock_461) AND tbl_mock_480.mock_462) AND tbl_mock_480.mock_475 AS mock_478\nFROM tbl_mock_476 AS tbl_mock_480) , tbl_mock_484 (mock_481, mock_482, mock_483, mock_465, mock_466) AS (SELECT CASE WHEN tbl_mock_485.mock_478 THEN tbl_mock_485.mock_448 ELSE NULL END AS mock_481, tbl_mock_485.mock_478 AS mock_482, CASE WHEN tbl_mock_485.mock_478 THEN tbl_mock_485.mock_449 ELSE NULL END AS mock_483, tbl_mock_485.mock_465, tbl_mock_485.mock_466\nFROM tbl_mock_479 AS tbl_mock_485) , tbl_mock_486 (mock_465, mock_481) AS (SELECT tbl_mock_487.mock_465, tbl_mock_487.mock_481\nFROM tbl_mock_484 AS tbl_mock_487\nWHERE (tbl_mock_487.mock_465 IS NOT NULL) AND tbl_mock_487.mock_482) , tbl_mock_489 (mock_465, mock_488) AS (SELECT tbl_mock_487.mock_465, sum(tbl_mock_487.mock_481) AS mock_488\nFROM tbl_mock_486 AS tbl_mock_487\nGROUP BY tbl_mock_487.mock_465) , tbl_mock_490 (mock_466, mock_481, mock_483) AS (SELECT tbl_mock_491.mock_466, tbl_mock_491.mock_481, tbl_mock_491.mock_483\nFROM tbl_mock_484 AS tbl_mock_491\nWHERE (tbl_mock_491.mock_466 IS NOT NULL) AND (tbl_mock_491.mock_482 OR tbl_mock_491.mock_482)) , tbl_mock_494 (mock_466, mock_492, mock_493) AS (SELECT tbl_mock_491.mock_466, sum(tbl_mock_491.mock_481) AS mock_492, sum(tbl_mock_491.mock_483) AS mock_493\nFROM tbl_mock_490 AS tbl_mock_491\nGROUP BY tbl_mock_491.mock_466) , tbl_mock_497 (mock_495, mock_496) AS (SELECT tbl_mock_499.mock_488 AS mock_495, tbl_mock_498.mock_191 AS mock_496\nFROM db_mock_000.tbl_mock_190 AS tbl_mock_498 LEFT OUTER JOIN tbl_mock_489 AS tbl_mock_499 ON tbl_mock_498.mock_191 = tbl_mock_499.mock_465) , tbl_mock_503 (mock_500, mock_501, mock_502) AS (SELECT tbl_mock_505.mock_492 AS mock_500, tbl_mock_505.mock_493 AS mock_501, tbl_mock_504.mock_193 AS mock_502\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_504 LEFT OUTER JOIN tbl_mock_494 AS tbl_mock_505 ON tbl_mock_504.mock_193 = tbl_mock_505.mock_466) , tbl_mock_530 (mock_506, mock_507, mock_508, mock_509, mock_510, mock_511, mock_512, mock_513, mock_514, mock_515, mock_516, mock_517, mock_518, mock_519, mock_520, mock_521, mock_522, mock_523, mock_524, mock_525, mock_526, mock_527, mock_528, mock_529) AS (SELECT tbl_mock_531.mock_450 AS mock_506, tbl_mock_531.mock_448 AS mock_507, tbl_mock_531.mock_449 AS mock_508, tbl_mock_532.mock_495 AS mock_509, tbl_mock_533.mock_500 AS mock_510, tbl_mock_533.mock_501 AS mock_511, tbl_mock_531.mock_451 AS mock_512, tbl_mock_531.mock_452 AS mock_513, tbl_mock_531.mock_453 AS mock_514, tbl_mock_531.mock_454 AS mock_515, tbl_mock_531.mock_455 AS mock_516, tbl_mock_531.mock_456 AS mock_517, tbl_mock_531.mock_457 AS mock_518, tbl_mock_531.mock_458 AS mock_519, tbl_mock_531.mock_459 AS mock_520, tbl_mock_531.mock_460 AS mock_521, tbl_mock_531.mock_461 AS mock_522, tbl_mock_531.mock_462 AS mock_523, tbl_mock_531.mock_475 AS mock_524, tbl_mock_531.mock_463 AS mock_525, tbl_mock_531.mock_465 AS mock_526, tbl_mock_531.mock_466 AS mock_527, tbl_mock_531.mock_467 AS mock_528, tbl_mock_531.mock_468 AS mock_529\nFROM tbl_mock_476 AS tbl_mock_531 LEFT OUTER JOIN tbl_mock_497 AS tbl_mock_532 ON tbl_mock_531.mock_465 = tbl_mock_532.mock_496 LEFT OUTER JOIN tbl_mock_503 AS tbl_mock_533 ON tbl_mock_531.mock_466 = tbl_mock_533.mock_502) , tbl_mock_536 (mock_506, mock_507, mock_508, mock_512, mock_513, mock_514, mock_515, mock_516, mock_517, mock_518, mock_519, mock_520, mock_521, mock_522, mock_523, mock_524, mock_525, mock_526, mock_527, mock_528, mock_529, mock_534, mock_535) AS (SELECT tbl_mock_537.mock_506, tbl_mock_537.mock_507, tbl_mock_537.mock_508, tbl_mock_537.mock_512, tbl_mock_537.mock_513, tbl_mock_537.mock_514, tbl_mock_537.mock_515, tbl_mock_537.mock_516, tbl_mock_537.mock_517, tbl_mock_537.mock_518, tbl_mock_537.mock_519, tbl_mock_537.mock_520, tbl_mock_537.mock_521, tbl_mock_537.mock_522, tbl_mock_537.mock_523, tbl_mock_537.mock_524, tbl_mock_537.mock_525, tbl_mock_537.mock_526, tbl_mock_537.mock_527, tbl_mock_537.mock_528, tbl_mock_537.mock_529, CASE WHEN ((tbl_mock_537.mock_509 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_537.mock_528, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_537.mock_510 WHEN ((tbl_mock_537.mock_509 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_537.mock_528, CAST(0 AS BIGINT))) = (CAST(0 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_537.mock_511 END AS mock_534, CASE (CASE WHEN ((tbl_mock_537.mock_509 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_537.mock_528, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_537.mock_528 WHEN ((tbl_mock_537.mock_509 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_537.mock_528, CAST(0 AS BIGINT))) != (CAST(1 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_537.mock_529 END) WHEN (CAST(1 AS BIGINT)) THEN (CAST(1 AS BIGINT)) ELSE (CAST(0 AS BIGINT)) END AS mock_535\nFROM tbl_mock_530 AS tbl_mock_537) , tbl_mock_539 (mock_506, mock_507, mock_508, mock_512, mock_513, mock_514, mock_515, mock_516, mock_517, mock_518, mock_519, mock_520, mock_521, mock_522, mock_523, mock_524, mock_525, mock_526, mock_527, mock_528, mock_529, mock_538) AS (SELECT tbl_mock_540.mock_506, tbl_mock_540.mock_507, tbl_mock_540.mock_508, tbl_mock_540.mock_512, tbl_mock_540.mock_513, tbl_mock_540.mock_514, tbl_mock_540.mock_515, tbl_mock_540.mock_516, tbl_mock_540.mock_517, tbl_mock_540.mock_518, tbl_mock_540.mock_519, tbl_mock_540.mock_520, tbl_mock_540.mock_521, tbl_mock_540.mock_522, tbl_mock_540.mock_523, tbl_mock_540.mock_524, tbl_mock_540.mock_525, tbl_mock_540.mock_526, tbl_mock_540.mock_527, tbl_mock_540.mock_528, tbl_mock_540.mock_529, CASE WHEN (tbl_mock_540.mock_534 > tbl_mock_540.mock_506) THEN (tbl_mock_540.mock_534 * tbl_mock_540.mock_535) ELSE (CAST(0 AS BIGINT)) END AS mock_538\nFROM tbl_mock_536 AS tbl_mock_540) , tbl_mock_542 (mock_506, mock_507, mock_508, mock_512, mock_513, mock_514, mock_515, mock_516, mock_517, mock_518, mock_519, mock_520, mock_521, mock_522, mock_523, mock_524, mock_525, mock_526, mock_527, mock_528, mock_529, mock_541) AS (SELECT tbl_mock_543.mock_506, tbl_mock_543.mock_507, tbl_mock_543.mock_508, tbl_mock_543.mock_512, tbl_mock_543.mock_513, tbl_mock_543.mock_514, tbl_mock_543.mock_515, tbl_mock_543.mock_516, tbl_mock_543.mock_517, tbl_mock_543.mock_518, tbl_mock_543.mock_519, tbl_mock_543.mock_520, tbl_mock_543.mock_521, tbl_mock_543.mock_522, tbl_mock_543.mock_523, tbl_mock_543.mock_524, tbl_mock_543.mock_525, tbl_mock_543.mock_526, tbl_mock_543.mock_527, tbl_mock_543.mock_528, tbl_mock_543.mock_529, tbl_mock_543.mock_538 > (CAST(0 AS BIGINT)) AS mock_541\nFROM tbl_mock_539 AS tbl_mock_543) , tbl_mock_545 (mock_507, mock_508, mock_526, mock_527, mock_544) AS (SELECT tbl_mock_546.mock_507, tbl_mock_546.mock_508, tbl_mock_546.mock_526, tbl_mock_546.mock_527, (((((((((((tbl_mock_546.mock_514 AND tbl_mock_546.mock_515) AND tbl_mock_546.mock_516) AND tbl_mock_546.mock_517) AND tbl_mock_546.mock_513) AND tbl_mock_546.mock_518) AND tbl_mock_546.mock_519) AND tbl_mock_546.mock_520) AND tbl_mock_546.mock_521) AND tbl_mock_546.mock_522) AND tbl_mock_546.mock_523) AND tbl_mock_546.mock_524) AND tbl_mock_546.mock_541 AS mock_544\nFROM tbl_mock_542 AS tbl_mock_546) , tbl_mock_550 (mock_547, mock_548, mock_549, mock_526, mock_527) AS (SELECT CASE WHEN tbl_mock_551.mock_544 THEN tbl_mock_551.mock_507 ELSE NULL END AS mock_547, tbl_mock_551.mock_544 AS mock_548, CASE WHEN tbl_mock_551.mock_544 THEN tbl_mock_551.mock_508 ELSE NULL END AS mock_549, tbl_mock_551.mock_526, tbl_mock_551.mock_527\nFROM tbl_mock_545 AS tbl_mock_551) , tbl_mock_552 (mock_526, mock_547) AS (SELECT tbl_mock_553.mock_526, tbl_mock_553.mock_547\nFROM tbl_mock_550 AS tbl_mock_553\nWHERE (tbl_mock_553.mock_526 IS NOT NULL) AND tbl_mock_553.mock_548) , tbl_mock_555 (mock_526, mock_554) AS (SELECT tbl_mock_553.mock_526, sum(tbl_mock_553.mock_547) AS mock_554\nFROM tbl_mock_552 AS tbl_mock_553\nGROUP BY tbl_mock_553.mock_526) , tbl_mock_556 (mock_527, mock_547, mock_549) AS (SELECT tbl_mock_557.mock_527, tbl_mock_557.mock_547, tbl_mock_557.mock_549\nFROM tbl_mock_550 AS tbl_mock_557\nWHERE (tbl_mock_557.mock_527 IS NOT NULL) AND (tbl_mock_557.mock_548 OR tbl_mock_557.mock_548)) , tbl_mock_560 (mock_527, mock_558, mock_559) AS (SELECT tbl_mock_557.mock_527, sum(tbl_mock_557.mock_547) AS mock_558, sum(tbl_mock_557.mock_549) AS mock_559\nFROM tbl_mock_556 AS tbl_mock_557\nGROUP BY tbl_mock_557.mock_527) , tbl_mock_563 (mock_561, mock_562) AS (SELECT tbl_mock_565.mock_554 AS mock_561, tbl_mock_564.mock_191 AS mock_562\nFROM db_mock_000.tbl_mock_190 AS tbl_mock_564 LEFT OUTER JOIN tbl_mock_555 AS tbl_mock_565 ON tbl_mock_564.mock_191 = tbl_mock_565.mock_526) , tbl_mock_569 (mock_566, mock_567, mock_568) AS (SELECT tbl_mock_571.mock_558 AS mock_566, tbl_mock_571.mock_559 AS mock_567, tbl_mock_570.mock_193 AS mock_568\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_570 LEFT OUTER JOIN tbl_mock_560 AS tbl_mock_571 ON tbl_mock_570.mock_193 = tbl_mock_571.mock_527) , tbl_mock_594 (mock_572, mock_573, mock_574, mock_575, mock_576, mock_577, mock_578, mock_579, mock_580, mock_581, mock_582, mock_583, mock_584, mock_585, mock_586, mock_587, mock_588, mock_589, mock_590, mock_591, mock_592, mock_593) AS (SELECT tbl_mock_595.mock_506 AS mock_572, tbl_mock_596.mock_561 AS mock_573, tbl_mock_597.mock_566 AS mock_574, tbl_mock_597.mock_567 AS mock_575, tbl_mock_595.mock_512 AS mock_576, tbl_mock_595.mock_513 AS mock_577, tbl_mock_595.mock_514 AS mock_578, tbl_mock_595.mock_515 AS mock_579, tbl_mock_595.mock_516 AS mock_580, tbl_mock_595.mock_517 AS mock_581, tbl_mock_595.mock_518 AS mock_582, tbl_mock_595.mock_519 AS mock_583, tbl_mock_595.mock_520 AS mock_584, tbl_mock_595.mock_521 AS mock_585, tbl_mock_595.mock_522 AS mock_586, tbl_mock_595.mock_523 AS mock_587, tbl_mock_595.mock_524 AS mock_588, tbl_mock_595.mock_541 AS mock_589, tbl_mock_595.mock_525 AS mock_590, tbl_mock_595.mock_527 AS mock_591, tbl_mock_595.mock_528 AS mock_592, tbl_mock_595.mock_529 AS mock_593\nFROM tbl_mock_542 AS tbl_mock_595 LEFT OUTER JOIN tbl_mock_563 AS tbl_mock_596 ON tbl_mock_595.mock_526 = tbl_mock_596.mock_562 LEFT OUTER JOIN tbl_mock_569 AS tbl_mock_597 ON tbl_mock_595.mock_527 = tbl_mock_597.mock_568) , tbl_mock_600 (mock_572, mock_576, mock_577, mock_578, mock_579, mock_580, mock_581, mock_582, mock_583, mock_584, mock_585, mock_586, mock_587, mock_588, mock_589, mock_590, mock_591, mock_598, mock_599) AS (SELECT tbl_mock_601.mock_572, tbl_mock_601.mock_576, tbl_mock_601.mock_577, tbl_mock_601.mock_578, tbl_mock_601.mock_579, tbl_mock_601.mock_580, tbl_mock_601.mock_581, tbl_mock_601.mock_582, tbl_mock_601.mock_583, tbl_mock_601.mock_584, tbl_mock_601.mock_585, tbl_mock_601.mock_586, tbl_mock_601.mock_587, tbl_mock_601.mock_588, tbl_mock_601.mock_589, tbl_mock_601.mock_590, tbl_mock_601.mock_591, CASE WHEN ((tbl_mock_601.mock_573 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_601.mock_592, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_601.mock_574 WHEN ((tbl_mock_601.mock_573 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_601.mock_592, CAST(0 AS BIGINT))) = (CAST(0 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_601.mock_575 END AS mock_598, CASE (CASE WHEN ((tbl_mock_601.mock_573 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_601.mock_592, CAST(0 AS BIGINT))) = (CAST(1 AS BIGINT)))) THEN tbl_mock_601.mock_592 WHEN ((tbl_mock_601.mock_573 > (CAST(0 AS BIGINT))) AND ((coalesce(tbl_mock_601.mock_592, CAST(0 AS BIGINT))) != (CAST(1 AS BIGINT)))) THEN (CAST(0 AS BIGINT)) ELSE tbl_mock_601.mock_593 END) WHEN (CAST(1 AS BIGINT)) THEN (CAST(1 AS BIGINT)) ELSE (CAST(0 AS BIGINT)) END AS mock_599\nFROM tbl_mock_594 AS tbl_mock_601) , tbl_mock_605 (mock_576, mock_577, mock_578, mock_579, mock_580, mock_581, mock_582, mock_583, mock_584, mock_585, mock_586, mock_587, mock_588, mock_589, mock_591, mock_602, mock_603, mock_604) AS (SELECT tbl_mock_606.mock_576, tbl_mock_606.mock_577, tbl_mock_606.mock_578, tbl_mock_606.mock_579, tbl_mock_606.mock_580, tbl_mock_606.mock_581, tbl_mock_606.mock_582, tbl_mock_606.mock_583, tbl_mock_606.mock_584, tbl_mock_606.mock_585, tbl_mock_606.mock_586, tbl_mock_606.mock_587, tbl_mock_606.mock_588, tbl_mock_606.mock_589, tbl_mock_606.mock_591, CASE WHEN (tbl_mock_606.mock_598 > tbl_mock_606.mock_572) THEN (tbl_mock_606.mock_598 * tbl_mock_606.mock_599) ELSE (CAST(0 AS BIGINT)) END AS mock_602, CASE tbl_mock_606.mock_599 WHEN (CAST(1 AS BIGINT)) THEN tbl_mock_606.mock_590 ELSE NULL END AS mock_603, (((((((((((tbl_mock_606.mock_578 AND tbl_mock_606.mock_579) AND tbl_mock_606.mock_580) AND tbl_mock_606.mock_581) AND tbl_mock_606.mock_577) AND tbl_mock_606.mock_582) AND tbl_mock_606.mock_583) AND tbl_mock_606.mock_584) AND tbl_mock_606.mock_585) AND tbl_mock_606.mock_586) AND tbl_mock_606.mock_587) AND tbl_mock_606.mock_588) AND tbl_mock_606.mock_589 AS mock_604\nFROM tbl_mock_600 AS tbl_mock_606) , tbl_mock_609 (mock_607, mock_608, mock_591) AS (SELECT CASE WHEN tbl_mock_610.mock_604 THEN tbl_mock_610.mock_603 ELSE NULL END AS mock_607, tbl_mock_610.mock_604 AS mock_608, tbl_mock_610.mock_591\nFROM tbl_mock_605 AS tbl_mock_610) , tbl_mock_611 (mock_591, mock_607) AS (SELECT tbl_mock_612.mock_591, tbl_mock_612.mock_607\nFROM tbl_mock_609 AS tbl_mock_612\nWHERE (tbl_mock_612.mock_591 IS NOT NULL) AND tbl_mock_612.mock_608) , tbl_mock_614 (mock_591, mock_613) AS (SELECT tbl_mock_612.mock_591, count(tbl_mock_612.mock_607) AS mock_613\nFROM tbl_mock_611 AS tbl_mock_612\nGROUP BY tbl_mock_612.mock_591) , tbl_mock_617 (mock_615, mock_616) AS (SELECT tbl_mock_619.mock_613 AS mock_615, tbl_mock_618.mock_193 AS mock_616\nFROM db_mock_000.tbl_mock_192 AS tbl_mock_618 LEFT OUTER JOIN tbl_mock_614 AS tbl_mock_619 ON tbl_mock_618.mock_193 = tbl_mock_619.mock_591) , tbl_mock_621 (mock_616, mock_620) AS (SELECT tbl_mock_622.mock_616, coalesce(tbl_mock_622.mock_615, 0) AS mock_620\nFROM tbl_mock_617 AS tbl_mock_622) , tbl_mock_639 (mock_623, mock_624, mock_625, mock_626, mock_627, mock_628, mock_629, mock_630, mock_631, mock_632, mock_633, mock_634, mock_635, mock_636, mock_637, mock_638) AS (SELECT tbl_mock_640.mock_602 AS mock_623, tbl_mock_640.mock_576 AS mock_624, tbl_mock_640.mock_577 AS mock_625, tbl_mock_640.mock_578 AS mock_626, tbl_mock_640.mock_579 AS mock_627, tbl_mock_640.mock_580 AS mock_628, tbl_mock_640.mock_581 AS mock_629, tbl_mock_640.mock_582 AS mock_630, tbl_mock_640.mock_583 AS mock_631, tbl_mock_640.mock_584 AS mock_632, tbl_mock_640.mock_585 AS mock_633, tbl_mock_640.mock_586 AS mock_634, tbl_mock_640.mock_587 AS mock_635, tbl_mock_640.mock_588 AS mock_636, tbl_mock_640.mock_589 AS mock_637, tbl_mock_641.mock_620 AS mock_638\nFROM tbl_mock_605 AS tbl_mock_640 LEFT OUTER JOIN tbl_mock_621 AS tbl_mock_641 ON tbl_mock_640.mock_591 = tbl_mock_641.mock_616) , tbl_mock_656 (mock_624, mock_642, mock_643, mock_644, mock_645, mock_646, mock_647, mock_648, mock_649, mock_650, mock_651, mock_652, mock_653, mock_654, mock_655) AS (SELECT tbl_mock_657.mock_624, tbl_mock_657.mock_623 / tbl_mock_657.mock_638 AS mock_642, tbl_mock_657.mock_626 AS mock_643, tbl_mock_657.mock_627 AS mock_644, tbl_mock_657.mock_628 AS mock_645, tbl_mock_657.mock_629 AS mock_646, tbl_mock_657.mock_625 AS mock_647, tbl_mock_657.mock_630 AS mock_648, tbl_mock_657.mock_631 AS mock_649, tbl_mock_657.mock_632 AS mock_650, tbl_mock_657.mock_633 AS mock_651, tbl_mock_657.mock_634 AS mock_652, tbl_mock_657.mock_635 AS mock_653, tbl_mock_657.mock_636 AS mock_654, tbl_mock_657.mock_637 AS mock_655\nFROM tbl_mock_639 AS tbl_mock_657) , tbl_mock_659 (mock_624, mock_642, mock_658) AS (SELECT tbl_mock_660.mock_624, tbl_mock_660.mock_642, (((((((((((tbl_mock_660.mock_643 AND tbl_mock_660.mock_644) AND tbl_mock_660.mock_645) AND tbl_mock_660.mock_646) AND tbl_mock_660.mock_647) AND tbl_mock_660.mock_648) AND tbl_mock_660.mock_649) AND tbl_mock_660.mock_650) AND tbl_mock_660.mock_651) AND tbl_mock_660.mock_652) AND tbl_mock_660.mock_653) AND tbl_mock_660.mock_654) AND tbl_mock_660.mock_655 AS mock_658\nFROM tbl_mock_656 AS tbl_mock_660) , tbl_mock_661 (mock_624, mock_642) AS (SELECT tbl_mock_662.mock_624, tbl_mock_662.mock_642\nFROM tbl_mock_659 AS tbl_mock_662\nWHERE tbl_mock_662.mock_658) , tbl_mock_664 (mock_663) AS (SELECT sum(tbl_mock_665.mock_642) AS mock_663\nFROM tbl_mock_661 AS tbl_mock_665\nGROUP BY tbl_mock_665.mock_624) , tbl_mock_668 (mock_663, mock_666, mock_667) AS (SELECT tbl_mock_669.mock_663, CASE WHEN (tbl_mock_669.mock_663 < (CAST(0 AS BIGINT))) THEN tbl_mock_669.mock_663 ELSE (CAST(0 AS BIGINT)) END AS mock_666, CASE WHEN (tbl_mock_669.mock_663 > (CAST(0 AS BIGINT))) THEN tbl_mock_669.mock_663 ELSE (CAST(0 AS BIGINT)) END AS mock_667\nFROM tbl_mock_664 AS tbl_mock_669) , tbl_mock_670 (mock_663, mock_666, mock_667) AS (SELECT tbl_mock_671.mock_663, tbl_mock_671.mock_666, tbl_mock_671.mock_667\nFROM tbl_mock_668 AS tbl_mock_671 ORDER BY tbl_mock_671.mock_663 DESC ) , tbl_mock_673 (mock_672) AS (SELECT min(tbl_mock_674.mock_666) AS mock_672\nFROM tbl_mock_670 AS tbl_mock_674) , tbl_mock_676 (mock_675) AS (SELECT max(tbl_mock_677.mock_667) AS mock_675\nFROM tbl_mock_670 AS tbl_mock_677) , tbl_mock_678 (mock_672) AS (SELECT tbl_mock_679.mock_672\nFROM tbl_mock_673 AS tbl_mock_679 LIMIT 1) , tbl_mock_680 (mock_675) AS (SELECT tbl_mock_681.mock_675\nFROM tbl_mock_676 AS tbl_mock_681 LIMIT 1) , tbl_mock_684 (mock_682, mock_683) AS (SELECT tbl_mock_685.mock_672 AS mock_682, tbl_mock_686.mock_675 AS mock_683\nFROM tbl_mock_678 AS tbl_mock_685 CROSS JOIN tbl_mock_680 AS tbl_mock_686 ) , tbl_mock_687 (mock_682, mock_683) AS (SELECT tbl_mock_688.mock_682, tbl_mock_688.mock_683\nFROM tbl_mock_684 AS tbl_mock_688 LIMIT 50) , tbl_mock_689 (mock_682, mock_683) AS (SELECT tbl_mock_690.mock_682, tbl_mock_690.mock_683\nFROM tbl_mock_687 AS tbl_mock_690 LIMIT 50) , tbl_mock_691 (mock_194, mock_195, mock_196) AS ((SELECT tbl_mock_692.mock_682 AS mock_194, tbl_mock_692.mock_683 AS mock_195, CAST(1 AS BIGINT) AS mock_196\nFROM tbl_mock_689 AS tbl_mock_692) UNION ALL (SELECT NULL AS mock_194, NULL AS mock_195, CAST(2 AS BIGINT) AS mock_196\nFROM tbl_mock_198 AS tbl_mock_693)) SELECT tbl_mock_694.mock_194, tbl_mock_694.mock_195, tbl_mock_694.mock_196\nFROM tbl_mock_691 AS tbl_mock_694","table_meta":{"db_mock_000.tbl_mock_001":"CREATE TABLE db_mock_000.tbl_mock_001 (\nmock_032 largeint(40) NOT NULL ,\nmock_057 varchar(65535) ,\nmock_033 varchar(65535) ,\nmock_056 varchar(65535) ,\nmock_049 bigint(20) ,\nmock_034 datetime ,\nmock_045 datetime ,\nmock_048 bigint(20) ,\nmock_062 datetime ,\nmock_061 datetime ,\nmock_004 double ,\nmock_035 double ,\nmock_058 varchar(65535) ,\nmock_036 double ,\nmock_064 double ,\nmock_060 double ,\nmock_063 double ,\nmock_059 double ,\nmock_046 double ,\nmock_003 double ,\nmock_005 double ,\nmock_037 double ,\nmock_055 double ,\nmock_053 double ,\nmock_042 double ,\nmock_040 double ,\nmock_051 varchar(65535) ,\nmock_038 varchar(65535) ,\nmock_054 varchar(65535) ,\nmock_041 varchar(65535) ,\nmock_002 varchar(65535) ,\nmock_052 varchar(65535) ,\nmock_039 varchar(65535) ,\nid varchar(65535) ,\nmock_044 varchar(65535) ,\nmock_050 varchar(65535) ,\nmock_043 varchar(65535) ,\nmock_047 varchar(65535) ,\nmock_028 largeint(40) ,\nmock_029 largeint(40) ,\nmock_030 largeint(40) ,\nmock_031 largeint(40) ,\nmock_006 bigint(20) ,\nmock_007 bigint(20) ,\nmock_009 bigint(20) ,\nmock_010 bigint(20) ,\nmock_011 bigint(20) ,\nmock_012 bigint(20) ,\nmock_013 bigint(20) ,\nmock_014 bigint(20) ,\nmock_015 bigint(20) ,\nmock_016 bigint(20) ,\nmock_008 bigint(20) ,\nmock_017 boolean ,\nmock_018 boolean ,\nmock_020 boolean ,\nmock_021 boolean ,\nmock_022 boolean ,\nmock_023 boolean ,\nmock_024 boolean ,\nmock_025 boolean ,\nmock_026 boolean ,\nmock_027 boolean ,\nmock_019 boolean \n) ENGINE= OLAP \nPRIMARY KEY(mock_032)\nDISTRIBUTED BY HASH(mock_032) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_065":"CREATE TABLE db_mock_000.tbl_mock_065 (\nmock_080 largeint(40) NOT NULL ,\nid varchar(65535) ,\nmock_083 datetime ,\nmock_124 datetime ,\nmock_123 datetime ,\nmock_114 bigint(20) ,\nmock_119 bigint(20) ,\nmock_108 varchar(65535) ,\nmock_118 varchar(65535) ,\nmock_109 bigint(20) ,\nmock_115 double ,\nmock_113 varchar(65535) ,\nmock_111 varchar(65535) ,\nmock_112 varchar(65535) ,\nmock_120 bigint(20) ,\nmock_116 varchar(65535) ,\nmock_069 double ,\nmock_068 double ,\nmock_110 double ,\nmock_070 double ,\nmock_081 varchar(65535) ,\nmock_082 varchar(65535) ,\nmock_066 varchar(65535) ,\nmock_067 varchar(65535) ,\nmock_122 varchar(65535) ,\nmock_121 varchar(65535) ,\nmock_043 varchar(65535) ,\nmock_117 varchar(65535) ,\nmock_101 double ,\nmock_100 double ,\nmock_099 double ,\nmock_098 double ,\nmock_106 double ,\nmock_105 varchar(65535) ,\nmock_097 double ,\nmock_096 double ,\nmock_087 datetime ,\nmock_102 varchar(65535) ,\nmock_091 bigint(20) ,\nmock_094 double ,\nmock_088 varchar(65535) ,\nmock_085 varchar(65535) ,\nmock_084 datetime ,\nmock_090 varchar(65535) ,\nmock_103 double ,\nmock_104 varchar(65535) ,\nmock_093 bigint(20) ,\nmock_092 bigint(20) ,\nmock_086 datetime ,\nmock_089 varchar(65535) ,\nmock_095 varchar(65535) ,\nmock_107 bigint(20) ,\nmock_075 largeint(40) ,\nmock_076 largeint(40) ,\nmock_077 largeint(40) ,\nmock_079 largeint(40) ,\nmock_074 largeint(40) ,\nmock_078 largeint(40) ,\nmock_072 largeint(40) ,\nmock_071 largeint(40) ,\nmock_073 largeint(40) ,\nmock_028 largeint(40) ,\nmock_017 boolean ,\nmock_018 boolean ,\nmock_020 boolean ,\nmock_021 boolean ,\nmock_022 boolean ,\nmock_023 boolean ,\nmock_024 boolean ,\nmock_025 boolean ,\nmock_026 boolean ,\nmock_027 boolean ,\nmock_019 boolean \n) ENGINE= OLAP \nPRIMARY KEY(mock_080)\nDISTRIBUTED BY HASH(mock_080) BUCKETS 366 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_125":"CREATE TABLE db_mock_000.tbl_mock_125 (\nmock_126 largeint(40) NOT NULL ,\nid varchar(65535) ,\nmock_135 varchar(65535) ,\nmock_134 varchar(65535) ,\nmock_127 varchar(65535) ,\nmock_128 varchar(65535) ,\nmock_122 varchar(65535) ,\nmock_121 varchar(65535) ,\nmock_129 varchar(65535) ,\nmock_131 varchar(65535) ,\nmock_130 varchar(65535) ,\nmock_133 varchar(65535) ,\nmock_132 varchar(65535) ,\nmock_107 bigint(20) ,\nmock_077 largeint(40) \n) ENGINE= OLAP \nPRIMARY KEY(mock_126)\nDISTRIBUTED BY HASH(mock_126) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_136":"CREATE TABLE db_mock_000.tbl_mock_136 (\nmock_137 largeint(40) NOT NULL ,\nid varchar(65535) ,\nmock_083 datetime ,\nmock_134 varchar(65535) ,\nmock_153 varchar(65535) ,\nmock_149 varchar(65535) ,\nmock_150 varchar(65535) ,\nmock_151 varchar(65535) ,\nmock_067 varchar(65535) ,\nmock_135 varchar(65535) ,\nmock_152 varchar(65535) ,\nmock_122 varchar(65535) ,\nmock_121 varchar(65535) ,\nmock_148 varchar(65535) ,\nmock_147 varchar(65535) ,\nmock_086 datetime ,\nmock_093 bigint(20) ,\nmock_092 bigint(20) ,\nmock_144 bigint(20) ,\nmock_139 varchar(65535) ,\nmock_138 varchar(65535) ,\nmock_146 varchar(65535) ,\nmock_145 varchar(65535) ,\nmock_141 varchar(65535) ,\nmock_140 varchar(65535) ,\nmock_143 varchar(65535) ,\nmock_142 varchar(65535) ,\nmock_107 bigint(20) ,\nmock_075 largeint(40) \n) ENGINE= OLAP \nPRIMARY KEY(mock_137)\nDISTRIBUTED BY HASH(mock_137) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_154":"CREATE TABLE db_mock_000.tbl_mock_154 (\nmock_155 largeint(40) NOT NULL ,\nid varchar(65535) ,\nmock_135 varchar(65535) ,\nmock_134 varchar(65535) ,\nmock_127 varchar(65535) ,\nmock_128 varchar(65535) ,\nmock_122 varchar(65535) ,\nmock_121 varchar(65535) ,\nmock_129 varchar(65535) ,\nmock_131 varchar(65535) ,\nmock_130 varchar(65535) ,\nmock_133 varchar(65535) ,\nmock_132 varchar(65535) ,\nmock_107 bigint(20) ,\nmock_030 largeint(40) \n) ENGINE= OLAP \nPRIMARY KEY(mock_155)\nDISTRIBUTED BY HASH(mock_155) BUCKETS 20 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_156":"CREATE TABLE db_mock_000.tbl_mock_156 (\nmock_177 largeint(40) NOT NULL ,\nmock_006 bigint(20) ,\nmock_007 bigint(20) ,\nmock_009 bigint(20) ,\nmock_010 bigint(20) ,\nmock_011 bigint(20) ,\nmock_012 bigint(20) ,\nmock_013 bigint(20) ,\nmock_014 bigint(20) ,\nmock_015 bigint(20) ,\nmock_016 bigint(20) ,\nmock_017 boolean ,\nmock_018 boolean ,\nmock_020 boolean ,\nmock_021 boolean ,\nmock_022 boolean ,\nmock_023 boolean ,\nmock_024 boolean ,\nmock_025 boolean ,\nmock_026 boolean ,\nmock_027 boolean ,\nmock_157 datetime ,\nmock_158 datetime ,\nmock_159 datetime ,\nmock_160 datetime ,\nmock_161 datetime ,\nmock_162 datetime ,\nmock_163 datetime ,\nmock_164 datetime ,\nmock_165 datetime ,\nmock_166 datetime ,\nmock_167 double ,\nmock_168 double ,\nmock_169 double ,\nmock_170 double ,\nmock_171 double ,\nmock_172 double ,\nmock_173 double ,\nmock_174 double ,\nmock_175 double ,\nmock_176 double ,\nmock_178 varchar(65533) ,\nmock_179 varchar(65533) ,\nmock_180 varchar(65533) ,\nmock_181 varchar(65533) ,\nmock_182 varchar(65533) ,\nmock_183 varchar(65533) ,\nmock_184 varchar(65533) ,\nmock_185 varchar(65533) ,\nmock_186 varchar(65533) ,\nmock_187 varchar(65533) \n) ENGINE= OLAP \nPRIMARY KEY(mock_177)\nDISTRIBUTED BY HASH(mock_177) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_188":"CREATE TABLE db_mock_000.tbl_mock_188 (\nmock_189 largeint(40) NOT NULL ,\nmock_006 bigint(20) ,\nmock_007 bigint(20) ,\nmock_009 bigint(20) ,\nmock_010 bigint(20) ,\nmock_011 bigint(20) ,\nmock_012 bigint(20) ,\nmock_013 bigint(20) ,\nmock_014 bigint(20) ,\nmock_015 bigint(20) ,\nmock_016 bigint(20) ,\nmock_017 boolean ,\nmock_018 boolean ,\nmock_020 boolean ,\nmock_021 boolean ,\nmock_022 boolean ,\nmock_023 boolean ,\nmock_024 boolean ,\nmock_025 boolean ,\nmock_026 boolean ,\nmock_027 boolean ,\nmock_157 datetime ,\nmock_158 datetime ,\nmock_159 datetime ,\nmock_160 datetime ,\nmock_161 datetime ,\nmock_162 datetime ,\nmock_163 datetime ,\nmock_164 datetime ,\nmock_165 datetime ,\nmock_166 datetime ,\nmock_167 double ,\nmock_168 double ,\nmock_169 double ,\nmock_170 double ,\nmock_171 double ,\nmock_172 double ,\nmock_173 double ,\nmock_174 double ,\nmock_175 double ,\nmock_176 double ,\nmock_178 varchar(65533) ,\nmock_179 varchar(65533) ,\nmock_180 varchar(65533) ,\nmock_181 varchar(65533) ,\nmock_182 varchar(65533) ,\nmock_183 varchar(65533) ,\nmock_184 varchar(65533) ,\nmock_185 varchar(65533) ,\nmock_186 varchar(65533) ,\nmock_187 varchar(65533) \n) ENGINE= OLAP \nPRIMARY KEY(mock_189)\nDISTRIBUTED BY HASH(mock_189) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_190":"CREATE TABLE db_mock_000.tbl_mock_190 (\nmock_191 largeint(40) NOT NULL ,\nmock_006 bigint(20) ,\nmock_007 bigint(20) ,\nmock_009 bigint(20) ,\nmock_010 bigint(20) ,\nmock_011 bigint(20) ,\nmock_012 bigint(20) ,\nmock_013 bigint(20) ,\nmock_014 bigint(20) ,\nmock_015 bigint(20) ,\nmock_016 bigint(20) ,\nmock_017 boolean ,\nmock_018 boolean ,\nmock_020 boolean ,\nmock_021 boolean ,\nmock_022 boolean ,\nmock_023 boolean ,\nmock_024 boolean ,\nmock_025 boolean ,\nmock_026 boolean ,\nmock_027 boolean ,\nmock_157 datetime ,\nmock_158 datetime ,\nmock_159 datetime ,\nmock_160 datetime ,\nmock_161 datetime ,\nmock_162 datetime ,\nmock_163 datetime ,\nmock_164 datetime ,\nmock_165 datetime ,\nmock_166 datetime ,\nmock_167 double ,\nmock_168 double ,\nmock_169 double ,\nmock_170 double ,\nmock_171 double ,\nmock_172 double ,\nmock_173 double ,\nmock_174 double ,\nmock_175 double ,\nmock_176 double ,\nmock_178 varchar(65533) ,\nmock_179 varchar(65533) ,\nmock_180 varchar(65533) ,\nmock_181 varchar(65533) ,\nmock_182 varchar(65533) ,\nmock_183 varchar(65533) ,\nmock_184 varchar(65533) ,\nmock_185 varchar(65533) ,\nmock_186 varchar(65533) ,\nmock_187 varchar(65533) \n) ENGINE= OLAP \nPRIMARY KEY(mock_191)\nDISTRIBUTED BY HASH(mock_191) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);","db_mock_000.tbl_mock_192":"CREATE TABLE db_mock_000.tbl_mock_192 (\nmock_193 largeint(40) NOT NULL ,\nmock_006 bigint(20) ,\nmock_007 bigint(20) ,\nmock_009 bigint(20) ,\nmock_010 bigint(20) ,\nmock_011 bigint(20) ,\nmock_012 bigint(20) ,\nmock_013 bigint(20) ,\nmock_014 bigint(20) ,\nmock_015 bigint(20) ,\nmock_016 bigint(20) ,\nmock_017 boolean ,\nmock_018 boolean ,\nmock_020 boolean ,\nmock_021 boolean ,\nmock_022 boolean ,\nmock_023 boolean ,\nmock_024 boolean ,\nmock_025 boolean ,\nmock_026 boolean ,\nmock_027 boolean ,\nmock_157 datetime ,\nmock_158 datetime ,\nmock_159 datetime ,\nmock_160 datetime ,\nmock_161 datetime ,\nmock_162 datetime ,\nmock_163 datetime ,\nmock_164 datetime ,\nmock_165 datetime ,\nmock_166 datetime ,\nmock_167 double ,\nmock_168 double ,\nmock_169 double ,\nmock_170 double ,\nmock_171 double ,\nmock_172 double ,\nmock_173 double ,\nmock_174 double ,\nmock_175 double ,\nmock_176 double ,\nmock_178 varchar(65533) ,\nmock_179 varchar(65533) ,\nmock_180 varchar(65533) ,\nmock_181 varchar(65533) ,\nmock_182 varchar(65533) ,\nmock_183 varchar(65533) ,\nmock_184 varchar(65533) ,\nmock_185 varchar(65533) ,\nmock_186 varchar(65533) ,\nmock_187 varchar(65533) \n) ENGINE= OLAP \nPRIMARY KEY(mock_193)\nDISTRIBUTED BY HASH(mock_193) BUCKETS 130 \nPROPERTIES (\n\"replication_num\" = \"1\"\n);"},"table_row_count":{"db_mock_000.tbl_mock_192":{"tbl_mock_192":1},"db_mock_000.tbl_mock_065":{"tbl_mock_065":1},"db_mock_000.tbl_mock_154":{"tbl_mock_154":1},"db_mock_000.tbl_mock_188":{"tbl_mock_188":1},"db_mock_000.tbl_mock_001":{"tbl_mock_001":1},"db_mock_000.tbl_mock_125":{"tbl_mock_125":1},"db_mock_000.tbl_mock_136":{"tbl_mock_136":1},"db_mock_000.tbl_mock_156":{"tbl_mock_156":1},"db_mock_000.tbl_mock_190":{"tbl_mock_190":1}},"column_statistics":{"db_mock_000.tbl_mock_192":{"mock_193":"[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_065":{"mock_071":"[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE","mock_077":"[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE","mock_075":"[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_154":{"mock_030":"[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE","mock_133":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_188":{"mock_157":"[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE","mock_189":"[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_001":{"mock_022":"[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE","mock_055":"[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE","mock_021":"[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE","mock_054":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_043":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_042":"[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE","mock_020":"[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE","mock_052":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_030":"[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE","mock_058":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_024":"[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE","mock_002":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_035":"[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE","mock_046":"[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE","mock_023":"[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE","mock_034":"[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE","mock_007":"[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE","mock_018":"[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE","mock_039":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_028":"[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE","mock_006":"[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE","mock_017":"[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE","mock_005":"[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE","id":"[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_125":{"mock_077":"[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE","mock_133":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_136":{"mock_148":"[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE","mock_075":"[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_156":{"mock_157":"[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE","mock_177":"[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE"},"db_mock_000.tbl_mock_190":{"mock_191":"[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE"}},"explain_info":"PLAN COST\n  CPU: 1.281088482E8\n  Memory: 11285.150000000001\n\nPLAN FRAGMENT 0(F1192)\n  Output Exprs:29774: min | 29775: max | 29776: cast\n  Input Partition: UNPARTITIONED\n  RESULT SINK\n\n  1804:EXCHANGE\n     cardinality: 51\n\nPLAN FRAGMENT 1(F1191)\n\n  Input Partition: RANDOM\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 1804\n\n  1738:UNION\n  |  output exprs:\n  |      [29774, DOUBLE, true] | [29775, DOUBLE, true] | [29776, BIGINT, true]\n  |  child exprs:\n  |      [28405: min, DOUBLE, true] | [29765: max, DOUBLE, true] | [29766: cast, BIGINT, false]\n  |      [29772: cast, DOUBLE, true] | [29773: cast, DOUBLE, true] | [29771: cast, BIGINT, false]\n  |  pass-through-operands: all\n  |  hasNullableGenerateChild: true\n  |  cardinality: 51\n  |  column statistics: \n  |  * min-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * max-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[1.0, 2.0, 0.0, 8.0, 2.0] ESTIMATE\n  |  \n  |----1803:EXCHANGE\n  |       distribution type: ROUND_ROBIN\n  |       cardinality: 1\n  |    \n  1800:EXCHANGE\n     distribution type: ROUND_ROBIN\n     limit: 50\n     cardinality: 1\n\nPLAN FRAGMENT 2(F1189)\n\n  Input Partition: UNPARTITIONED\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1803\n\n  1802:Project\n  |  output columns:\n  |  29771 <-> 2\n  |  29772 <-> NULL\n  |  29773 <-> NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[2.0, 2.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] ESTIMATE\n  |  \n  1801:UNION\n     constant exprs: \n         NULL\n     cardinality: 1\n     column statistics: \n     * -->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * cast-->[2.0, 2.0, 0.0, 8.0, 1.0] ESTIMATE\n     * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] ESTIMATE\n     * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 3(F1176)\n\n  Input Partition: UNPARTITIONED\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1800\n\n  1799:Project\n  |  output columns:\n  |  28405 <-> [28405: min, DOUBLE, true]\n  |  29765 <-> [29765: max, DOUBLE, true]\n  |  29766 <-> 1\n  |  hasNullableGenerateChild: true\n  |  limit: 50\n  |  cardinality: 1\n  |  column statistics: \n  |  * min-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * max-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[1.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1798:NESTLOOP JOIN\n  |  join op: CROSS JOIN\n  |  can local shuffle: false\n  |  limit: 50\n  |  cardinality: 1\n  |  column statistics: \n  |  * min-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * max-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[1.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  |----1797:EXCHANGE\n  |       distribution type: BROADCAST\n  |       limit: 1\n  |       cardinality: 1\n  |    \n  1767:AGGREGATE (merge finalize)\n  |  aggregate: min[([28405: min, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  limit: 1\n  |  cardinality: 1\n  |  column statistics: \n  |  * min-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1766:AGGREGATE (update serialize)\n  |  aggregate: min[([28403: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * min-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1765:Project\n  |  output columns:\n  |  28403 <-> [28403: case, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1764:MERGING-EXCHANGE\n     distribution type: GATHER\n     cardinality: 1\n     column statistics: \n     * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 4(F1186)\n\n  Input Partition: UNPARTITIONED\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 1797\n\n  1796:AGGREGATE (merge finalize)\n  |  aggregate: max[([29765: max, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  limit: 1\n  |  cardinality: 1\n  |  column statistics: \n  |  * max-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1795:AGGREGATE (update serialize)\n  |  aggregate: max[([29764: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * max-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1794:Project\n  |  output columns:\n  |  29764 <-> [29764: case, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1793:MERGING-EXCHANGE\n     distribution type: GATHER\n     cardinality: 1\n     column statistics: \n     * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 5(F1185)\n\n  Input Partition: HASH_PARTITIONED: 28409: mock_148\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 1793\n\n  1792:SORT\n  |  order by: [29762, DOUBLE, true] DESC\n  |  offset: 0\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1791:Project\n  |  output columns:\n  |  29762 <-> [29762: sum, DOUBLE, true]\n  |  29764 <-> if[([29762: sum, DOUBLE, true] > 0.0, [29762: sum, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1790:AGGREGATE (merge finalize)\n  |  aggregate: sum[([29762: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [28409: mock_148, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1789:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [28409: mock_148, VARCHAR(65535), true]\n     cardinality: 1\n\nPLAN FRAGMENT 6(F1184)\n\n  Input Partition: HASH_PARTITIONED: 29777: cast\n  OutPut Partition: HASH_PARTITIONED: 28409: mock_148\n  OutPut Exchange id: 1789\n\n  1788:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([29760: expr, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [28409: mock_148, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1787:Project\n  |  output columns:\n  |  28409 <-> [28409: mock_148, VARCHAR(65535), true]\n  |  29760 <-> [29053: case, DOUBLE, true] / cast([29759: coalesce, BIGINT, true] as DOUBLE)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1786:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29777: cast, LARGEINT, true] = [29056: mock_193, LARGEINT, true]\n  |  output columns: 28409, 29053, 29759\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1785:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29056: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1772:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29777: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 7(F1179)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 29056: mock_193\n  OutPut Exchange id: 1785\n\n  1784:Project\n  |  output columns:\n  |  29056 <-> [29056: mock_193, LARGEINT, false]\n  |  29759 <-> coalesce[([29758: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1783:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [29056: mock_193, LARGEINT, false] = [29778: cast, LARGEINT, true]\n  |  output columns: 29056, 29758\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1782:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29778: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1773:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 8(F1181)\n\n  Input Partition: HASH_PARTITIONED: 29124: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29778: cast\n  OutPut Exchange id: 1782\n\n  1781:Project\n  |  output columns:\n  |  29758 <-> [29758: count, BIGINT, false]\n  |  29778 <-> cast([29124: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1780:AGGREGATE (merge finalize)\n  |  aggregate: count[([29758: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [29124: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1779:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29124: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 9(F1180)\n\n  Input Partition: HASH_PARTITIONED: 29846: cast\n  OutPut Partition: HASH_PARTITIONED: 29124: xx_hash3_64\n  OutPut Exchange id: 1779\n\n  1778:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([29757: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [29124: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1777:Project\n  |  output columns:\n  |  29124 <-> [29124: xx_hash3_64, BIGINT, true]\n  |  29757 <-> if[([29756: expr, BOOLEAN, true], [29755: case, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  1776:SELECT\n  |  predicates: 29124: xx_hash3_64 IS NOT NULL, 29756: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 2.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1775:Project\n  |  output columns:\n  |  29124 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  29755 <-> [27044: case, VARCHAR(65535), true]\n  |  29756 <-> [27045: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 2.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  \n  1774:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29846: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 10(F1177)\n\n  Input Partition: HASH_PARTITIONED: 29846: cast\n  OutPut Partition: HASH_PARTITIONED: 29777: cast\n  OutPut Exchange id: 1772\n\n  1771:Project\n  |  output columns:\n  |  28409 <-> [28409: mock_148, VARCHAR(65535), true]\n  |  29053 <-> [29053: case, DOUBLE, true]\n  |  29777 <-> cast([28423: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1770:SELECT\n  |  predicates: 28411: mock_024, 28412: mock_021, 28413: mock_018, 28414: mock_023, 28410: mock_017, 28415: mock_022, 28416: expr, 28417: expr, 28418: mock_020, 28419: expr, 28420: expr, 28426: expr, 28583: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1769:Project\n  |  output columns:\n  |  28409 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  28410 <-> [26400: mock_017, BOOLEAN, true]\n  |  28411 <-> [26401: mock_024, BOOLEAN, true]\n  |  28412 <-> [26402: mock_021, BOOLEAN, true]\n  |  28413 <-> [26403: mock_018, BOOLEAN, true]\n  |  28414 <-> [26404: mock_023, BOOLEAN, true]\n  |  28415 <-> [26405: mock_022, BOOLEAN, true]\n  |  28416 <-> [26406: expr, BOOLEAN, true]\n  |  28417 <-> [26407: expr, BOOLEAN, true]\n  |  28418 <-> [26408: mock_020, BOOLEAN, true]\n  |  28419 <-> [26409: expr, BOOLEAN, true]\n  |  28420 <-> [26410: expr, BOOLEAN, true]\n  |  28423 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  28426 <-> [26416: expr, BOOLEAN, true]\n  |  28583 <-> [26573: expr, BOOLEAN, true]\n  |  29053 <-> [27043: case, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  \n  1768:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29846: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 11(F1175)\n\n  Input Partition: HASH_PARTITIONED: 27049: mock_148\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 1764\n\n  1763:SORT\n  |  order by: [28402, DOUBLE, true] DESC\n  |  offset: 0\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1762:Project\n  |  output columns:\n  |  28402 <-> [28402: sum, DOUBLE, true]\n  |  28403 <-> if[([28402: sum, DOUBLE, true] < 0.0, [28402: sum, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1761:AGGREGATE (merge finalize)\n  |  aggregate: sum[([28402: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [27049: mock_148, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1760:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [27049: mock_148, VARCHAR(65535), true]\n     cardinality: 1\n\nPLAN FRAGMENT 12(F1174)\n\n  Input Partition: HASH_PARTITIONED: 29811: cast\n  OutPut Partition: HASH_PARTITIONED: 27049: mock_148\n  OutPut Exchange id: 1760\n\n  1759:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([28400: expr, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [27049: mock_148, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1758:Project\n  |  output columns:\n  |  27049 <-> [27049: mock_148, VARCHAR(65535), true]\n  |  28400 <-> [27693: case, DOUBLE, true] / cast([28399: coalesce, BIGINT, true] as DOUBLE)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1757:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29811: cast, LARGEINT, true] = [27696: mock_193, LARGEINT, true]\n  |  output columns: 27049, 27693, 28399\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1756:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [27696: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1743:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29811: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 13(F1169)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 27696: mock_193\n  OutPut Exchange id: 1756\n\n  1755:Project\n  |  output columns:\n  |  27696 <-> [27696: mock_193, LARGEINT, false]\n  |  28399 <-> coalesce[([28398: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1754:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [27696: mock_193, LARGEINT, false] = [29812: cast, LARGEINT, true]\n  |  output columns: 27696, 28398\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1753:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29812: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1744:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 14(F1171)\n\n  Input Partition: HASH_PARTITIONED: 27764: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29812: cast\n  OutPut Exchange id: 1753\n\n  1752:Project\n  |  output columns:\n  |  28398 <-> [28398: count, BIGINT, false]\n  |  29812 <-> cast([27764: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1751:AGGREGATE (merge finalize)\n  |  aggregate: count[([28398: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [27764: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1750:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [27764: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 15(F1170)\n\n  Input Partition: HASH_PARTITIONED: 29846: cast\n  OutPut Partition: HASH_PARTITIONED: 27764: xx_hash3_64\n  OutPut Exchange id: 1750\n\n  1749:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([28397: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [27764: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1748:Project\n  |  output columns:\n  |  27764 <-> [27764: xx_hash3_64, BIGINT, true]\n  |  28397 <-> if[([28396: expr, BOOLEAN, true], [28395: case, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  1747:SELECT\n  |  predicates: 27764: xx_hash3_64 IS NOT NULL, 28396: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 2.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1746:Project\n  |  output columns:\n  |  27764 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  28395 <-> [27044: case, VARCHAR(65535), true]\n  |  28396 <-> [27045: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 2.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  \n  1745:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29846: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 16(F1167)\n\n  Input Partition: HASH_PARTITIONED: 29846: cast\n  OutPut Partition: HASH_PARTITIONED: 29811: cast\n  OutPut Exchange id: 1743\n\n  1742:Project\n  |  output columns:\n  |  27049 <-> [27049: mock_148, VARCHAR(65535), true]\n  |  27693 <-> [27693: case, DOUBLE, true]\n  |  29811 <-> cast([27063: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1741:SELECT\n  |  predicates: 27051: mock_024, 27052: mock_021, 27053: mock_018, 27054: mock_023, 27050: mock_017, 27055: mock_022, 27056: expr, 27057: expr, 27058: mock_020, 27059: expr, 27060: expr, 27066: expr, 27223: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1740:Project\n  |  output columns:\n  |  27049 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  27050 <-> [26400: mock_017, BOOLEAN, true]\n  |  27051 <-> [26401: mock_024, BOOLEAN, true]\n  |  27052 <-> [26402: mock_021, BOOLEAN, true]\n  |  27053 <-> [26403: mock_018, BOOLEAN, true]\n  |  27054 <-> [26404: mock_023, BOOLEAN, true]\n  |  27055 <-> [26405: mock_022, BOOLEAN, true]\n  |  27056 <-> [26406: expr, BOOLEAN, true]\n  |  27057 <-> [26407: expr, BOOLEAN, true]\n  |  27058 <-> [26408: mock_020, BOOLEAN, true]\n  |  27059 <-> [26409: expr, BOOLEAN, true]\n  |  27060 <-> [26410: expr, BOOLEAN, true]\n  |  27063 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  27066 <-> [26416: expr, BOOLEAN, true]\n  |  27223 <-> [26573: expr, BOOLEAN, true]\n  |  27693 <-> [27043: case, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  \n  1739:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29846: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 17(F1166)\n  Output Exprs:26399: mock_148 | 26400: mock_017 | 26401: mock_024 | 26402: mock_021 | 26403: mock_018 | 26404: mock_023 | 26405: mock_022 | 26406: expr | 26407: expr | 26408: mock_020 | 26409: expr | 26410: expr | 26413: xx_hash3_64 | 26416: expr | 26573: expr | 27043: case | 27044: case | 27045: expr\n  Input Partition: HASH_PARTITIONED: 29846: cast\n  MultiCastDataSinks:\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1739\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1745\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1768\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1774\n\n  1737:Project\n  |  output columns:\n  |  26399 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  26400 <-> [26400: mock_017, BOOLEAN, true]\n  |  26401 <-> [26401: mock_024, BOOLEAN, true]\n  |  26402 <-> [26402: mock_021, BOOLEAN, true]\n  |  26403 <-> [26403: mock_018, BOOLEAN, true]\n  |  26404 <-> [26404: mock_023, BOOLEAN, true]\n  |  26405 <-> [26405: mock_022, BOOLEAN, true]\n  |  26406 <-> [26406: expr, BOOLEAN, true]\n  |  26407 <-> [26407: expr, BOOLEAN, true]\n  |  26408 <-> [26408: mock_020, BOOLEAN, true]\n  |  26409 <-> [26409: expr, BOOLEAN, true]\n  |  26410 <-> [26410: expr, BOOLEAN, true]\n  |  26413 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  26416 <-> [26416: expr, BOOLEAN, true]\n  |  26573 <-> [26573: expr, BOOLEAN, true]\n  |  27043 <-> if[([30171: case, DOUBLE, true] > [26398: expr, DOUBLE, true], [30171: case, DOUBLE, true] * cast([30174: if, BIGINT, true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  27044 <-> if[([30174: if, BIGINT, true] = 1, [26411: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  27045 <-> ((((26401: mock_024) AND (26402: mock_021)) AND ((26403: mock_018) AND (26404: mock_023))) AND (((26400: mock_017) AND (26405: mock_022)) AND ((26406: expr) AND (26407: expr)))) AND ((((26408: mock_020) AND (26409: expr)) AND ((26410: expr) AND (26416: expr))) AND (26573: expr))\n  |  common expressions:\n  |  30163 <-> [26806: sum, DOUBLE, true] > 0.0\n  |  30164 <-> coalesce[([26414: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30165 <-> [30164: coalesce, BIGINT, true] = 1\n  |  30166 <-> [30164: coalesce, BIGINT, true] = 0\n  |  30167 <-> [30164: coalesce, BIGINT, true] != 1\n  |  30168 <-> (30163: expr) AND (30165: expr)\n  |  30169 <-> (30163: expr) AND (30166: expr)\n  |  30170 <-> (30163: expr) AND (30167: expr)\n  |  30171 <-> CASE WHEN 30168: expr THEN 27039: sum WHEN 30169: expr THEN 0.0 ELSE 27040: sum END\n  |  30172 <-> CASE WHEN 30168: expr THEN 26414: case WHEN 30170: expr THEN 0 ELSE 26415: case END\n  |  30173 <-> [30172: case, BIGINT, true] = 1\n  |  30174 <-> if[([30173: expr, BOOLEAN, true], 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 2.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  \n  1736:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29845: cast, LARGEINT, true] = [26807: mock_193, LARGEINT, true]\n  |  output columns: 26398, 26399, 26400, 26401, 26402, 26403, 26404, 26405, 26406, 26407, 26408, 26409, 26410, 26411, 26413, 26414, 26415, 26416, 26573, 26806, 27039, 27040\n  |  can local shuffle: false\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 2.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1735:Project\n  |    |  output columns:\n  |    |  26807 <-> [26807: mock_193, LARGEINT, false]\n  |    |  27039 <-> [27039: sum, DOUBLE, true]\n  |    |  27040 <-> [27040: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    1734:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29846: cast, LARGEINT, true] = [26807: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 150, build_expr = (26807: mock_193), remote = true\n  |    |  output columns: 26807, 27039, 27040\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----1733:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [26807: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    1731:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29846: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1690:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29845: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 18(F1164)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26807: mock_193\n  OutPut Exchange id: 1733\n\n  1732:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 19(F1162)\n\n  Input Partition: HASH_PARTITIONED: 26875: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29846: cast\n  OutPut Exchange id: 1731\n\n  1730:Project\n  |  output columns:\n  |  27039 <-> [27039: sum, DOUBLE, true]\n  |  27040 <-> [27040: sum, DOUBLE, true]\n  |  29846 <-> cast([26875: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1729:AGGREGATE (merge finalize)\n  |  aggregate: sum[([27039: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([27040: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26875: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 150, probe_expr = (CAST(26875: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1728:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26875: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 20(F1154)\n\n  Input Partition: HASH_PARTITIONED: 29849: cast\n  OutPut Partition: HASH_PARTITIONED: 26875: xx_hash3_64\n  OutPut Exchange id: 1728\n\n  1727:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([27037: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([27038: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26875: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1726:Project\n  |  output columns:\n  |  26875 <-> [26875: xx_hash3_64, BIGINT, true]\n  |  27037 <-> if[([30239: expr, BOOLEAN, true], [26858: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  27038 <-> if[([30239: expr, BOOLEAN, true], [26859: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30211 <-> [26954: sum, DOUBLE, true] > 0.0\n  |  30212 <-> coalesce[([26876: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30213 <-> (26863: mock_024) AND (26864: mock_021)\n  |  30214 <-> (26865: mock_018) AND (26866: mock_023)\n  |  30215 <-> (26862: mock_017) AND (26867: mock_022)\n  |  30216 <-> (26868: expr) AND (26869: expr)\n  |  30217 <-> (26870: mock_020) AND (26871: expr)\n  |  30218 <-> (26872: expr) AND (26878: expr)\n  |  30219 <-> [30212: coalesce, BIGINT, true] = 1\n  |  30220 <-> [30212: coalesce, BIGINT, true] = 0\n  |  30221 <-> (30213: expr) AND (30214: expr)\n  |  30222 <-> (30215: expr) AND (30216: expr)\n  |  30223 <-> (30217: expr) AND (30218: expr)\n  |  30224 <-> [30212: coalesce, BIGINT, true] != 1\n  |  30225 <-> (30211: expr) AND (30219: expr)\n  |  30226 <-> (30211: expr) AND (30220: expr)\n  |  30227 <-> (30221: expr) AND (30222: expr)\n  |  30228 <-> (30211: expr) AND (30224: expr)\n  |  30229 <-> CASE WHEN 30225: expr THEN 27030: sum WHEN 30226: expr THEN 0.0 ELSE 27031: sum END\n  |  30230 <-> CASE WHEN 30225: expr THEN 26876: case WHEN 30228: expr THEN 0 ELSE 26877: case END\n  |  30231 <-> [30229: case, DOUBLE, true] > [26860: expr, DOUBLE, true]\n  |  30232 <-> [30230: case, BIGINT, true] = 1\n  |  30233 <-> if[([30232: expr, BOOLEAN, true], 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30234 <-> cast([30233: if, BIGINT, true] as DOUBLE)\n  |  30235 <-> [30229: case, DOUBLE, true] * [30234: cast, DOUBLE, true]\n  |  30236 <-> if[([30231: expr, BOOLEAN, true], [30235: multiply, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  30237 <-> [30236: if, DOUBLE, true] > 0.0\n  |  30238 <-> (30223: expr) AND (30237: expr)\n  |  30239 <-> (30227: expr) AND (30238: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1725:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BROADCAST)\n  |  equal join conjunct: [29847: cast, LARGEINT, true] = [26955: mock_193, LARGEINT, true]\n  |  other predicates: if[(CASE WHEN (26954: sum > 0.0) AND (coalesce(26876: case, 0) = 1) THEN 27030: sum WHEN (26954: sum > 0.0) AND (coalesce(26876: case, 0) = 0) THEN 0.0 ELSE 27031: sum END > [26860: expr, DOUBLE, true], CASE WHEN (26954: sum > 0.0) AND (coalesce(26876: case, 0) = 1) THEN 27030: sum WHEN (26954: sum > 0.0) AND (coalesce(26876: case, 0) = 0) THEN 0.0 ELSE 27031: sum END * cast(if[(CASE WHEN (26954: sum > 0.0) AND (coalesce(26876: case, 0) = 1) THEN 26876: case WHEN (26954: sum > 0.0) AND (coalesce(26876: case, 0) != 1) THEN 0 ELSE 26877: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] > 0.0\n  |  output columns: 26858, 26859, 26860, 26862, 26863, 26864, 26865, 26866, 26867, 26868, 26869, 26870, 26871, 26872, 26875, 26876, 26877, 26878, 26954, 27030, 27031\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1724:EXCHANGE\n  |       distribution type: BROADCAST\n  |       cardinality: 1\n  |    \n  1710:Project\n  |  output columns:\n  |  26858 <-> [26858: case, DOUBLE, true]\n  |  26859 <-> [26859: case, DOUBLE, true]\n  |  26860 <-> [26860: expr, DOUBLE, true]\n  |  26862 <-> [26862: mock_017, BOOLEAN, true]\n  |  26863 <-> [26863: mock_024, BOOLEAN, true]\n  |  26864 <-> [26864: mock_021, BOOLEAN, true]\n  |  26865 <-> [26865: mock_018, BOOLEAN, true]\n  |  26866 <-> [26866: mock_023, BOOLEAN, true]\n  |  26867 <-> [26867: mock_022, BOOLEAN, true]\n  |  26868 <-> [26868: expr, BOOLEAN, true]\n  |  26869 <-> [26869: expr, BOOLEAN, true]\n  |  26870 <-> [26870: mock_020, BOOLEAN, true]\n  |  26871 <-> [26871: expr, BOOLEAN, true]\n  |  26872 <-> [26872: expr, BOOLEAN, true]\n  |  26875 <-> [26875: xx_hash3_64, BIGINT, true]\n  |  26876 <-> [26876: case, BIGINT, true]\n  |  26877 <-> [26877: case, BIGINT, true]\n  |  26878 <-> [26878: expr, BOOLEAN, true]\n  |  26954 <-> [26954: sum, DOUBLE, true]\n  |  29847 <-> cast([26875: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1709:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29849: cast, LARGEINT, true] = [26879: mock_191, LARGEINT, true]\n  |  output columns: 26858, 26859, 26860, 26862, 26863, 26864, 26865, 26866, 26867, 26868, 26869, 26870, 26871, 26872, 26875, 26876, 26877, 26878, 26954\n  |  can local shuffle: false\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1708:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [26879: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1695:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29849: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 21(F1160)\n\n  Input Partition: HASH_PARTITIONED: 29848: cast\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 1724\n\n  1723:Project\n  |  output columns:\n  |  26955 <-> [26955: mock_193, LARGEINT, false]\n  |  27030 <-> [27030: sum, DOUBLE, true]\n  |  27031 <-> [27031: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1722:HASH JOIN\n  |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29848: cast, LARGEINT, true] = [26955: mock_193, LARGEINT, false]\n  |  build runtime filters:\n  |  - filter_id = 149, build_expr = (26955: mock_193), remote = true\n  |  output columns: 26955, 27030, 27031\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1721:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [26955: mock_193, LARGEINT, false]\n  |       cardinality: 1\n  |    \n  1719:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29848: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 22(F1158)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26955: mock_193\n  OutPut Exchange id: 1721\n\n  1720:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 23(F1156)\n\n  Input Partition: HASH_PARTITIONED: 27023: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29848: cast\n  OutPut Exchange id: 1719\n\n  1718:Project\n  |  output columns:\n  |  27030 <-> [27030: sum, DOUBLE, true]\n  |  27031 <-> [27031: sum, DOUBLE, true]\n  |  29848 <-> cast([27023: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1717:AGGREGATE (merge finalize)\n  |  aggregate: sum[([27030: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([27031: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [27023: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 149, probe_expr = (CAST(27023: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1716:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [27023: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 24(F1155)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 27023: xx_hash3_64\n  OutPut Exchange id: 1716\n\n  1715:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([27028: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([27029: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [27023: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1714:Project\n  |  output columns:\n  |  27023 <-> [27023: xx_hash3_64, BIGINT, true]\n  |  27028 <-> if[([30250: expr, BOOLEAN, true], [27006: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  27029 <-> if[([30250: expr, BOOLEAN, true], [27007: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30240 <-> (27011: mock_024) AND (27012: mock_021)\n  |  30241 <-> (27013: mock_018) AND (27014: mock_023)\n  |  30242 <-> (27010: mock_017) AND (27015: mock_022)\n  |  30243 <-> (27016: expr) AND (27017: expr)\n  |  30244 <-> (27018: mock_020) AND (27019: expr)\n  |  30245 <-> (27020: expr) AND (27026: expr)\n  |  30246 <-> (30240: expr) AND (30241: expr)\n  |  30247 <-> (30242: expr) AND (30243: expr)\n  |  30248 <-> (30244: expr) AND (30245: expr)\n  |  30249 <-> (30246: expr) AND (30247: expr)\n  |  30250 <-> (30249: expr) AND (30248: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1713:SELECT\n  |  predicates: 27023: xx_hash3_64 IS NOT NULL, 27011: mock_024, 27012: mock_021, 27013: mock_018, 27014: mock_023, 27010: mock_017, 27015: mock_022, 27016: expr, 27017: expr, 27018: mock_020, 27019: expr, 27020: expr, 27026: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1712:Project\n  |  output columns:\n  |  27006 <-> [12994: case, DOUBLE, true]\n  |  27007 <-> [12995: case, DOUBLE, true]\n  |  27010 <-> [12734: mock_017, BOOLEAN, true]\n  |  27011 <-> [12740: mock_024, BOOLEAN, true]\n  |  27012 <-> [12737: mock_021, BOOLEAN, true]\n  |  27013 <-> [12735: mock_018, BOOLEAN, true]\n  |  27014 <-> [12739: mock_023, BOOLEAN, true]\n  |  27015 <-> [12738: mock_022, BOOLEAN, true]\n  |  27016 <-> [12989: expr, BOOLEAN, true]\n  |  27017 <-> [12990: expr, BOOLEAN, true]\n  |  27018 <-> [12736: mock_020, BOOLEAN, true]\n  |  27019 <-> [14854: expr, BOOLEAN, true]\n  |  27020 <-> [12752: expr, BOOLEAN, true]\n  |  27023 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  27026 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1711:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 25(F1149)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26879: mock_191\n  OutPut Exchange id: 1708\n\n  1707:Project\n  |  output columns:\n  |  26879 <-> [26879: mock_191, LARGEINT, false]\n  |  26954 <-> [26954: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1706:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [26879: mock_191, LARGEINT, false] = [29850: cast, LARGEINT, true]\n  |  output columns: 26879, 26954\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1705:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29850: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1696:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 26(F1151)\n\n  Input Partition: HASH_PARTITIONED: 26946: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29850: cast\n  OutPut Exchange id: 1705\n\n  1704:Project\n  |  output columns:\n  |  26954 <-> [26954: sum, DOUBLE, true]\n  |  29850 <-> cast([26946: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1703:AGGREGATE (merge finalize)\n  |  aggregate: sum[([26954: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26946: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1702:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26946: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 27(F1150)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 26946: xx_hash3_64\n  OutPut Exchange id: 1702\n\n  1701:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([26952: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26946: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1700:Project\n  |  output columns:\n  |  26946 <-> [26946: xx_hash3_64, BIGINT, true]\n  |  26952 <-> if[(((((26935: mock_024) AND (26936: mock_021)) AND ((26937: mock_018) AND (26938: mock_023))) AND (((26934: mock_017) AND (26939: mock_022)) AND ((26940: expr) AND (26941: expr)))) AND (((26942: mock_020) AND (26943: expr)) AND ((26944: expr) AND (26950: expr))), [26930: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1699:SELECT\n  |  predicates: 26946: xx_hash3_64 IS NOT NULL, 26935: mock_024, 26936: mock_021, 26937: mock_018, 26938: mock_023, 26934: mock_017, 26939: mock_022, 26940: expr, 26941: expr, 26942: mock_020, 26943: expr, 26944: expr, 26950: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1698:Project\n  |  output columns:\n  |  26930 <-> [12994: case, DOUBLE, true]\n  |  26934 <-> [12734: mock_017, BOOLEAN, true]\n  |  26935 <-> [12740: mock_024, BOOLEAN, true]\n  |  26936 <-> [12737: mock_021, BOOLEAN, true]\n  |  26937 <-> [12735: mock_018, BOOLEAN, true]\n  |  26938 <-> [12739: mock_023, BOOLEAN, true]\n  |  26939 <-> [12738: mock_022, BOOLEAN, true]\n  |  26940 <-> [12989: expr, BOOLEAN, true]\n  |  26941 <-> [12990: expr, BOOLEAN, true]\n  |  26942 <-> [12736: mock_020, BOOLEAN, true]\n  |  26943 <-> [14854: expr, BOOLEAN, true]\n  |  26944 <-> [12752: expr, BOOLEAN, true]\n  |  26946 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  26950 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1697:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 28(F1147)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 29849: cast\n  OutPut Exchange id: 1695\n\n  1694:Project\n  |  output columns:\n  |  26858 <-> [26858: case, DOUBLE, true]\n  |  26859 <-> [26859: case, DOUBLE, true]\n  |  26860 <-> [26860: expr, DOUBLE, true]\n  |  26862 <-> [26862: mock_017, BOOLEAN, true]\n  |  26863 <-> [26863: mock_024, BOOLEAN, true]\n  |  26864 <-> [26864: mock_021, BOOLEAN, true]\n  |  26865 <-> [26865: mock_018, BOOLEAN, true]\n  |  26866 <-> [26866: mock_023, BOOLEAN, true]\n  |  26867 <-> [26867: mock_022, BOOLEAN, true]\n  |  26868 <-> [26868: expr, BOOLEAN, true]\n  |  26869 <-> [26869: expr, BOOLEAN, true]\n  |  26870 <-> [26870: mock_020, BOOLEAN, true]\n  |  26871 <-> [26871: expr, BOOLEAN, true]\n  |  26872 <-> [26872: expr, BOOLEAN, true]\n  |  26875 <-> [26875: xx_hash3_64, BIGINT, true]\n  |  26876 <-> [26876: case, BIGINT, true]\n  |  26877 <-> [26877: case, BIGINT, true]\n  |  26878 <-> [26878: expr, BOOLEAN, true]\n  |  29849 <-> cast([26874: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1693:SELECT\n  |  predicates: 26875: xx_hash3_64 IS NOT NULL, 26863: mock_024, 26864: mock_021, 26865: mock_018, 26866: mock_023, 26862: mock_017, 26867: mock_022, 26868: expr, 26869: expr, 26870: mock_020, 26871: expr, 26872: expr, 26878: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1692:Project\n  |  output columns:\n  |  26858 <-> [12994: case, DOUBLE, true]\n  |  26859 <-> [12995: case, DOUBLE, true]\n  |  26860 <-> [12751: expr, DOUBLE, true]\n  |  26862 <-> [12734: mock_017, BOOLEAN, true]\n  |  26863 <-> [12740: mock_024, BOOLEAN, true]\n  |  26864 <-> [12737: mock_021, BOOLEAN, true]\n  |  26865 <-> [12735: mock_018, BOOLEAN, true]\n  |  26866 <-> [12739: mock_023, BOOLEAN, true]\n  |  26867 <-> [12738: mock_022, BOOLEAN, true]\n  |  26868 <-> [12989: expr, BOOLEAN, true]\n  |  26869 <-> [12990: expr, BOOLEAN, true]\n  |  26870 <-> [12736: mock_020, BOOLEAN, true]\n  |  26871 <-> [14854: expr, BOOLEAN, true]\n  |  26872 <-> [12752: expr, BOOLEAN, true]\n  |  26874 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  26875 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  26876 <-> [12992: case, BIGINT, true]\n  |  26877 <-> [12993: case, BIGINT, true]\n  |  26878 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1691:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 29(F1145)\n\n  Input Partition: HASH_PARTITIONED: 29851: cast\n  OutPut Partition: HASH_PARTITIONED: 29845: cast\n  OutPut Exchange id: 1690\n\n  1689:Project\n  |  output columns:\n  |  26398 <-> [26398: expr, DOUBLE, true]\n  |  26399 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  26400 <-> [26400: mock_017, BOOLEAN, true]\n  |  26401 <-> [26401: mock_024, BOOLEAN, true]\n  |  26402 <-> [26402: mock_021, BOOLEAN, true]\n  |  26403 <-> [26403: mock_018, BOOLEAN, true]\n  |  26404 <-> [26404: mock_023, BOOLEAN, true]\n  |  26405 <-> [26405: mock_022, BOOLEAN, true]\n  |  26406 <-> [26406: expr, BOOLEAN, true]\n  |  26407 <-> [26407: expr, BOOLEAN, true]\n  |  26408 <-> [26408: mock_020, BOOLEAN, true]\n  |  26409 <-> [26409: expr, BOOLEAN, true]\n  |  26410 <-> [26410: expr, BOOLEAN, true]\n  |  26411 <-> [26411: id, VARCHAR(65535), true]\n  |  26413 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  26414 <-> [26414: case, BIGINT, true]\n  |  26415 <-> [26415: case, BIGINT, true]\n  |  26416 <-> [26416: expr, BOOLEAN, true]\n  |  26573 <-> [26573: expr, BOOLEAN, true]\n  |  26806 <-> [26806: sum, DOUBLE, true]\n  |  29845 <-> cast([26413: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1688:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29851: cast, LARGEINT, true] = [26574: mock_191, LARGEINT, true]\n  |  output columns: 26398, 26399, 26400, 26401, 26402, 26403, 26404, 26405, 26406, 26407, 26408, 26409, 26410, 26411, 26413, 26414, 26415, 26416, 26573, 26806\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1687:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [26574: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1642:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29851: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 30(F1126)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26574: mock_191\n  OutPut Exchange id: 1687\n\n  1686:Project\n  |  output columns:\n  |  26574 <-> [26574: mock_191, LARGEINT, false]\n  |  26806 <-> [26806: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1685:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [26574: mock_191, LARGEINT, false] = [29852: cast, LARGEINT, true]\n  |  output columns: 26574, 26806\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1684:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29852: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1643:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 31(F1142)\n\n  Input Partition: HASH_PARTITIONED: 26641: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29852: cast\n  OutPut Exchange id: 1684\n\n  1683:Project\n  |  output columns:\n  |  26806 <-> [26806: sum, DOUBLE, true]\n  |  29852 <-> cast([26641: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1682:AGGREGATE (merge finalize)\n  |  aggregate: sum[([26806: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26641: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1681:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26641: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 32(F1134)\n\n  Input Partition: HASH_PARTITIONED: 29855: cast\n  OutPut Partition: HASH_PARTITIONED: 26641: xx_hash3_64\n  OutPut Exchange id: 1681\n\n  1680:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([26804: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26641: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1679:Project\n  |  output columns:\n  |  26641 <-> [26641: xx_hash3_64, BIGINT, true]\n  |  26804 <-> if[(((((26630: mock_024) AND (26631: mock_021)) AND ((26632: mock_018) AND (26633: mock_023))) AND (((26629: mock_017) AND (26634: mock_022)) AND ((26635: expr) AND (26636: expr)))) AND ((((26637: mock_020) AND (26638: expr)) AND ((26639: expr) AND (26645: expr))) AND (if(30199: case > 26627: expr, 30199: case * CAST(if(CASE WHEN 30197: expr THEN 26643: case WHEN (30193: expr) AND (30194: coalesce != 1) THEN 0 ELSE 26644: case END = 1, 1, 0) AS DOUBLE), 0.0) > 0.0)), [26625: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30193 <-> [26721: sum, DOUBLE, true] > 0.0\n  |  30194 <-> coalesce[([26643: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30195 <-> [30194: coalesce, BIGINT, true] = 1\n  |  30196 <-> [30194: coalesce, BIGINT, true] = 0\n  |  30197 <-> (30193: expr) AND (30195: expr)\n  |  30198 <-> (30193: expr) AND (30196: expr)\n  |  30199 <-> CASE WHEN 30197: expr THEN 26797: sum WHEN 30198: expr THEN 0.0 ELSE 26798: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1678:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BROADCAST)\n  |  equal join conjunct: [29853: cast, LARGEINT, true] = [26722: mock_193, LARGEINT, true]\n  |  other predicates: if[(CASE WHEN (26721: sum > 0.0) AND (coalesce(26643: case, 0) = 1) THEN 26797: sum WHEN (26721: sum > 0.0) AND (coalesce(26643: case, 0) = 0) THEN 0.0 ELSE 26798: sum END > [26627: expr, DOUBLE, true], CASE WHEN (26721: sum > 0.0) AND (coalesce(26643: case, 0) = 1) THEN 26797: sum WHEN (26721: sum > 0.0) AND (coalesce(26643: case, 0) = 0) THEN 0.0 ELSE 26798: sum END * cast(if[(CASE WHEN (26721: sum > 0.0) AND (coalesce(26643: case, 0) = 1) THEN 26643: case WHEN (26721: sum > 0.0) AND (coalesce(26643: case, 0) != 1) THEN 0 ELSE 26644: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] > 0.0\n  |  output columns: 26625, 26627, 26629, 26630, 26631, 26632, 26633, 26634, 26635, 26636, 26637, 26638, 26639, 26641, 26643, 26644, 26645, 26721, 26797, 26798\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1677:EXCHANGE\n  |       distribution type: BROADCAST\n  |       cardinality: 1\n  |    \n  1663:Project\n  |  output columns:\n  |  26625 <-> [26625: case, DOUBLE, true]\n  |  26627 <-> [26627: expr, DOUBLE, true]\n  |  26629 <-> [26629: mock_017, BOOLEAN, true]\n  |  26630 <-> [26630: mock_024, BOOLEAN, true]\n  |  26631 <-> [26631: mock_021, BOOLEAN, true]\n  |  26632 <-> [26632: mock_018, BOOLEAN, true]\n  |  26633 <-> [26633: mock_023, BOOLEAN, true]\n  |  26634 <-> [26634: mock_022, BOOLEAN, true]\n  |  26635 <-> [26635: expr, BOOLEAN, true]\n  |  26636 <-> [26636: expr, BOOLEAN, true]\n  |  26637 <-> [26637: mock_020, BOOLEAN, true]\n  |  26638 <-> [26638: expr, BOOLEAN, true]\n  |  26639 <-> [26639: expr, BOOLEAN, true]\n  |  26641 <-> [26641: xx_hash3_64, BIGINT, true]\n  |  26643 <-> [26643: case, BIGINT, true]\n  |  26644 <-> [26644: case, BIGINT, true]\n  |  26645 <-> [26645: expr, BOOLEAN, true]\n  |  26721 <-> [26721: sum, DOUBLE, true]\n  |  29853 <-> cast([26642: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1662:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29855: cast, LARGEINT, true] = [26646: mock_191, LARGEINT, true]\n  |  output columns: 26625, 26627, 26629, 26630, 26631, 26632, 26633, 26634, 26635, 26636, 26637, 26638, 26639, 26641, 26642, 26643, 26644, 26645, 26721\n  |  can local shuffle: false\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1661:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [26646: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1648:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29855: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 33(F1140)\n\n  Input Partition: HASH_PARTITIONED: 29854: cast\n  OutPut Partition: UNPARTITIONED\n  OutPut Exchange id: 1677\n\n  1676:Project\n  |  output columns:\n  |  26722 <-> [26722: mock_193, LARGEINT, false]\n  |  26797 <-> [26797: sum, DOUBLE, true]\n  |  26798 <-> [26798: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1675:HASH JOIN\n  |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29854: cast, LARGEINT, true] = [26722: mock_193, LARGEINT, false]\n  |  build runtime filters:\n  |  - filter_id = 148, build_expr = (26722: mock_193), remote = true\n  |  output columns: 26722, 26797, 26798\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1674:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [26722: mock_193, LARGEINT, false]\n  |       cardinality: 1\n  |    \n  1672:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29854: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 34(F1138)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26722: mock_193\n  OutPut Exchange id: 1674\n\n  1673:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 35(F1136)\n\n  Input Partition: HASH_PARTITIONED: 26790: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29854: cast\n  OutPut Exchange id: 1672\n\n  1671:Project\n  |  output columns:\n  |  26797 <-> [26797: sum, DOUBLE, true]\n  |  26798 <-> [26798: sum, DOUBLE, true]\n  |  29854 <-> cast([26790: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1670:AGGREGATE (merge finalize)\n  |  aggregate: sum[([26797: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([26798: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26790: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 148, probe_expr = (CAST(26790: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1669:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26790: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 36(F1135)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 26790: xx_hash3_64\n  OutPut Exchange id: 1669\n\n  1668:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([26795: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([26796: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26790: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1667:Project\n  |  output columns:\n  |  26790 <-> [26790: xx_hash3_64, BIGINT, true]\n  |  26795 <-> if[([30210: expr, BOOLEAN, true], [26773: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  26796 <-> if[([30210: expr, BOOLEAN, true], [26774: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30208 <-> (30204: expr) AND (30205: expr)\n  |  30209 <-> (30206: expr) AND (30207: expr)\n  |  30210 <-> (30209: expr) AND (30208: expr)\n  |  30200 <-> (26778: mock_024) AND (26779: mock_021)\n  |  30201 <-> (26780: mock_018) AND (26781: mock_023)\n  |  30202 <-> (26777: mock_017) AND (26782: mock_022)\n  |  30203 <-> (26783: expr) AND (26784: expr)\n  |  30204 <-> (26785: mock_020) AND (26786: expr)\n  |  30205 <-> (26787: expr) AND (26793: expr)\n  |  30206 <-> (30200: expr) AND (30201: expr)\n  |  30207 <-> (30202: expr) AND (30203: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1666:SELECT\n  |  predicates: 26790: xx_hash3_64 IS NOT NULL, 26778: mock_024, 26779: mock_021, 26780: mock_018, 26781: mock_023, 26777: mock_017, 26782: mock_022, 26783: expr, 26784: expr, 26785: mock_020, 26786: expr, 26787: expr, 26793: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1665:Project\n  |  output columns:\n  |  26773 <-> [12994: case, DOUBLE, true]\n  |  26774 <-> [12995: case, DOUBLE, true]\n  |  26777 <-> [12734: mock_017, BOOLEAN, true]\n  |  26778 <-> [12740: mock_024, BOOLEAN, true]\n  |  26779 <-> [12737: mock_021, BOOLEAN, true]\n  |  26780 <-> [12735: mock_018, BOOLEAN, true]\n  |  26781 <-> [12739: mock_023, BOOLEAN, true]\n  |  26782 <-> [12738: mock_022, BOOLEAN, true]\n  |  26783 <-> [12989: expr, BOOLEAN, true]\n  |  26784 <-> [12990: expr, BOOLEAN, true]\n  |  26785 <-> [12736: mock_020, BOOLEAN, true]\n  |  26786 <-> [14854: expr, BOOLEAN, true]\n  |  26787 <-> [12752: expr, BOOLEAN, true]\n  |  26790 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  26793 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1664:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 37(F1129)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26646: mock_191\n  OutPut Exchange id: 1661\n\n  1660:Project\n  |  output columns:\n  |  26646 <-> [26646: mock_191, LARGEINT, false]\n  |  26721 <-> [26721: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1659:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [26646: mock_191, LARGEINT, false] = [29856: cast, LARGEINT, true]\n  |  output columns: 26646, 26721\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1658:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29856: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1649:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 38(F1131)\n\n  Input Partition: HASH_PARTITIONED: 26713: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29856: cast\n  OutPut Exchange id: 1658\n\n  1657:Project\n  |  output columns:\n  |  26721 <-> [26721: sum, DOUBLE, true]\n  |  29856 <-> cast([26713: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1656:AGGREGATE (merge finalize)\n  |  aggregate: sum[([26721: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26713: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1655:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26713: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 39(F1130)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 26713: xx_hash3_64\n  OutPut Exchange id: 1655\n\n  1654:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([26719: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26713: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1653:Project\n  |  output columns:\n  |  26713 <-> [26713: xx_hash3_64, BIGINT, true]\n  |  26719 <-> if[(((((26702: mock_024) AND (26703: mock_021)) AND ((26704: mock_018) AND (26705: mock_023))) AND (((26701: mock_017) AND (26706: mock_022)) AND ((26707: expr) AND (26708: expr)))) AND (((26709: mock_020) AND (26710: expr)) AND ((26711: expr) AND (26717: expr))), [26697: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1652:SELECT\n  |  predicates: 26713: xx_hash3_64 IS NOT NULL, 26702: mock_024, 26703: mock_021, 26704: mock_018, 26705: mock_023, 26701: mock_017, 26706: mock_022, 26707: expr, 26708: expr, 26709: mock_020, 26710: expr, 26711: expr, 26717: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1651:Project\n  |  output columns:\n  |  26697 <-> [12994: case, DOUBLE, true]\n  |  26701 <-> [12734: mock_017, BOOLEAN, true]\n  |  26702 <-> [12740: mock_024, BOOLEAN, true]\n  |  26703 <-> [12737: mock_021, BOOLEAN, true]\n  |  26704 <-> [12735: mock_018, BOOLEAN, true]\n  |  26705 <-> [12739: mock_023, BOOLEAN, true]\n  |  26706 <-> [12738: mock_022, BOOLEAN, true]\n  |  26707 <-> [12989: expr, BOOLEAN, true]\n  |  26708 <-> [12990: expr, BOOLEAN, true]\n  |  26709 <-> [12736: mock_020, BOOLEAN, true]\n  |  26710 <-> [14854: expr, BOOLEAN, true]\n  |  26711 <-> [12752: expr, BOOLEAN, true]\n  |  26713 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  26717 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1650:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 40(F1127)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 29855: cast\n  OutPut Exchange id: 1648\n\n  1647:Project\n  |  output columns:\n  |  26625 <-> [26625: case, DOUBLE, true]\n  |  26627 <-> [26627: expr, DOUBLE, true]\n  |  26629 <-> [26629: mock_017, BOOLEAN, true]\n  |  26630 <-> [26630: mock_024, BOOLEAN, true]\n  |  26631 <-> [26631: mock_021, BOOLEAN, true]\n  |  26632 <-> [26632: mock_018, BOOLEAN, true]\n  |  26633 <-> [26633: mock_023, BOOLEAN, true]\n  |  26634 <-> [26634: mock_022, BOOLEAN, true]\n  |  26635 <-> [26635: expr, BOOLEAN, true]\n  |  26636 <-> [26636: expr, BOOLEAN, true]\n  |  26637 <-> [26637: mock_020, BOOLEAN, true]\n  |  26638 <-> [26638: expr, BOOLEAN, true]\n  |  26639 <-> [26639: expr, BOOLEAN, true]\n  |  26641 <-> [26641: xx_hash3_64, BIGINT, true]\n  |  26642 <-> [26642: xx_hash3_64, BIGINT, true]\n  |  26643 <-> [26643: case, BIGINT, true]\n  |  26644 <-> [26644: case, BIGINT, true]\n  |  26645 <-> [26645: expr, BOOLEAN, true]\n  |  29855 <-> cast([26641: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1646:SELECT\n  |  predicates: 26641: xx_hash3_64 IS NOT NULL, 26630: mock_024, 26631: mock_021, 26632: mock_018, 26633: mock_023, 26629: mock_017, 26634: mock_022, 26635: expr, 26636: expr, 26637: mock_020, 26638: expr, 26639: expr, 26645: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1645:Project\n  |  output columns:\n  |  26625 <-> [12994: case, DOUBLE, true]\n  |  26627 <-> [12751: expr, DOUBLE, true]\n  |  26629 <-> [12734: mock_017, BOOLEAN, true]\n  |  26630 <-> [12740: mock_024, BOOLEAN, true]\n  |  26631 <-> [12737: mock_021, BOOLEAN, true]\n  |  26632 <-> [12735: mock_018, BOOLEAN, true]\n  |  26633 <-> [12739: mock_023, BOOLEAN, true]\n  |  26634 <-> [12738: mock_022, BOOLEAN, true]\n  |  26635 <-> [12989: expr, BOOLEAN, true]\n  |  26636 <-> [12990: expr, BOOLEAN, true]\n  |  26637 <-> [12736: mock_020, BOOLEAN, true]\n  |  26638 <-> [14854: expr, BOOLEAN, true]\n  |  26639 <-> [12752: expr, BOOLEAN, true]\n  |  26641 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  26642 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  26643 <-> [12992: case, BIGINT, true]\n  |  26644 <-> [12993: case, BIGINT, true]\n  |  26645 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1644:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 41(F1124)\n\n  Input Partition: HASH_PARTITIONED: 29858: cast\n  OutPut Partition: HASH_PARTITIONED: 29851: cast\n  OutPut Exchange id: 1642\n\n  1641:Project\n  |  output columns:\n  |  26398 <-> [26398: expr, DOUBLE, true]\n  |  26399 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  26400 <-> [26400: mock_017, BOOLEAN, true]\n  |  26401 <-> [26401: mock_024, BOOLEAN, true]\n  |  26402 <-> [26402: mock_021, BOOLEAN, true]\n  |  26403 <-> [26403: mock_018, BOOLEAN, true]\n  |  26404 <-> [26404: mock_023, BOOLEAN, true]\n  |  26405 <-> [26405: mock_022, BOOLEAN, true]\n  |  26406 <-> [26406: expr, BOOLEAN, true]\n  |  26407 <-> [26407: expr, BOOLEAN, true]\n  |  26408 <-> [26408: mock_020, BOOLEAN, true]\n  |  26409 <-> [26409: expr, BOOLEAN, true]\n  |  26410 <-> [26410: expr, BOOLEAN, true]\n  |  26411 <-> [26411: id, VARCHAR(65535), true]\n  |  26413 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  26414 <-> [26414: case, BIGINT, true]\n  |  26415 <-> [26415: case, BIGINT, true]\n  |  26416 <-> [26416: expr, BOOLEAN, true]\n  |  26573 <-> if[([30181: case, DOUBLE, true] > [26398: expr, DOUBLE, true], [30181: case, DOUBLE, true] * cast(if[(CASE WHEN 30179: expr THEN 26414: case WHEN (30175: expr) AND (30176: coalesce != 1) THEN 0 ELSE 26415: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] > 0.0\n  |  29851 <-> cast([26412: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30176 <-> coalesce[([26414: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30177 <-> [30176: coalesce, BIGINT, true] = 1\n  |  30178 <-> [30176: coalesce, BIGINT, true] = 0\n  |  30179 <-> (30175: expr) AND (30177: expr)\n  |  30180 <-> (30175: expr) AND (30178: expr)\n  |  30181 <-> CASE WHEN 30179: expr THEN 26568: sum WHEN 30180: expr THEN 0.0 ELSE 26569: sum END\n  |  30175 <-> [26492: sum, DOUBLE, true] > 0.0\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1640:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29857: cast, LARGEINT, true] = [26493: mock_193, LARGEINT, true]\n  |  other predicates: ((26413: xx_hash3_64 IS NOT NULL) AND (((((26401: mock_024) AND (26402: mock_021)) AND ((26403: mock_018) AND (26404: mock_023))) AND (((26400: mock_017) AND (26405: mock_022)) AND ((26406: expr) AND (26407: expr)))) AND ((((26408: mock_020) AND (26409: expr)) AND ((26410: expr) AND (26416: expr))) AND (if(CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26568: sum WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 0) THEN 0.0 ELSE 26569: sum END > 26398: expr, CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26568: sum WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 0) THEN 0.0 ELSE 26569: sum END * CAST(if(CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26414: case WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) != 1) THEN 0 ELSE 26415: case END = 1, 1, 0) AS DOUBLE), 0.0) > 0.0)))) OR (((((26401: mock_024) AND (26402: mock_021)) AND ((26403: mock_018) AND (26404: mock_023))) AND (((26400: mock_017) AND (26405: mock_022)) AND ((26406: expr) AND (26407: expr)))) AND ((((26408: mock_020) AND (26409: expr)) AND ((26410: expr) AND (26416: expr))) AND (if(CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26568: sum WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 0) THEN 0.0 ELSE 26569: sum END > 26398: expr, CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26568: sum WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 0) THEN 0.0 ELSE 26569: sum END * CAST(if(CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26414: case WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) != 1) THEN 0 ELSE 26415: case END = 1, 1, 0) AS DOUBLE), 0.0) > 0.0))), if[(CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26568: sum WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 0) THEN 0.0 ELSE 26569: sum END > [26398: expr, DOUBLE, true], CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26568: sum WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 0) THEN 0.0 ELSE 26569: sum END * cast(if[(CASE WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) = 1) THEN 26414: case WHEN (26492: sum > 0.0) AND (coalesce(26414: case, 0) != 1) THEN 0 ELSE 26415: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] > 0.0\n  |  output columns: 26398, 26399, 26400, 26401, 26402, 26403, 26404, 26405, 26406, 26407, 26408, 26409, 26410, 26411, 26412, 26413, 26414, 26415, 26416, 26492, 26568, 26569\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1639:Project\n  |    |  output columns:\n  |    |  26493 <-> [26493: mock_193, LARGEINT, false]\n  |    |  26568 <-> [26568: sum, DOUBLE, true]\n  |    |  26569 <-> [26569: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    1638:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29858: cast, LARGEINT, true] = [26493: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 147, build_expr = (26493: mock_193), remote = true\n  |    |  output columns: 26493, 26568, 26569\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----1637:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [26493: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    1635:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29858: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1626:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29857: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 42(F1122)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26493: mock_193\n  OutPut Exchange id: 1637\n\n  1636:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 43(F1120)\n\n  Input Partition: HASH_PARTITIONED: 26561: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29858: cast\n  OutPut Exchange id: 1635\n\n  1634:Project\n  |  output columns:\n  |  26568 <-> [26568: sum, DOUBLE, true]\n  |  26569 <-> [26569: sum, DOUBLE, true]\n  |  29858 <-> cast([26561: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1633:AGGREGATE (merge finalize)\n  |  aggregate: sum[([26568: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([26569: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26561: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 147, probe_expr = (CAST(26561: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1632:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26561: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 44(F1119)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 26561: xx_hash3_64\n  OutPut Exchange id: 1632\n\n  1631:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([26566: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([26567: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26561: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1630:Project\n  |  output columns:\n  |  26561 <-> [26561: xx_hash3_64, BIGINT, true]\n  |  26566 <-> if[([30192: expr, BOOLEAN, true], [26544: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  26567 <-> if[([30192: expr, BOOLEAN, true], [26545: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30192 <-> (30191: expr) AND (30190: expr)\n  |  30182 <-> (26549: mock_024) AND (26550: mock_021)\n  |  30183 <-> (26551: mock_018) AND (26552: mock_023)\n  |  30184 <-> (26548: mock_017) AND (26553: mock_022)\n  |  30185 <-> (26554: expr) AND (26555: expr)\n  |  30186 <-> (26556: mock_020) AND (26557: expr)\n  |  30187 <-> (26558: expr) AND (26564: expr)\n  |  30188 <-> (30182: expr) AND (30183: expr)\n  |  30189 <-> (30184: expr) AND (30185: expr)\n  |  30190 <-> (30186: expr) AND (30187: expr)\n  |  30191 <-> (30188: expr) AND (30189: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1629:SELECT\n  |  predicates: 26561: xx_hash3_64 IS NOT NULL, 26549: mock_024, 26550: mock_021, 26551: mock_018, 26552: mock_023, 26548: mock_017, 26553: mock_022, 26554: expr, 26555: expr, 26556: mock_020, 26557: expr, 26558: expr, 26564: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1628:Project\n  |  output columns:\n  |  26544 <-> [12994: case, DOUBLE, true]\n  |  26545 <-> [12995: case, DOUBLE, true]\n  |  26548 <-> [12734: mock_017, BOOLEAN, true]\n  |  26549 <-> [12740: mock_024, BOOLEAN, true]\n  |  26550 <-> [12737: mock_021, BOOLEAN, true]\n  |  26551 <-> [12735: mock_018, BOOLEAN, true]\n  |  26552 <-> [12739: mock_023, BOOLEAN, true]\n  |  26553 <-> [12738: mock_022, BOOLEAN, true]\n  |  26554 <-> [12989: expr, BOOLEAN, true]\n  |  26555 <-> [12990: expr, BOOLEAN, true]\n  |  26556 <-> [12736: mock_020, BOOLEAN, true]\n  |  26557 <-> [14854: expr, BOOLEAN, true]\n  |  26558 <-> [12752: expr, BOOLEAN, true]\n  |  26561 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  26564 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1627:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 45(F1117)\n\n  Input Partition: HASH_PARTITIONED: 29859: cast\n  OutPut Partition: HASH_PARTITIONED: 29857: cast\n  OutPut Exchange id: 1626\n\n  1625:Project\n  |  output columns:\n  |  26398 <-> [26398: expr, DOUBLE, true]\n  |  26399 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  26400 <-> [26400: mock_017, BOOLEAN, true]\n  |  26401 <-> [26401: mock_024, BOOLEAN, true]\n  |  26402 <-> [26402: mock_021, BOOLEAN, true]\n  |  26403 <-> [26403: mock_018, BOOLEAN, true]\n  |  26404 <-> [26404: mock_023, BOOLEAN, true]\n  |  26405 <-> [26405: mock_022, BOOLEAN, true]\n  |  26406 <-> [26406: expr, BOOLEAN, true]\n  |  26407 <-> [26407: expr, BOOLEAN, true]\n  |  26408 <-> [26408: mock_020, BOOLEAN, true]\n  |  26409 <-> [26409: expr, BOOLEAN, true]\n  |  26410 <-> [26410: expr, BOOLEAN, true]\n  |  26411 <-> [26411: id, VARCHAR(65535), true]\n  |  26412 <-> [26412: xx_hash3_64, BIGINT, true]\n  |  26413 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  26414 <-> [26414: case, BIGINT, true]\n  |  26415 <-> [26415: case, BIGINT, true]\n  |  26416 <-> [26416: expr, BOOLEAN, true]\n  |  26492 <-> [26492: sum, DOUBLE, true]\n  |  29857 <-> cast([26413: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1624:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29859: cast, LARGEINT, true] = [26417: mock_191, LARGEINT, true]\n  |  output columns: 26398, 26399, 26400, 26401, 26402, 26403, 26404, 26405, 26406, 26407, 26408, 26409, 26410, 26411, 26412, 26413, 26414, 26415, 26416, 26492\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1623:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [26417: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1610:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29859: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 46(F1112)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 26417: mock_191\n  OutPut Exchange id: 1623\n\n  1622:Project\n  |  output columns:\n  |  26417 <-> [26417: mock_191, LARGEINT, false]\n  |  26492 <-> [26492: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1621:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [26417: mock_191, LARGEINT, false] = [29860: cast, LARGEINT, true]\n  |  output columns: 26417, 26492\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1620:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29860: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1611:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 47(F1114)\n\n  Input Partition: HASH_PARTITIONED: 26484: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29860: cast\n  OutPut Exchange id: 1620\n\n  1619:Project\n  |  output columns:\n  |  26492 <-> [26492: sum, DOUBLE, true]\n  |  29860 <-> cast([26484: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1618:AGGREGATE (merge finalize)\n  |  aggregate: sum[([26492: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26484: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1617:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [26484: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 48(F1113)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 26484: xx_hash3_64\n  OutPut Exchange id: 1617\n\n  1616:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([26490: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [26484: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1615:Project\n  |  output columns:\n  |  26484 <-> [26484: xx_hash3_64, BIGINT, true]\n  |  26490 <-> if[(((((26473: mock_024) AND (26474: mock_021)) AND ((26475: mock_018) AND (26476: mock_023))) AND (((26472: mock_017) AND (26477: mock_022)) AND ((26478: expr) AND (26479: expr)))) AND (((26480: mock_020) AND (26481: expr)) AND ((26482: expr) AND (26488: expr))), [26468: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1614:SELECT\n  |  predicates: 26484: xx_hash3_64 IS NOT NULL, 26473: mock_024, 26474: mock_021, 26475: mock_018, 26476: mock_023, 26472: mock_017, 26477: mock_022, 26478: expr, 26479: expr, 26480: mock_020, 26481: expr, 26482: expr, 26488: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1613:Project\n  |  output columns:\n  |  26468 <-> [12994: case, DOUBLE, true]\n  |  26472 <-> [12734: mock_017, BOOLEAN, true]\n  |  26473 <-> [12740: mock_024, BOOLEAN, true]\n  |  26474 <-> [12737: mock_021, BOOLEAN, true]\n  |  26475 <-> [12735: mock_018, BOOLEAN, true]\n  |  26476 <-> [12739: mock_023, BOOLEAN, true]\n  |  26477 <-> [12738: mock_022, BOOLEAN, true]\n  |  26478 <-> [12989: expr, BOOLEAN, true]\n  |  26479 <-> [12990: expr, BOOLEAN, true]\n  |  26480 <-> [12736: mock_020, BOOLEAN, true]\n  |  26481 <-> [14854: expr, BOOLEAN, true]\n  |  26482 <-> [12752: expr, BOOLEAN, true]\n  |  26484 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  26488 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[NaN, NaN, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1612:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 49(F1110)\n\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Partition: HASH_PARTITIONED: 29859: cast\n  OutPut Exchange id: 1610\n\n  1609:Project\n  |  output columns:\n  |  26398 <-> [26398: expr, DOUBLE, true]\n  |  26399 <-> [26399: mock_148, VARCHAR(65535), true]\n  |  26400 <-> [26400: mock_017, BOOLEAN, true]\n  |  26401 <-> [26401: mock_024, BOOLEAN, true]\n  |  26402 <-> [26402: mock_021, BOOLEAN, true]\n  |  26403 <-> [26403: mock_018, BOOLEAN, true]\n  |  26404 <-> [26404: mock_023, BOOLEAN, true]\n  |  26405 <-> [26405: mock_022, BOOLEAN, true]\n  |  26406 <-> [26406: expr, BOOLEAN, true]\n  |  26407 <-> [26407: expr, BOOLEAN, true]\n  |  26408 <-> [26408: mock_020, BOOLEAN, true]\n  |  26409 <-> [26409: expr, BOOLEAN, true]\n  |  26410 <-> [26410: expr, BOOLEAN, true]\n  |  26411 <-> [26411: id, VARCHAR(65535), true]\n  |  26412 <-> [26412: xx_hash3_64, BIGINT, true]\n  |  26413 <-> [26413: xx_hash3_64, BIGINT, true]\n  |  26414 <-> [26414: case, BIGINT, true]\n  |  26415 <-> [26415: case, BIGINT, true]\n  |  26416 <-> [26416: expr, BOOLEAN, true]\n  |  29859 <-> cast([26412: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1608:Project\n  |  output columns:\n  |  26398 <-> [12751: expr, DOUBLE, true]\n  |  26399 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  26400 <-> [12734: mock_017, BOOLEAN, true]\n  |  26401 <-> [12740: mock_024, BOOLEAN, true]\n  |  26402 <-> [12737: mock_021, BOOLEAN, true]\n  |  26403 <-> [12735: mock_018, BOOLEAN, true]\n  |  26404 <-> [12739: mock_023, BOOLEAN, true]\n  |  26405 <-> [12738: mock_022, BOOLEAN, true]\n  |  26406 <-> [12989: expr, BOOLEAN, true]\n  |  26407 <-> [12990: expr, BOOLEAN, true]\n  |  26408 <-> [12736: mock_020, BOOLEAN, true]\n  |  26409 <-> [14854: expr, BOOLEAN, true]\n  |  26410 <-> [12752: expr, BOOLEAN, true]\n  |  26411 <-> [12714: id, VARCHAR(65535), true]\n  |  26412 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  26413 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  26414 <-> [12992: case, BIGINT, true]\n  |  26415 <-> [12993: case, BIGINT, true]\n  |  26416 <-> [26012: expr, BOOLEAN, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1607:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 50(F1109)\n  Output Exprs:12714: id | 12734: mock_017 | 12735: mock_018 | 12736: mock_020 | 12737: mock_021 | 12738: mock_022 | 12739: mock_023 | 12740: mock_024 | 12749: xx_hash3_64 | 12750: xx_hash3_64 | 12751: expr | 12752: expr | 12854: mock_148 | 12989: expr | 12990: expr | 12992: case | 12993: case | 12994: case | 12995: case | 14854: expr | 26012: expr\n  Input Partition: HASH_PARTITIONED: 29861: cast\n  MultiCastDataSinks:\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1607\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1612\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1627\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1644\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1650\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1664\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1691\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1697\n  OutPut Partition: RANDOM\n  OutPut Exchange id: 1711\n\n  1606:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12989: expr, BOOLEAN, true]\n  |  12990 <-> [12990: expr, BOOLEAN, true]\n  |  12992 <-> [12992: case, BIGINT, true]\n  |  12993 <-> [12993: case, BIGINT, true]\n  |  12994 <-> [12994: case, DOUBLE, true]\n  |  12995 <-> [12995: case, DOUBLE, true]\n  |  14854 <-> [14854: expr, BOOLEAN, true]\n  |  26012 <-> [19316: case, DOUBLE, true] / cast([26010: coalesce, BIGINT, true] as DOUBLE) > 0.0\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1605:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29861: cast, LARGEINT, true] = [19319: mock_193, LARGEINT, true]\n  |  output columns: 12714, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12854, 12989, 12990, 12992, 12993, 12994, 12995, 14854, 19316, 26010\n  |  can local shuffle: false\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1604:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19319: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  797:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29861: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 51(F553)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19319: mock_193\n  OutPut Exchange id: 1604\n\n  1603:Project\n  |  output columns:\n  |  19319 <-> [19319: mock_193, LARGEINT, false]\n  |  26010 <-> coalesce[([26009: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1602:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [19319: mock_193, LARGEINT, false] = [29862: cast, LARGEINT, true]\n  |  output columns: 19319, 26009\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1601:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29862: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  798:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 52(F1106)\n\n  Input Partition: HASH_PARTITIONED: 19439: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29862: cast\n  OutPut Exchange id: 1601\n\n  1600:Project\n  |  output columns:\n  |  26009 <-> [26009: count, BIGINT, false]\n  |  29862 <-> cast([19439: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1599:AGGREGATE (merge finalize)\n  |  aggregate: count[([26009: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [19439: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1598:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19439: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 53(F1105)\n\n  Input Partition: HASH_PARTITIONED: 29863: cast\n  OutPut Partition: HASH_PARTITIONED: 19439: xx_hash3_64\n  OutPut Exchange id: 1598\n\n  1597:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([26008: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [19439: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1596:Project\n  |  output columns:\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  26008 <-> if[(((((19429: mock_024) AND (19426: mock_021)) AND ((19424: mock_018) AND (19428: mock_023))) AND (((19423: mock_017) AND (19427: mock_022)) AND ((19678: expr) AND (19679: expr)))) AND (((19425: mock_020) AND (21543: expr)) AND (19441: expr)), if[(if[(CASE WHEN (30100: expr) AND (30101: coalesce = 1) THEN 19681: case WHEN (30100: expr) AND (30101: coalesce != 1) THEN 0 ELSE 19682: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [19403: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30100 <-> [23772: sum, DOUBLE, true] > 0.0\n  |  30101 <-> coalesce[([19681: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  1595:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29863: cast, LARGEINT, true] = [23773: mock_193, LARGEINT, true]\n  |  output columns: 19403, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19439, 19441, 19678, 19679, 19681, 19682, 21543, 23772\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1594:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23773: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1327:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29863: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 54(F921)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23773: mock_193\n  OutPut Exchange id: 1594\n\n  1593:Project\n  |  output columns:\n  |  23773 <-> [23773: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1592:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [23773: mock_193, LARGEINT, false] = [29864: cast, LARGEINT, true]\n  |  output columns: 23773\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1591:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29864: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1328:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 55(F1102)\n\n  Input Partition: HASH_PARTITIONED: 23893: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29864: cast\n  OutPut Exchange id: 1591\n\n  1590:Project\n  |  output columns:\n  |  29864 <-> cast([23893: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1589:AGGREGATE (merge finalize)\n  |  group by: [23893: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1588:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23893: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 56(F1101)\n\n  Input Partition: HASH_PARTITIONED: 29865: cast\n  OutPut Partition: HASH_PARTITIONED: 23893: xx_hash3_64\n  OutPut Exchange id: 1588\n\n  1587:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [23893: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1586:Project\n  |  output columns:\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1585:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29865: cast, LARGEINT, true] = [24883: mock_193, LARGEINT, true]\n  |  other predicates: 24880: case / CAST(25995: coalesce AS DOUBLE) IS NOT NULL\n  |  output columns: 23893\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1584:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24883: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1452:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29865: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 57(F1010)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24883: mock_193\n  OutPut Exchange id: 1584\n\n  1583:Project\n  |  output columns:\n  |  24883 <-> [24883: mock_193, LARGEINT, false]\n  |  25995 <-> coalesce[([25994: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1582:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [24883: mock_193, LARGEINT, false] = [29866: cast, LARGEINT, true]\n  |  output columns: 24883, 25994\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1581:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29866: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1453:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 58(F1098)\n\n  Input Partition: HASH_PARTITIONED: 25003: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29866: cast\n  OutPut Exchange id: 1581\n\n  1580:Project\n  |  output columns:\n  |  25994 <-> [25994: count, BIGINT, false]\n  |  29866 <-> cast([25003: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1579:AGGREGATE (merge finalize)\n  |  aggregate: count[([25994: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [25003: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1578:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25003: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 59(F1097)\n\n  Input Partition: HASH_PARTITIONED: 29867: cast\n  OutPut Partition: HASH_PARTITIONED: 25003: xx_hash3_64\n  OutPut Exchange id: 1578\n\n  1577:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([25993: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [25003: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1576:Project\n  |  output columns:\n  |  25003 <-> [25003: xx_hash3_64, BIGINT, true]\n  |  25993 <-> if[(((((24993: mock_024) AND (24990: mock_021)) AND ((24988: mock_018) AND (24992: mock_023))) AND (((24987: mock_017) AND (24991: mock_022)) AND ((25242: expr) AND (25243: expr)))) AND (24989: mock_020), if[(if[(CASE WHEN (30161: expr) AND (30162: coalesce = 1) THEN 25245: case WHEN (30161: expr) AND (30162: coalesce != 1) THEN 0 ELSE 25246: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [24967: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30161 <-> [25617: sum, DOUBLE, true] > 0.0\n  |  30162 <-> coalesce[([25245: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  1575:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29867: cast, LARGEINT, true] = [25618: mock_193, LARGEINT, true]\n  |  output columns: 24967, 24987, 24988, 24989, 24990, 24991, 24992, 24993, 25003, 25242, 25243, 25245, 25246, 25617\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1574:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25618: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1532:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29867: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 60(F1068)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25618: mock_193\n  OutPut Exchange id: 1574\n\n  1573:Project\n  |  output columns:\n  |  25618 <-> [25618: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1572:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [25618: mock_193, LARGEINT, false] = [29868: cast, LARGEINT, true]\n  |  output columns: 25618\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1571:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29868: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1533:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 61(F1094)\n\n  Input Partition: HASH_PARTITIONED: 25738: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29868: cast\n  OutPut Exchange id: 1571\n\n  1570:Project\n  |  output columns:\n  |  29868 <-> cast([25738: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1569:AGGREGATE (merge finalize)\n  |  group by: [25738: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1568:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25738: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 62(F1093)\n\n  Input Partition: HASH_PARTITIONED: 29869: cast, 25674: mock_034\n  OutPut Partition: HASH_PARTITIONED: 25738: xx_hash3_64\n  OutPut Exchange id: 1568\n\n  1567:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [25738: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1566:Project\n  |  output columns:\n  |  25738 <-> [25738: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1565:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29869: cast, LARGEINT, true] = [25924: mock_189, LARGEINT, false]\n  |  equal join conjunct: [25674: mock_034, DATETIME, true] = [25945: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 145, build_expr = (25924: mock_189), remote = true\n  |  - filter_id = 146, build_expr = (25945: mock_157), remote = true\n  |  output columns: 25738\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1564:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25924: mock_189, LARGEINT, false], [25945: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1562:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29869: cast, LARGEINT, true], [25674: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 63(F1091)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25924: mock_189, 25945: mock_157\n  OutPut Exchange id: 1564\n\n  1563:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 25945: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 64(F1089)\n\n  Input Partition: HASH_PARTITIONED: 29870: cast, 25674: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29869: cast, 25674: mock_034\n  OutPut Exchange id: 1562\n\n  1561:Project\n  |  output columns:\n  |  25674 <-> [25674: mock_034, DATETIME, true]\n  |  25738 <-> [25738: xx_hash3_64, BIGINT, true]\n  |  29869 <-> cast([25736: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1560:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29870: cast, LARGEINT, true] = [25873: mock_177, LARGEINT, false]\n  |  equal join conjunct: [25674: mock_034, DATETIME, true] = [25894: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 143, build_expr = (25873: mock_177), remote = true\n  |  - filter_id = 144, build_expr = (25894: mock_157), remote = true\n  |  output columns: 25674, 25736, 25738\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 146, probe_expr = (25674: mock_034), partition_exprs = (CAST(25736: xx_hash3_64 AS LARGEINT),25674: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1559:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25873: mock_177, LARGEINT, false], [25894: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1557:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29870: cast, LARGEINT, true], [25674: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 145, probe_expr = (CAST(25736: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(25736: xx_hash3_64 AS LARGEINT),25674: mock_034)\n\nPLAN FRAGMENT 65(F1087)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25873: mock_177, 25894: mock_157\n  OutPut Exchange id: 1559\n\n  1558:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 25894: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 66(F1085)\n\n  Input Partition: HASH_PARTITIONED: 25709: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29870: cast, 25674: mock_034\n  OutPut Exchange id: 1557\n\n  1556:Project\n  |  output columns:\n  |  25674 <-> [25674: mock_034, DATETIME, true]\n  |  25736 <-> [25736: xx_hash3_64, BIGINT, true]\n  |  25738 <-> [25738: xx_hash3_64, BIGINT, true]\n  |  29870 <-> cast([25735: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1555:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25709: mock_030, LARGEINT, true] = [25872: mock_030, LARGEINT, true]\n  |  output columns: 25674, 25735, 25736, 25738\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1554:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25872: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1552:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25709: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 143, probe_expr = (CAST(25735: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(25735: xx_hash3_64 AS LARGEINT),25674: mock_034)\n     - filter_id = 144, probe_expr = (25674: mock_034), partition_exprs = (CAST(25735: xx_hash3_64 AS LARGEINT),25674: mock_034)\n\nPLAN FRAGMENT 67(F1083)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25872: mock_030\n  OutPut Exchange id: 1554\n\n  1553:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 68(F1081)\n\n  Input Partition: HASH_PARTITIONED: 25707: mock_028\n  OutPut Partition: HASH_PARTITIONED: 25709: mock_030\n  OutPut Exchange id: 1552\n\n  1551:Project\n  |  output columns:\n  |  25674 <-> [25674: mock_034, DATETIME, true]\n  |  25709 <-> [25709: mock_030, LARGEINT, true]\n  |  25735 <-> [25735: xx_hash3_64, BIGINT, true]\n  |  25736 <-> [25736: xx_hash3_64, BIGINT, true]\n  |  25738 <-> [25738: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1550:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25707: mock_028, LARGEINT, true] = [25800: mock_071, LARGEINT, true]\n  |  output columns: 25674, 25709, 25735, 25736, 25738\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1549:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25800: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1537:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25707: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 69(F1079)\n\n  Input Partition: HASH_PARTITIONED: 25793: mock_075\n  OutPut Partition: HASH_PARTITIONED: 25800: mock_071\n  OutPut Exchange id: 1549\n\n  1548:Project\n  |  output columns:\n  |  25800 <-> [25800: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1547:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25793: mock_075, LARGEINT, true] = [25857: mock_075, LARGEINT, true]\n  |  output columns: 25800\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1546:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25857: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1544:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25793: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 70(F1077)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25857: mock_075\n  OutPut Exchange id: 1546\n\n  1545:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 71(F1075)\n\n  Input Partition: HASH_PARTITIONED: 25795: mock_077\n  OutPut Partition: HASH_PARTITIONED: 25793: mock_075\n  OutPut Exchange id: 1544\n\n  1543:Project\n  |  output columns:\n  |  25793 <-> [25793: mock_075, LARGEINT, true]\n  |  25800 <-> [25800: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1542:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25795: mock_077, LARGEINT, true] = [25828: mock_077, LARGEINT, true]\n  |  output columns: 25793, 25800\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1541:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25828: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1539:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25795: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 72(F1073)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25828: mock_077\n  OutPut Exchange id: 1541\n\n  1540:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 73(F1071)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25795: mock_077\n  OutPut Exchange id: 1539\n\n  1538:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 74(F1069)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25707: mock_028\n  OutPut Exchange id: 1537\n\n  1536:SELECT\n  |  predicates: 25738: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1535:Project\n  |  output columns:\n  |  25674 <-> [25674: mock_034, DATETIME, true]\n  |  25707 <-> [25707: mock_028, LARGEINT, true]\n  |  25709 <-> [25709: mock_030, LARGEINT, true]\n  |  25735 <-> xx_hash3_64[([25681: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25736 <-> xx_hash3_64[([25705: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25738 <-> xx_hash3_64[([25701: mock_039, VARCHAR(65535), true], [25700: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1534:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [25728: mock_024, BOOLEAN, true], [25725: mock_021, BOOLEAN, true], [25723: mock_018, BOOLEAN, true], [25727: mock_023, BOOLEAN, true], [25722: mock_017, BOOLEAN, true], [25726: mock_022, BOOLEAN, true], [25724: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=110.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 75(F1066)\n\n  Input Partition: HASH_PARTITIONED: 29871: cast\n  OutPut Partition: HASH_PARTITIONED: 29867: cast\n  OutPut Exchange id: 1532\n\n  1531:Project\n  |  output columns:\n  |  24967 <-> [24967: id, VARCHAR(65535), true]\n  |  24987 <-> [24987: mock_017, BOOLEAN, true]\n  |  24988 <-> [24988: mock_018, BOOLEAN, true]\n  |  24989 <-> [24989: mock_020, BOOLEAN, true]\n  |  24990 <-> [24990: mock_021, BOOLEAN, true]\n  |  24991 <-> [24991: mock_022, BOOLEAN, true]\n  |  24992 <-> [24992: mock_023, BOOLEAN, true]\n  |  24993 <-> [24993: mock_024, BOOLEAN, true]\n  |  25003 <-> [25003: xx_hash3_64, BIGINT, true]\n  |  25242 <-> [25242: expr, BOOLEAN, true]\n  |  25243 <-> [25243: expr, BOOLEAN, true]\n  |  25245 <-> [25245: case, BIGINT, true]\n  |  25246 <-> [25246: case, BIGINT, true]\n  |  25617 <-> [25617: sum, DOUBLE, true]\n  |  29867 <-> cast([25003: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1530:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29871: cast, LARGEINT, true] = [25249: mock_191, LARGEINT, true]\n  |  output columns: 24967, 24987, 24988, 24989, 24990, 24991, 24992, 24993, 25003, 25242, 25243, 25245, 25246, 25617\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1529:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25249: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1487:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29871: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 76(F1037)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25249: mock_191\n  OutPut Exchange id: 1529\n\n  1528:Project\n  |  output columns:\n  |  25249 <-> [25249: mock_191, LARGEINT, false]\n  |  25617 <-> [25617: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1527:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [25249: mock_191, LARGEINT, false] = [29872: cast, LARGEINT, true]\n  |  output columns: 25249, 25617\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1526:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29872: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1488:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 77(F1063)\n\n  Input Partition: HASH_PARTITIONED: 25368: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29872: cast\n  OutPut Exchange id: 1526\n\n  1525:Project\n  |  output columns:\n  |  25617 <-> [25617: sum, DOUBLE, true]\n  |  29872 <-> cast([25368: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1524:AGGREGATE (merge finalize)\n  |  aggregate: sum[([25617: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [25368: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1523:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25368: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 78(F1062)\n\n  Input Partition: HASH_PARTITIONED: 29873: cast, 25305: mock_034\n  OutPut Partition: HASH_PARTITIONED: 25368: xx_hash3_64\n  OutPut Exchange id: 1523\n\n  1522:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([25615: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [25368: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1521:Project\n  |  output columns:\n  |  25368 <-> [25368: xx_hash3_64, BIGINT, true]\n  |  25615 <-> if[(((((25359: mock_024) AND (25356: mock_021)) AND ((25354: mock_018) AND (25358: mock_023))) AND (((25353: mock_017) AND (25357: mock_022)) AND ((25305: mock_034 = 25525: mock_157) AND (25305: mock_034 = 25576: mock_157)))) AND (25355: mock_020), if[(if[(if(25456: mock_133 = 25500: mock_133, 25332: mock_039, NULL) IS NULL, NULL, [25343: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [25324: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1520:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29873: cast, LARGEINT, true] = [25555: mock_189, LARGEINT, false]\n  |  equal join conjunct: [25305: mock_034, DATETIME, true] = [25576: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 141, build_expr = (25555: mock_189), remote = true\n  |  - filter_id = 142, build_expr = (25576: mock_157), remote = true\n  |  output columns: 25305, 25324, 25332, 25343, 25353, 25354, 25355, 25356, 25357, 25358, 25359, 25368, 25456, 25500, 25525, 25576\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1519:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25555: mock_189, LARGEINT, false], [25576: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1517:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29873: cast, LARGEINT, true], [25305: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 79(F1060)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25555: mock_189, 25576: mock_157\n  OutPut Exchange id: 1519\n\n  1518:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 25576: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 80(F1058)\n\n  Input Partition: HASH_PARTITIONED: 29874: cast, 25305: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29873: cast, 25305: mock_034\n  OutPut Exchange id: 1517\n\n  1516:Project\n  |  output columns:\n  |  25305 <-> [25305: mock_034, DATETIME, true]\n  |  25324 <-> [25324: mock_042, DOUBLE, true]\n  |  25332 <-> [25332: mock_039, VARCHAR(65535), true]\n  |  25343 <-> [25343: mock_007, BIGINT, true]\n  |  25353 <-> [25353: mock_017, BOOLEAN, true]\n  |  25354 <-> [25354: mock_018, BOOLEAN, true]\n  |  25355 <-> [25355: mock_020, BOOLEAN, true]\n  |  25356 <-> [25356: mock_021, BOOLEAN, true]\n  |  25357 <-> [25357: mock_022, BOOLEAN, true]\n  |  25358 <-> [25358: mock_023, BOOLEAN, true]\n  |  25359 <-> [25359: mock_024, BOOLEAN, true]\n  |  25368 <-> [25368: xx_hash3_64, BIGINT, true]\n  |  25456 <-> [25456: mock_133, VARCHAR(65535), true]\n  |  25500 <-> [25500: mock_133, VARCHAR(65535), true]\n  |  25525 <-> [25525: mock_157, DATETIME, true]\n  |  29873 <-> cast([25367: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1515:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29874: cast, LARGEINT, true] = [25504: mock_177, LARGEINT, false]\n  |  equal join conjunct: [25305: mock_034, DATETIME, true] = [25525: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 139, build_expr = (25504: mock_177), remote = true\n  |  - filter_id = 140, build_expr = (25525: mock_157), remote = true\n  |  output columns: 25305, 25324, 25332, 25343, 25353, 25354, 25355, 25356, 25357, 25358, 25359, 25367, 25368, 25456, 25500, 25525\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 142, probe_expr = (25305: mock_034), partition_exprs = (CAST(25367: xx_hash3_64 AS LARGEINT),25305: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1514:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25504: mock_177, LARGEINT, false], [25525: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1512:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29874: cast, LARGEINT, true], [25305: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 141, probe_expr = (CAST(25367: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(25367: xx_hash3_64 AS LARGEINT),25305: mock_034)\n\nPLAN FRAGMENT 81(F1056)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25504: mock_177, 25525: mock_157\n  OutPut Exchange id: 1514\n\n  1513:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 25525: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 82(F1054)\n\n  Input Partition: HASH_PARTITIONED: 25340: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29874: cast, 25305: mock_034\n  OutPut Exchange id: 1512\n\n  1511:Project\n  |  output columns:\n  |  25305 <-> [25305: mock_034, DATETIME, true]\n  |  25324 <-> [25324: mock_042, DOUBLE, true]\n  |  25332 <-> [25332: mock_039, VARCHAR(65535), true]\n  |  25343 <-> [25343: mock_007, BIGINT, true]\n  |  25353 <-> [25353: mock_017, BOOLEAN, true]\n  |  25354 <-> [25354: mock_018, BOOLEAN, true]\n  |  25355 <-> [25355: mock_020, BOOLEAN, true]\n  |  25356 <-> [25356: mock_021, BOOLEAN, true]\n  |  25357 <-> [25357: mock_022, BOOLEAN, true]\n  |  25358 <-> [25358: mock_023, BOOLEAN, true]\n  |  25359 <-> [25359: mock_024, BOOLEAN, true]\n  |  25367 <-> [25367: xx_hash3_64, BIGINT, true]\n  |  25368 <-> [25368: xx_hash3_64, BIGINT, true]\n  |  25456 <-> [25456: mock_133, VARCHAR(65535), true]\n  |  25500 <-> [25500: mock_133, VARCHAR(65535), true]\n  |  29874 <-> cast([25366: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1510:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25340: mock_030, LARGEINT, true] = [25503: mock_030, LARGEINT, true]\n  |  output columns: 25305, 25324, 25332, 25343, 25353, 25354, 25355, 25356, 25357, 25358, 25359, 25366, 25367, 25368, 25456, 25500\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1509:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25503: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1507:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25340: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 139, probe_expr = (CAST(25366: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(25366: xx_hash3_64 AS LARGEINT),25305: mock_034)\n     - filter_id = 140, probe_expr = (25305: mock_034), partition_exprs = (CAST(25366: xx_hash3_64 AS LARGEINT),25305: mock_034)\n\nPLAN FRAGMENT 83(F1052)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25503: mock_030\n  OutPut Exchange id: 1509\n\n  1508:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 84(F1050)\n\n  Input Partition: HASH_PARTITIONED: 25338: mock_028\n  OutPut Partition: HASH_PARTITIONED: 25340: mock_030\n  OutPut Exchange id: 1507\n\n  1506:Project\n  |  output columns:\n  |  25305 <-> [25305: mock_034, DATETIME, true]\n  |  25324 <-> [25324: mock_042, DOUBLE, true]\n  |  25332 <-> [25332: mock_039, VARCHAR(65535), true]\n  |  25340 <-> [25340: mock_030, LARGEINT, true]\n  |  25343 <-> [25343: mock_007, BIGINT, true]\n  |  25353 <-> [25353: mock_017, BOOLEAN, true]\n  |  25354 <-> [25354: mock_018, BOOLEAN, true]\n  |  25355 <-> [25355: mock_020, BOOLEAN, true]\n  |  25356 <-> [25356: mock_021, BOOLEAN, true]\n  |  25357 <-> [25357: mock_022, BOOLEAN, true]\n  |  25358 <-> [25358: mock_023, BOOLEAN, true]\n  |  25359 <-> [25359: mock_024, BOOLEAN, true]\n  |  25366 <-> [25366: xx_hash3_64, BIGINT, true]\n  |  25367 <-> [25367: xx_hash3_64, BIGINT, true]\n  |  25368 <-> [25368: xx_hash3_64, BIGINT, true]\n  |  25456 <-> [25456: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1505:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25338: mock_028, LARGEINT, true] = [25431: mock_071, LARGEINT, true]\n  |  output columns: 25305, 25324, 25332, 25340, 25343, 25353, 25354, 25355, 25356, 25357, 25358, 25359, 25366, 25367, 25368, 25456\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1504:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25431: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1492:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25338: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 85(F1048)\n\n  Input Partition: HASH_PARTITIONED: 25424: mock_075\n  OutPut Partition: HASH_PARTITIONED: 25431: mock_071\n  OutPut Exchange id: 1504\n\n  1503:Project\n  |  output columns:\n  |  25431 <-> [25431: mock_071, LARGEINT, true]\n  |  25456 <-> [25456: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1502:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25424: mock_075, LARGEINT, true] = [25488: mock_075, LARGEINT, true]\n  |  output columns: 25431, 25456\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1501:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25488: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1499:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25424: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 86(F1046)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25488: mock_075\n  OutPut Exchange id: 1501\n\n  1500:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 87(F1044)\n\n  Input Partition: HASH_PARTITIONED: 25426: mock_077\n  OutPut Partition: HASH_PARTITIONED: 25424: mock_075\n  OutPut Exchange id: 1499\n\n  1498:Project\n  |  output columns:\n  |  25424 <-> [25424: mock_075, LARGEINT, true]\n  |  25431 <-> [25431: mock_071, LARGEINT, true]\n  |  25456 <-> [25456: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1497:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25426: mock_077, LARGEINT, true] = [25459: mock_077, LARGEINT, true]\n  |  output columns: 25424, 25431, 25456\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1496:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25459: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1494:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25426: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 88(F1042)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25459: mock_077\n  OutPut Exchange id: 1496\n\n  1495:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 89(F1040)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25426: mock_077\n  OutPut Exchange id: 1494\n\n  1493:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 90(F1038)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25338: mock_028\n  OutPut Exchange id: 1492\n\n  1491:SELECT\n  |  predicates: 25368: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1490:Project\n  |  output columns:\n  |  25305 <-> [25305: mock_034, DATETIME, true]\n  |  25324 <-> [25324: mock_042, DOUBLE, true]\n  |  25332 <-> [25332: mock_039, VARCHAR(65535), true]\n  |  25338 <-> [25338: mock_028, LARGEINT, true]\n  |  25340 <-> [25340: mock_030, LARGEINT, true]\n  |  25343 <-> [25343: mock_007, BIGINT, true]\n  |  25353 <-> [25353: mock_017, BOOLEAN, true]\n  |  25354 <-> [25354: mock_018, BOOLEAN, true]\n  |  25355 <-> [25355: mock_020, BOOLEAN, true]\n  |  25356 <-> [25356: mock_021, BOOLEAN, true]\n  |  25357 <-> [25357: mock_022, BOOLEAN, true]\n  |  25358 <-> [25358: mock_023, BOOLEAN, true]\n  |  25359 <-> [25359: mock_024, BOOLEAN, true]\n  |  25366 <-> xx_hash3_64[([25312: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25367 <-> xx_hash3_64[([25336: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25368 <-> xx_hash3_64[([25330: mock_002, VARCHAR(65535), true], [25332: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1489:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [25359: mock_024, BOOLEAN, true], [25356: mock_021, BOOLEAN, true], [25354: mock_018, BOOLEAN, true], [25358: mock_023, BOOLEAN, true], [25353: mock_017, BOOLEAN, true], [25357: mock_022, BOOLEAN, true], [25355: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 91(F1035)\n\n  Input Partition: HASH_PARTITIONED: 29875: cast, 24939: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29871: cast\n  OutPut Exchange id: 1487\n\n  1486:Project\n  |  output columns:\n  |  24967 <-> [24967: id, VARCHAR(65535), true]\n  |  24987 <-> [24987: mock_017, BOOLEAN, true]\n  |  24988 <-> [24988: mock_018, BOOLEAN, true]\n  |  24989 <-> [24989: mock_020, BOOLEAN, true]\n  |  24990 <-> [24990: mock_021, BOOLEAN, true]\n  |  24991 <-> [24991: mock_022, BOOLEAN, true]\n  |  24992 <-> [24992: mock_023, BOOLEAN, true]\n  |  24993 <-> [24993: mock_024, BOOLEAN, true]\n  |  25003 <-> [25003: xx_hash3_64, BIGINT, true]\n  |  25242 <-> [24939: mock_034, DATETIME, true] = [25159: mock_157, DATETIME, true]\n  |  25243 <-> [24939: mock_034, DATETIME, true] = [25210: mock_157, DATETIME, true]\n  |  25245 <-> if[(if(25090: mock_133 = 25134: mock_133, 24966: mock_039, NULL) IS NULL, NULL, [24977: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  25246 <-> if[(if(25090: mock_133 != 25134: mock_133, 24966: mock_039, NULL) IS NULL, NULL, [24976: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29871 <-> cast([25002: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1485:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29875: cast, LARGEINT, true] = [25189: mock_189, LARGEINT, false]\n  |  equal join conjunct: [24939: mock_034, DATETIME, true] = [25210: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 137, build_expr = (25189: mock_189), remote = true\n  |  - filter_id = 138, build_expr = (25210: mock_157), remote = true\n  |  output columns: 24939, 24966, 24967, 24976, 24977, 24987, 24988, 24989, 24990, 24991, 24992, 24993, 25002, 25003, 25090, 25134, 25159, 25210\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1484:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25189: mock_189, LARGEINT, false], [25210: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1482:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29875: cast, LARGEINT, true], [24939: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 92(F1033)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25189: mock_189, 25210: mock_157\n  OutPut Exchange id: 1484\n\n  1483:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 25210: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 93(F1031)\n\n  Input Partition: HASH_PARTITIONED: 29876: cast, 24939: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29875: cast, 24939: mock_034\n  OutPut Exchange id: 1482\n\n  1481:Project\n  |  output columns:\n  |  24939 <-> [24939: mock_034, DATETIME, true]\n  |  24966 <-> [24966: mock_039, VARCHAR(65535), true]\n  |  24967 <-> [24967: id, VARCHAR(65535), true]\n  |  24976 <-> [24976: mock_006, BIGINT, true]\n  |  24977 <-> [24977: mock_007, BIGINT, true]\n  |  24987 <-> [24987: mock_017, BOOLEAN, true]\n  |  24988 <-> [24988: mock_018, BOOLEAN, true]\n  |  24989 <-> [24989: mock_020, BOOLEAN, true]\n  |  24990 <-> [24990: mock_021, BOOLEAN, true]\n  |  24991 <-> [24991: mock_022, BOOLEAN, true]\n  |  24992 <-> [24992: mock_023, BOOLEAN, true]\n  |  24993 <-> [24993: mock_024, BOOLEAN, true]\n  |  25002 <-> [25002: xx_hash3_64, BIGINT, true]\n  |  25003 <-> [25003: xx_hash3_64, BIGINT, true]\n  |  25090 <-> [25090: mock_133, VARCHAR(65535), true]\n  |  25134 <-> [25134: mock_133, VARCHAR(65535), true]\n  |  25159 <-> [25159: mock_157, DATETIME, true]\n  |  29875 <-> cast([25001: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1480:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29876: cast, LARGEINT, true] = [25138: mock_177, LARGEINT, false]\n  |  equal join conjunct: [24939: mock_034, DATETIME, true] = [25159: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 135, build_expr = (25138: mock_177), remote = true\n  |  - filter_id = 136, build_expr = (25159: mock_157), remote = true\n  |  output columns: 24939, 24966, 24967, 24976, 24977, 24987, 24988, 24989, 24990, 24991, 24992, 24993, 25001, 25002, 25003, 25090, 25134, 25159\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 138, probe_expr = (24939: mock_034), partition_exprs = (CAST(25001: xx_hash3_64 AS LARGEINT),24939: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1479:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25138: mock_177, LARGEINT, false], [25159: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1477:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29876: cast, LARGEINT, true], [24939: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 137, probe_expr = (CAST(25001: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(25001: xx_hash3_64 AS LARGEINT),24939: mock_034)\n\nPLAN FRAGMENT 94(F1029)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25138: mock_177, 25159: mock_157\n  OutPut Exchange id: 1479\n\n  1478:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 25159: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 95(F1027)\n\n  Input Partition: HASH_PARTITIONED: 24974: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29876: cast, 24939: mock_034\n  OutPut Exchange id: 1477\n\n  1476:Project\n  |  output columns:\n  |  24939 <-> [24939: mock_034, DATETIME, true]\n  |  24966 <-> [24966: mock_039, VARCHAR(65535), true]\n  |  24967 <-> [24967: id, VARCHAR(65535), true]\n  |  24976 <-> [24976: mock_006, BIGINT, true]\n  |  24977 <-> [24977: mock_007, BIGINT, true]\n  |  24987 <-> [24987: mock_017, BOOLEAN, true]\n  |  24988 <-> [24988: mock_018, BOOLEAN, true]\n  |  24989 <-> [24989: mock_020, BOOLEAN, true]\n  |  24990 <-> [24990: mock_021, BOOLEAN, true]\n  |  24991 <-> [24991: mock_022, BOOLEAN, true]\n  |  24992 <-> [24992: mock_023, BOOLEAN, true]\n  |  24993 <-> [24993: mock_024, BOOLEAN, true]\n  |  25001 <-> [25001: xx_hash3_64, BIGINT, true]\n  |  25002 <-> [25002: xx_hash3_64, BIGINT, true]\n  |  25003 <-> [25003: xx_hash3_64, BIGINT, true]\n  |  25090 <-> [25090: mock_133, VARCHAR(65535), true]\n  |  25134 <-> [25134: mock_133, VARCHAR(65535), true]\n  |  29876 <-> cast([25000: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1475:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24974: mock_030, LARGEINT, true] = [25137: mock_030, LARGEINT, true]\n  |  output columns: 24939, 24966, 24967, 24976, 24977, 24987, 24988, 24989, 24990, 24991, 24992, 24993, 25000, 25001, 25002, 25003, 25090, 25134\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1474:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25137: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1472:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24974: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 135, probe_expr = (CAST(25000: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(25000: xx_hash3_64 AS LARGEINT),24939: mock_034)\n     - filter_id = 136, probe_expr = (24939: mock_034), partition_exprs = (CAST(25000: xx_hash3_64 AS LARGEINT),24939: mock_034)\n\nPLAN FRAGMENT 96(F1025)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25137: mock_030\n  OutPut Exchange id: 1474\n\n  1473:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 97(F1023)\n\n  Input Partition: HASH_PARTITIONED: 24972: mock_028\n  OutPut Partition: HASH_PARTITIONED: 24974: mock_030\n  OutPut Exchange id: 1472\n\n  1471:Project\n  |  output columns:\n  |  24939 <-> [24939: mock_034, DATETIME, true]\n  |  24966 <-> [24966: mock_039, VARCHAR(65535), true]\n  |  24967 <-> [24967: id, VARCHAR(65535), true]\n  |  24974 <-> [24974: mock_030, LARGEINT, true]\n  |  24976 <-> [24976: mock_006, BIGINT, true]\n  |  24977 <-> [24977: mock_007, BIGINT, true]\n  |  24987 <-> [24987: mock_017, BOOLEAN, true]\n  |  24988 <-> [24988: mock_018, BOOLEAN, true]\n  |  24989 <-> [24989: mock_020, BOOLEAN, true]\n  |  24990 <-> [24990: mock_021, BOOLEAN, true]\n  |  24991 <-> [24991: mock_022, BOOLEAN, true]\n  |  24992 <-> [24992: mock_023, BOOLEAN, true]\n  |  24993 <-> [24993: mock_024, BOOLEAN, true]\n  |  25000 <-> [25000: xx_hash3_64, BIGINT, true]\n  |  25001 <-> [25001: xx_hash3_64, BIGINT, true]\n  |  25002 <-> [25002: xx_hash3_64, BIGINT, true]\n  |  25003 <-> [25003: xx_hash3_64, BIGINT, true]\n  |  25090 <-> [25090: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1470:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24972: mock_028, LARGEINT, true] = [25065: mock_071, LARGEINT, true]\n  |  output columns: 24939, 24966, 24967, 24974, 24976, 24977, 24987, 24988, 24989, 24990, 24991, 24992, 24993, 25000, 25001, 25002, 25003, 25090\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1469:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25065: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1457:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24972: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 98(F1021)\n\n  Input Partition: HASH_PARTITIONED: 25058: mock_075\n  OutPut Partition: HASH_PARTITIONED: 25065: mock_071\n  OutPut Exchange id: 1469\n\n  1468:Project\n  |  output columns:\n  |  25065 <-> [25065: mock_071, LARGEINT, true]\n  |  25090 <-> [25090: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1467:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25058: mock_075, LARGEINT, true] = [25122: mock_075, LARGEINT, true]\n  |  output columns: 25065, 25090\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1466:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25122: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1464:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25058: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 99(F1019)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25122: mock_075\n  OutPut Exchange id: 1466\n\n  1465:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 100(F1017)\n\n  Input Partition: HASH_PARTITIONED: 25060: mock_077\n  OutPut Partition: HASH_PARTITIONED: 25058: mock_075\n  OutPut Exchange id: 1464\n\n  1463:Project\n  |  output columns:\n  |  25058 <-> [25058: mock_075, LARGEINT, true]\n  |  25065 <-> [25065: mock_071, LARGEINT, true]\n  |  25090 <-> [25090: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1462:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [25060: mock_077, LARGEINT, true] = [25093: mock_077, LARGEINT, true]\n  |  output columns: 25058, 25065, 25090\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1461:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [25093: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1459:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [25060: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 101(F1015)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25093: mock_077\n  OutPut Exchange id: 1461\n\n  1460:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 102(F1013)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 25060: mock_077\n  OutPut Exchange id: 1459\n\n  1458:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 103(F1011)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24972: mock_028\n  OutPut Exchange id: 1457\n\n  1456:SELECT\n  |  predicates: 25003: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1455:Project\n  |  output columns:\n  |  24939 <-> [24939: mock_034, DATETIME, true]\n  |  24966 <-> [24966: mock_039, VARCHAR(65535), true]\n  |  24967 <-> [24967: id, VARCHAR(65535), true]\n  |  24972 <-> [24972: mock_028, LARGEINT, true]\n  |  24974 <-> [24974: mock_030, LARGEINT, true]\n  |  24976 <-> [24976: mock_006, BIGINT, true]\n  |  24977 <-> [24977: mock_007, BIGINT, true]\n  |  24987 <-> [24987: mock_017, BOOLEAN, true]\n  |  24988 <-> [24988: mock_018, BOOLEAN, true]\n  |  24989 <-> [24989: mock_020, BOOLEAN, true]\n  |  24990 <-> [24990: mock_021, BOOLEAN, true]\n  |  24991 <-> [24991: mock_022, BOOLEAN, true]\n  |  24992 <-> [24992: mock_023, BOOLEAN, true]\n  |  24993 <-> [24993: mock_024, BOOLEAN, true]\n  |  25000 <-> xx_hash3_64[([24946: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25001 <-> xx_hash3_64[([24970: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25002 <-> xx_hash3_64[([24964: mock_002, VARCHAR(65535), true], [24966: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  25003 <-> xx_hash3_64[([24966: mock_039, VARCHAR(65535), true], [24965: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1454:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [24993: mock_024, BOOLEAN, true], [24990: mock_021, BOOLEAN, true], [24988: mock_018, BOOLEAN, true], [24992: mock_023, BOOLEAN, true], [24987: mock_017, BOOLEAN, true], [24991: mock_022, BOOLEAN, true], [24989: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=148.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 104(F1008)\n\n  Input Partition: HASH_PARTITIONED: 29878: cast\n  OutPut Partition: HASH_PARTITIONED: 29865: cast\n  OutPut Exchange id: 1452\n\n  1451:Project\n  |  output columns:\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  24880 <-> if[([30150: case, DOUBLE, true] > [23894: expr, DOUBLE, true], [30150: case, DOUBLE, true] * cast(if[(CASE WHEN 30148: expr THEN 24135: case WHEN (30144: expr) AND (30145: coalesce != 1) THEN 0 ELSE 24136: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29865 <-> cast([23893: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30144 <-> [24507: sum, DOUBLE, true] > 0.0\n  |  30145 <-> coalesce[([24135: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30146 <-> [30145: coalesce, BIGINT, true] = 1\n  |  30147 <-> [30145: coalesce, BIGINT, true] = 0\n  |  30148 <-> (30144: expr) AND (30146: expr)\n  |  30149 <-> (30144: expr) AND (30147: expr)\n  |  30150 <-> CASE WHEN 30148: expr THEN 24876: sum WHEN 30149: expr THEN 0.0 ELSE 24877: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1450:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29877: cast, LARGEINT, true] = [24508: mock_193, LARGEINT, true]\n  |  output columns: 23893, 23894, 24135, 24136, 24507, 24876, 24877\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1449:Project\n  |    |  output columns:\n  |    |  24508 <-> [24508: mock_193, LARGEINT, false]\n  |    |  24876 <-> [24876: sum, DOUBLE, true]\n  |    |  24877 <-> [24877: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    1448:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29878: cast, LARGEINT, true] = [24508: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 134, build_expr = (24508: mock_193), remote = true\n  |    |  output columns: 24508, 24876, 24877\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----1447:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [24508: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    1445:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29878: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1407:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29877: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 105(F1006)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24508: mock_193\n  OutPut Exchange id: 1447\n\n  1446:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 106(F1004)\n\n  Input Partition: HASH_PARTITIONED: 24628: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29878: cast\n  OutPut Exchange id: 1445\n\n  1444:Project\n  |  output columns:\n  |  24876 <-> [24876: sum, DOUBLE, true]\n  |  24877 <-> [24877: sum, DOUBLE, true]\n  |  29878 <-> cast([24628: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1443:AGGREGATE (merge finalize)\n  |  aggregate: sum[([24876: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([24877: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [24628: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 134, probe_expr = (CAST(24628: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1442:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24628: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 107(F1003)\n\n  Input Partition: HASH_PARTITIONED: 29879: cast, 24564: mock_034\n  OutPut Partition: HASH_PARTITIONED: 24628: xx_hash3_64\n  OutPut Exchange id: 1442\n\n  1441:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([24874: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([24875: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [24628: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1440:Project\n  |  output columns:\n  |  24628 <-> [24628: xx_hash3_64, BIGINT, true]\n  |  24874 <-> if[([30160: expr, BOOLEAN, true], if[(if[(if(24715: mock_133 = 24759: mock_133, 24591: mock_039, NULL) IS NULL, NULL, [24602: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [24583: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  24875 <-> if[([30160: expr, BOOLEAN, true], if[(if[(if(24715: mock_133 != 24759: mock_133, 24591: mock_039, NULL) IS NULL, NULL, [24601: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [24583: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30160 <-> (30159: expr) AND (24614: mock_020)\n  |  30151 <-> (24618: mock_024) AND (24615: mock_021)\n  |  30152 <-> (24613: mock_018) AND (24617: mock_023)\n  |  30153 <-> (24612: mock_017) AND (24616: mock_022)\n  |  30154 <-> [24564: mock_034, DATETIME, true] = [24784: mock_157, DATETIME, true]\n  |  30155 <-> [24564: mock_034, DATETIME, true] = [24835: mock_157, DATETIME, true]\n  |  30156 <-> (30151: expr) AND (30152: expr)\n  |  30157 <-> (30154: expr) AND (30155: expr)\n  |  30158 <-> (30153: expr) AND (30157: expr)\n  |  30159 <-> (30156: expr) AND (30158: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1439:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29879: cast, LARGEINT, true] = [24814: mock_189, LARGEINT, false]\n  |  equal join conjunct: [24564: mock_034, DATETIME, true] = [24835: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 132, build_expr = (24814: mock_189), remote = true\n  |  - filter_id = 133, build_expr = (24835: mock_157), remote = true\n  |  output columns: 24564, 24583, 24591, 24601, 24602, 24612, 24613, 24614, 24615, 24616, 24617, 24618, 24628, 24715, 24759, 24784, 24835\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1438:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24814: mock_189, LARGEINT, false], [24835: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1436:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29879: cast, LARGEINT, true], [24564: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 108(F1001)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24814: mock_189, 24835: mock_157\n  OutPut Exchange id: 1438\n\n  1437:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 24835: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 109(F999)\n\n  Input Partition: HASH_PARTITIONED: 29880: cast, 24564: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29879: cast, 24564: mock_034\n  OutPut Exchange id: 1436\n\n  1435:Project\n  |  output columns:\n  |  24564 <-> [24564: mock_034, DATETIME, true]\n  |  24583 <-> [24583: mock_042, DOUBLE, true]\n  |  24591 <-> [24591: mock_039, VARCHAR(65535), true]\n  |  24601 <-> [24601: mock_006, BIGINT, true]\n  |  24602 <-> [24602: mock_007, BIGINT, true]\n  |  24612 <-> [24612: mock_017, BOOLEAN, true]\n  |  24613 <-> [24613: mock_018, BOOLEAN, true]\n  |  24614 <-> [24614: mock_020, BOOLEAN, true]\n  |  24615 <-> [24615: mock_021, BOOLEAN, true]\n  |  24616 <-> [24616: mock_022, BOOLEAN, true]\n  |  24617 <-> [24617: mock_023, BOOLEAN, true]\n  |  24618 <-> [24618: mock_024, BOOLEAN, true]\n  |  24628 <-> [24628: xx_hash3_64, BIGINT, true]\n  |  24715 <-> [24715: mock_133, VARCHAR(65535), true]\n  |  24759 <-> [24759: mock_133, VARCHAR(65535), true]\n  |  24784 <-> [24784: mock_157, DATETIME, true]\n  |  29879 <-> cast([24626: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1434:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29880: cast, LARGEINT, true] = [24763: mock_177, LARGEINT, false]\n  |  equal join conjunct: [24564: mock_034, DATETIME, true] = [24784: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 130, build_expr = (24763: mock_177), remote = true\n  |  - filter_id = 131, build_expr = (24784: mock_157), remote = true\n  |  output columns: 24564, 24583, 24591, 24601, 24602, 24612, 24613, 24614, 24615, 24616, 24617, 24618, 24626, 24628, 24715, 24759, 24784\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 133, probe_expr = (24564: mock_034), partition_exprs = (CAST(24626: xx_hash3_64 AS LARGEINT),24564: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1433:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24763: mock_177, LARGEINT, false], [24784: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1431:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29880: cast, LARGEINT, true], [24564: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 132, probe_expr = (CAST(24626: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(24626: xx_hash3_64 AS LARGEINT),24564: mock_034)\n\nPLAN FRAGMENT 110(F997)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24763: mock_177, 24784: mock_157\n  OutPut Exchange id: 1433\n\n  1432:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 24784: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 111(F995)\n\n  Input Partition: HASH_PARTITIONED: 24599: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29880: cast, 24564: mock_034\n  OutPut Exchange id: 1431\n\n  1430:Project\n  |  output columns:\n  |  24564 <-> [24564: mock_034, DATETIME, true]\n  |  24583 <-> [24583: mock_042, DOUBLE, true]\n  |  24591 <-> [24591: mock_039, VARCHAR(65535), true]\n  |  24601 <-> [24601: mock_006, BIGINT, true]\n  |  24602 <-> [24602: mock_007, BIGINT, true]\n  |  24612 <-> [24612: mock_017, BOOLEAN, true]\n  |  24613 <-> [24613: mock_018, BOOLEAN, true]\n  |  24614 <-> [24614: mock_020, BOOLEAN, true]\n  |  24615 <-> [24615: mock_021, BOOLEAN, true]\n  |  24616 <-> [24616: mock_022, BOOLEAN, true]\n  |  24617 <-> [24617: mock_023, BOOLEAN, true]\n  |  24618 <-> [24618: mock_024, BOOLEAN, true]\n  |  24626 <-> [24626: xx_hash3_64, BIGINT, true]\n  |  24628 <-> [24628: xx_hash3_64, BIGINT, true]\n  |  24715 <-> [24715: mock_133, VARCHAR(65535), true]\n  |  24759 <-> [24759: mock_133, VARCHAR(65535), true]\n  |  29880 <-> cast([24625: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1429:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24599: mock_030, LARGEINT, true] = [24762: mock_030, LARGEINT, true]\n  |  output columns: 24564, 24583, 24591, 24601, 24602, 24612, 24613, 24614, 24615, 24616, 24617, 24618, 24625, 24626, 24628, 24715, 24759\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1428:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24762: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1426:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24599: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 130, probe_expr = (CAST(24625: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(24625: xx_hash3_64 AS LARGEINT),24564: mock_034)\n     - filter_id = 131, probe_expr = (24564: mock_034), partition_exprs = (CAST(24625: xx_hash3_64 AS LARGEINT),24564: mock_034)\n\nPLAN FRAGMENT 112(F993)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24762: mock_030\n  OutPut Exchange id: 1428\n\n  1427:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 113(F991)\n\n  Input Partition: HASH_PARTITIONED: 24597: mock_028\n  OutPut Partition: HASH_PARTITIONED: 24599: mock_030\n  OutPut Exchange id: 1426\n\n  1425:Project\n  |  output columns:\n  |  24564 <-> [24564: mock_034, DATETIME, true]\n  |  24583 <-> [24583: mock_042, DOUBLE, true]\n  |  24591 <-> [24591: mock_039, VARCHAR(65535), true]\n  |  24599 <-> [24599: mock_030, LARGEINT, true]\n  |  24601 <-> [24601: mock_006, BIGINT, true]\n  |  24602 <-> [24602: mock_007, BIGINT, true]\n  |  24612 <-> [24612: mock_017, BOOLEAN, true]\n  |  24613 <-> [24613: mock_018, BOOLEAN, true]\n  |  24614 <-> [24614: mock_020, BOOLEAN, true]\n  |  24615 <-> [24615: mock_021, BOOLEAN, true]\n  |  24616 <-> [24616: mock_022, BOOLEAN, true]\n  |  24617 <-> [24617: mock_023, BOOLEAN, true]\n  |  24618 <-> [24618: mock_024, BOOLEAN, true]\n  |  24625 <-> [24625: xx_hash3_64, BIGINT, true]\n  |  24626 <-> [24626: xx_hash3_64, BIGINT, true]\n  |  24628 <-> [24628: xx_hash3_64, BIGINT, true]\n  |  24715 <-> [24715: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1424:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24597: mock_028, LARGEINT, true] = [24690: mock_071, LARGEINT, true]\n  |  output columns: 24564, 24583, 24591, 24599, 24601, 24602, 24612, 24613, 24614, 24615, 24616, 24617, 24618, 24625, 24626, 24628, 24715\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1423:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24690: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1411:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24597: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 114(F989)\n\n  Input Partition: HASH_PARTITIONED: 24683: mock_075\n  OutPut Partition: HASH_PARTITIONED: 24690: mock_071\n  OutPut Exchange id: 1423\n\n  1422:Project\n  |  output columns:\n  |  24690 <-> [24690: mock_071, LARGEINT, true]\n  |  24715 <-> [24715: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1421:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24683: mock_075, LARGEINT, true] = [24747: mock_075, LARGEINT, true]\n  |  output columns: 24690, 24715\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1420:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24747: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1418:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24683: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 115(F987)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24747: mock_075\n  OutPut Exchange id: 1420\n\n  1419:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 116(F985)\n\n  Input Partition: HASH_PARTITIONED: 24685: mock_077\n  OutPut Partition: HASH_PARTITIONED: 24683: mock_075\n  OutPut Exchange id: 1418\n\n  1417:Project\n  |  output columns:\n  |  24683 <-> [24683: mock_075, LARGEINT, true]\n  |  24690 <-> [24690: mock_071, LARGEINT, true]\n  |  24715 <-> [24715: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1416:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24685: mock_077, LARGEINT, true] = [24718: mock_077, LARGEINT, true]\n  |  output columns: 24683, 24690, 24715\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1415:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24718: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1413:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24685: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 117(F983)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24718: mock_077\n  OutPut Exchange id: 1415\n\n  1414:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 118(F981)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24685: mock_077\n  OutPut Exchange id: 1413\n\n  1412:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 119(F979)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24597: mock_028\n  OutPut Exchange id: 1411\n\n  1410:SELECT\n  |  predicates: 24628: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1409:Project\n  |  output columns:\n  |  24564 <-> [24564: mock_034, DATETIME, true]\n  |  24583 <-> [24583: mock_042, DOUBLE, true]\n  |  24591 <-> [24591: mock_039, VARCHAR(65535), true]\n  |  24597 <-> [24597: mock_028, LARGEINT, true]\n  |  24599 <-> [24599: mock_030, LARGEINT, true]\n  |  24601 <-> [24601: mock_006, BIGINT, true]\n  |  24602 <-> [24602: mock_007, BIGINT, true]\n  |  24612 <-> [24612: mock_017, BOOLEAN, true]\n  |  24613 <-> [24613: mock_018, BOOLEAN, true]\n  |  24614 <-> [24614: mock_020, BOOLEAN, true]\n  |  24615 <-> [24615: mock_021, BOOLEAN, true]\n  |  24616 <-> [24616: mock_022, BOOLEAN, true]\n  |  24617 <-> [24617: mock_023, BOOLEAN, true]\n  |  24618 <-> [24618: mock_024, BOOLEAN, true]\n  |  24625 <-> xx_hash3_64[([24571: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  24626 <-> xx_hash3_64[([24595: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  24628 <-> xx_hash3_64[([24591: mock_039, VARCHAR(65535), true], [24590: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1408:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [24618: mock_024, BOOLEAN, true], [24615: mock_021, BOOLEAN, true], [24613: mock_018, BOOLEAN, true], [24617: mock_023, BOOLEAN, true], [24612: mock_017, BOOLEAN, true], [24616: mock_022, BOOLEAN, true], [24614: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=134.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 120(F977)\n\n  Input Partition: HASH_PARTITIONED: 29881: cast\n  OutPut Partition: HASH_PARTITIONED: 29877: cast\n  OutPut Exchange id: 1407\n\n  1406:Project\n  |  output columns:\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  23894 <-> [23894: expr, DOUBLE, true]\n  |  24135 <-> [24135: case, BIGINT, true]\n  |  24136 <-> [24136: case, BIGINT, true]\n  |  24507 <-> [24507: sum, DOUBLE, true]\n  |  29877 <-> cast([23893: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1405:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29881: cast, LARGEINT, true] = [24139: mock_191, LARGEINT, true]\n  |  output columns: 23893, 23894, 24135, 24136, 24507\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1404:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24139: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1362:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29881: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 121(F948)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24139: mock_191\n  OutPut Exchange id: 1404\n\n  1403:Project\n  |  output columns:\n  |  24139 <-> [24139: mock_191, LARGEINT, false]\n  |  24507 <-> [24507: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1402:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [24139: mock_191, LARGEINT, false] = [29882: cast, LARGEINT, true]\n  |  output columns: 24139, 24507\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1401:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29882: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1363:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 122(F974)\n\n  Input Partition: HASH_PARTITIONED: 24258: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29882: cast\n  OutPut Exchange id: 1401\n\n  1400:Project\n  |  output columns:\n  |  24507 <-> [24507: sum, DOUBLE, true]\n  |  29882 <-> cast([24258: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1399:AGGREGATE (merge finalize)\n  |  aggregate: sum[([24507: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [24258: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1398:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24258: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 123(F973)\n\n  Input Partition: HASH_PARTITIONED: 29883: cast, 24195: mock_034\n  OutPut Partition: HASH_PARTITIONED: 24258: xx_hash3_64\n  OutPut Exchange id: 1398\n\n  1397:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([24505: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [24258: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1396:Project\n  |  output columns:\n  |  24258 <-> [24258: xx_hash3_64, BIGINT, true]\n  |  24505 <-> if[(((((24249: mock_024) AND (24246: mock_021)) AND ((24244: mock_018) AND (24248: mock_023))) AND (((24243: mock_017) AND (24247: mock_022)) AND ((24195: mock_034 = 24415: mock_157) AND (24195: mock_034 = 24466: mock_157)))) AND (24245: mock_020), if[(if[(if(24346: mock_133 = 24390: mock_133, 24222: mock_039, NULL) IS NULL, NULL, [24233: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [24214: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1395:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29883: cast, LARGEINT, true] = [24445: mock_189, LARGEINT, false]\n  |  equal join conjunct: [24195: mock_034, DATETIME, true] = [24466: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 128, build_expr = (24445: mock_189), remote = true\n  |  - filter_id = 129, build_expr = (24466: mock_157), remote = true\n  |  output columns: 24195, 24214, 24222, 24233, 24243, 24244, 24245, 24246, 24247, 24248, 24249, 24258, 24346, 24390, 24415, 24466\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1394:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24445: mock_189, LARGEINT, false], [24466: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1392:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29883: cast, LARGEINT, true], [24195: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 124(F971)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24445: mock_189, 24466: mock_157\n  OutPut Exchange id: 1394\n\n  1393:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 24466: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 125(F969)\n\n  Input Partition: HASH_PARTITIONED: 29884: cast, 24195: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29883: cast, 24195: mock_034\n  OutPut Exchange id: 1392\n\n  1391:Project\n  |  output columns:\n  |  24195 <-> [24195: mock_034, DATETIME, true]\n  |  24214 <-> [24214: mock_042, DOUBLE, true]\n  |  24222 <-> [24222: mock_039, VARCHAR(65535), true]\n  |  24233 <-> [24233: mock_007, BIGINT, true]\n  |  24243 <-> [24243: mock_017, BOOLEAN, true]\n  |  24244 <-> [24244: mock_018, BOOLEAN, true]\n  |  24245 <-> [24245: mock_020, BOOLEAN, true]\n  |  24246 <-> [24246: mock_021, BOOLEAN, true]\n  |  24247 <-> [24247: mock_022, BOOLEAN, true]\n  |  24248 <-> [24248: mock_023, BOOLEAN, true]\n  |  24249 <-> [24249: mock_024, BOOLEAN, true]\n  |  24258 <-> [24258: xx_hash3_64, BIGINT, true]\n  |  24346 <-> [24346: mock_133, VARCHAR(65535), true]\n  |  24390 <-> [24390: mock_133, VARCHAR(65535), true]\n  |  24415 <-> [24415: mock_157, DATETIME, true]\n  |  29883 <-> cast([24257: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1390:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29884: cast, LARGEINT, true] = [24394: mock_177, LARGEINT, false]\n  |  equal join conjunct: [24195: mock_034, DATETIME, true] = [24415: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 126, build_expr = (24394: mock_177), remote = true\n  |  - filter_id = 127, build_expr = (24415: mock_157), remote = true\n  |  output columns: 24195, 24214, 24222, 24233, 24243, 24244, 24245, 24246, 24247, 24248, 24249, 24257, 24258, 24346, 24390, 24415\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 129, probe_expr = (24195: mock_034), partition_exprs = (CAST(24257: xx_hash3_64 AS LARGEINT),24195: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1389:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24394: mock_177, LARGEINT, false], [24415: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1387:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29884: cast, LARGEINT, true], [24195: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 128, probe_expr = (CAST(24257: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(24257: xx_hash3_64 AS LARGEINT),24195: mock_034)\n\nPLAN FRAGMENT 126(F967)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24394: mock_177, 24415: mock_157\n  OutPut Exchange id: 1389\n\n  1388:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 24415: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 127(F965)\n\n  Input Partition: HASH_PARTITIONED: 24230: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29884: cast, 24195: mock_034\n  OutPut Exchange id: 1387\n\n  1386:Project\n  |  output columns:\n  |  24195 <-> [24195: mock_034, DATETIME, true]\n  |  24214 <-> [24214: mock_042, DOUBLE, true]\n  |  24222 <-> [24222: mock_039, VARCHAR(65535), true]\n  |  24233 <-> [24233: mock_007, BIGINT, true]\n  |  24243 <-> [24243: mock_017, BOOLEAN, true]\n  |  24244 <-> [24244: mock_018, BOOLEAN, true]\n  |  24245 <-> [24245: mock_020, BOOLEAN, true]\n  |  24246 <-> [24246: mock_021, BOOLEAN, true]\n  |  24247 <-> [24247: mock_022, BOOLEAN, true]\n  |  24248 <-> [24248: mock_023, BOOLEAN, true]\n  |  24249 <-> [24249: mock_024, BOOLEAN, true]\n  |  24257 <-> [24257: xx_hash3_64, BIGINT, true]\n  |  24258 <-> [24258: xx_hash3_64, BIGINT, true]\n  |  24346 <-> [24346: mock_133, VARCHAR(65535), true]\n  |  24390 <-> [24390: mock_133, VARCHAR(65535), true]\n  |  29884 <-> cast([24256: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1385:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24230: mock_030, LARGEINT, true] = [24393: mock_030, LARGEINT, true]\n  |  output columns: 24195, 24214, 24222, 24233, 24243, 24244, 24245, 24246, 24247, 24248, 24249, 24256, 24257, 24258, 24346, 24390\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1384:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24393: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1382:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24230: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 126, probe_expr = (CAST(24256: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(24256: xx_hash3_64 AS LARGEINT),24195: mock_034)\n     - filter_id = 127, probe_expr = (24195: mock_034), partition_exprs = (CAST(24256: xx_hash3_64 AS LARGEINT),24195: mock_034)\n\nPLAN FRAGMENT 128(F963)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24393: mock_030\n  OutPut Exchange id: 1384\n\n  1383:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 129(F961)\n\n  Input Partition: HASH_PARTITIONED: 24228: mock_028\n  OutPut Partition: HASH_PARTITIONED: 24230: mock_030\n  OutPut Exchange id: 1382\n\n  1381:Project\n  |  output columns:\n  |  24195 <-> [24195: mock_034, DATETIME, true]\n  |  24214 <-> [24214: mock_042, DOUBLE, true]\n  |  24222 <-> [24222: mock_039, VARCHAR(65535), true]\n  |  24230 <-> [24230: mock_030, LARGEINT, true]\n  |  24233 <-> [24233: mock_007, BIGINT, true]\n  |  24243 <-> [24243: mock_017, BOOLEAN, true]\n  |  24244 <-> [24244: mock_018, BOOLEAN, true]\n  |  24245 <-> [24245: mock_020, BOOLEAN, true]\n  |  24246 <-> [24246: mock_021, BOOLEAN, true]\n  |  24247 <-> [24247: mock_022, BOOLEAN, true]\n  |  24248 <-> [24248: mock_023, BOOLEAN, true]\n  |  24249 <-> [24249: mock_024, BOOLEAN, true]\n  |  24256 <-> [24256: xx_hash3_64, BIGINT, true]\n  |  24257 <-> [24257: xx_hash3_64, BIGINT, true]\n  |  24258 <-> [24258: xx_hash3_64, BIGINT, true]\n  |  24346 <-> [24346: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1380:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24228: mock_028, LARGEINT, true] = [24321: mock_071, LARGEINT, true]\n  |  output columns: 24195, 24214, 24222, 24230, 24233, 24243, 24244, 24245, 24246, 24247, 24248, 24249, 24256, 24257, 24258, 24346\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1379:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24321: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1367:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24228: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 130(F959)\n\n  Input Partition: HASH_PARTITIONED: 24314: mock_075\n  OutPut Partition: HASH_PARTITIONED: 24321: mock_071\n  OutPut Exchange id: 1379\n\n  1378:Project\n  |  output columns:\n  |  24321 <-> [24321: mock_071, LARGEINT, true]\n  |  24346 <-> [24346: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1377:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24314: mock_075, LARGEINT, true] = [24378: mock_075, LARGEINT, true]\n  |  output columns: 24321, 24346\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1376:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24378: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1374:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24314: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 131(F957)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24378: mock_075\n  OutPut Exchange id: 1376\n\n  1375:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 132(F955)\n\n  Input Partition: HASH_PARTITIONED: 24316: mock_077\n  OutPut Partition: HASH_PARTITIONED: 24314: mock_075\n  OutPut Exchange id: 1374\n\n  1373:Project\n  |  output columns:\n  |  24314 <-> [24314: mock_075, LARGEINT, true]\n  |  24321 <-> [24321: mock_071, LARGEINT, true]\n  |  24346 <-> [24346: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1372:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [24316: mock_077, LARGEINT, true] = [24349: mock_077, LARGEINT, true]\n  |  output columns: 24314, 24321, 24346\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1371:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24349: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1369:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [24316: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 133(F953)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24349: mock_077\n  OutPut Exchange id: 1371\n\n  1370:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 134(F951)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24316: mock_077\n  OutPut Exchange id: 1369\n\n  1368:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 135(F949)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24228: mock_028\n  OutPut Exchange id: 1367\n\n  1366:SELECT\n  |  predicates: 24258: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1365:Project\n  |  output columns:\n  |  24195 <-> [24195: mock_034, DATETIME, true]\n  |  24214 <-> [24214: mock_042, DOUBLE, true]\n  |  24222 <-> [24222: mock_039, VARCHAR(65535), true]\n  |  24228 <-> [24228: mock_028, LARGEINT, true]\n  |  24230 <-> [24230: mock_030, LARGEINT, true]\n  |  24233 <-> [24233: mock_007, BIGINT, true]\n  |  24243 <-> [24243: mock_017, BOOLEAN, true]\n  |  24244 <-> [24244: mock_018, BOOLEAN, true]\n  |  24245 <-> [24245: mock_020, BOOLEAN, true]\n  |  24246 <-> [24246: mock_021, BOOLEAN, true]\n  |  24247 <-> [24247: mock_022, BOOLEAN, true]\n  |  24248 <-> [24248: mock_023, BOOLEAN, true]\n  |  24249 <-> [24249: mock_024, BOOLEAN, true]\n  |  24256 <-> xx_hash3_64[([24202: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  24257 <-> xx_hash3_64[([24226: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  24258 <-> xx_hash3_64[([24220: mock_002, VARCHAR(65535), true], [24222: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1364:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [24249: mock_024, BOOLEAN, true], [24246: mock_021, BOOLEAN, true], [24244: mock_018, BOOLEAN, true], [24248: mock_023, BOOLEAN, true], [24243: mock_017, BOOLEAN, true], [24247: mock_022, BOOLEAN, true], [24245: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 136(F946)\n\n  Input Partition: HASH_PARTITIONED: 29886: cast, 23829: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29881: cast\n  OutPut Exchange id: 1362\n\n  1361:Project\n  |  output columns:\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  23894 <-> [23894: expr, DOUBLE, true]\n  |  24135 <-> if[(if(23980: mock_133 = 24024: mock_133, 23856: mock_039, NULL) IS NULL, NULL, [23867: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  24136 <-> if[(if(23980: mock_133 != 24024: mock_133, 23856: mock_039, NULL) IS NULL, NULL, [23866: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29881 <-> cast([23892: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1360:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29886: cast, LARGEINT, true] = [24028: mock_177, LARGEINT, false]\n  |  equal join conjunct: [23829: mock_034, DATETIME, true] = [24049: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 124, build_expr = (24028: mock_177), remote = true\n  |  - filter_id = 125, build_expr = (24049: mock_157), remote = true\n  |  output columns: 23856, 23866, 23867, 23892, 23893, 23894, 23980, 24024\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1359:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24028: mock_177, LARGEINT, false], [24049: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1357:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29886: cast, LARGEINT, true], [23829: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 137(F944)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24028: mock_177, 24049: mock_157\n  OutPut Exchange id: 1359\n\n  1358:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 24049: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 138(F942)\n\n  Input Partition: HASH_PARTITIONED: 29885: cast, 23829: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29886: cast, 23829: mock_034\n  OutPut Exchange id: 1357\n\n  1356:Project\n  |  output columns:\n  |  23829 <-> [23829: mock_034, DATETIME, true]\n  |  23856 <-> [23856: mock_039, VARCHAR(65535), true]\n  |  23866 <-> [23866: mock_006, BIGINT, true]\n  |  23867 <-> [23867: mock_007, BIGINT, true]\n  |  23892 <-> [23892: xx_hash3_64, BIGINT, true]\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  23894 <-> [23894: expr, DOUBLE, true]\n  |  23980 <-> [23980: mock_133, VARCHAR(65535), true]\n  |  24024 <-> [24024: mock_133, VARCHAR(65535), true]\n  |  29886 <-> [29886: cast, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1355:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29885: cast, LARGEINT, true] = [24079: mock_189, LARGEINT, false]\n  |  equal join conjunct: [23829: mock_034, DATETIME, true] = [24100: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 122, build_expr = (24079: mock_189), remote = true\n  |  - filter_id = 123, build_expr = (24100: mock_157), remote = true\n  |  output columns: 23829, 23856, 23866, 23867, 23892, 23893, 23894, 23980, 24024, 29886\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 125, probe_expr = (23829: mock_034), partition_exprs = (29886: cast,23829: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1354:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24079: mock_189, LARGEINT, false], [24100: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1352:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29885: cast, LARGEINT, true], [23829: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 139(F940)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24079: mock_189, 24100: mock_157\n  OutPut Exchange id: 1354\n\n  1353:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 24100: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 140(F938)\n\n  Input Partition: HASH_PARTITIONED: 23864: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29885: cast, 23829: mock_034\n  OutPut Exchange id: 1352\n\n  1351:Project\n  |  output columns:\n  |  23829 <-> [23829: mock_034, DATETIME, true]\n  |  23856 <-> [23856: mock_039, VARCHAR(65535), true]\n  |  23866 <-> [23866: mock_006, BIGINT, true]\n  |  23867 <-> [23867: mock_007, BIGINT, true]\n  |  23892 <-> [23892: xx_hash3_64, BIGINT, true]\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  23894 <-> [23894: expr, DOUBLE, true]\n  |  23980 <-> [23980: mock_133, VARCHAR(65535), true]\n  |  24024 <-> [24024: mock_133, VARCHAR(65535), true]\n  |  29885 <-> cast([23891: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  29886 <-> cast([23890: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1350:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23864: mock_030, LARGEINT, true] = [24027: mock_030, LARGEINT, true]\n  |  output columns: 23829, 23856, 23866, 23867, 23890, 23891, 23892, 23893, 23894, 23980, 24024\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1349:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24027: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1347:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23864: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 122, probe_expr = (CAST(23891: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(23891: xx_hash3_64 AS LARGEINT),23829: mock_034)\n     - filter_id = 123, probe_expr = (23829: mock_034), partition_exprs = (CAST(23891: xx_hash3_64 AS LARGEINT),23829: mock_034)\n     - filter_id = 124, probe_expr = (CAST(23890: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(23890: xx_hash3_64 AS LARGEINT),23829: mock_034)\n\nPLAN FRAGMENT 141(F936)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24027: mock_030\n  OutPut Exchange id: 1349\n\n  1348:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 142(F934)\n\n  Input Partition: HASH_PARTITIONED: 23862: mock_028\n  OutPut Partition: HASH_PARTITIONED: 23864: mock_030\n  OutPut Exchange id: 1347\n\n  1346:Project\n  |  output columns:\n  |  23829 <-> [23829: mock_034, DATETIME, true]\n  |  23856 <-> [23856: mock_039, VARCHAR(65535), true]\n  |  23864 <-> [23864: mock_030, LARGEINT, true]\n  |  23866 <-> [23866: mock_006, BIGINT, true]\n  |  23867 <-> [23867: mock_007, BIGINT, true]\n  |  23890 <-> [23890: xx_hash3_64, BIGINT, true]\n  |  23891 <-> [23891: xx_hash3_64, BIGINT, true]\n  |  23892 <-> [23892: xx_hash3_64, BIGINT, true]\n  |  23893 <-> [23893: xx_hash3_64, BIGINT, true]\n  |  23894 <-> [23894: expr, DOUBLE, true]\n  |  23980 <-> [23980: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1345:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23862: mock_028, LARGEINT, true] = [23955: mock_071, LARGEINT, true]\n  |  output columns: 23829, 23856, 23864, 23866, 23867, 23890, 23891, 23892, 23893, 23894, 23980\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1344:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23955: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1332:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23862: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 143(F932)\n\n  Input Partition: HASH_PARTITIONED: 23948: mock_075\n  OutPut Partition: HASH_PARTITIONED: 23955: mock_071\n  OutPut Exchange id: 1344\n\n  1343:Project\n  |  output columns:\n  |  23955 <-> [23955: mock_071, LARGEINT, true]\n  |  23980 <-> [23980: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1342:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23948: mock_075, LARGEINT, true] = [24012: mock_075, LARGEINT, true]\n  |  output columns: 23955, 23980\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1341:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [24012: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1339:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23948: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 144(F930)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 24012: mock_075\n  OutPut Exchange id: 1341\n\n  1340:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 145(F928)\n\n  Input Partition: HASH_PARTITIONED: 23950: mock_077\n  OutPut Partition: HASH_PARTITIONED: 23948: mock_075\n  OutPut Exchange id: 1339\n\n  1338:Project\n  |  output columns:\n  |  23948 <-> [23948: mock_075, LARGEINT, true]\n  |  23955 <-> [23955: mock_071, LARGEINT, true]\n  |  23980 <-> [23980: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1337:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23950: mock_077, LARGEINT, true] = [23983: mock_077, LARGEINT, true]\n  |  output columns: 23948, 23955, 23980\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1336:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23983: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1334:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23950: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 146(F926)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23983: mock_077\n  OutPut Exchange id: 1336\n\n  1335:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 147(F924)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23950: mock_077\n  OutPut Exchange id: 1334\n\n  1333:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 148(F922)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23862: mock_028\n  OutPut Exchange id: 1332\n\n  1331:SELECT\n  |  predicates: 23893: xx_hash3_64 IS NOT NULL, 23846: mock_055 + 23848: mock_042 + if(23842: mock_046 IS NULL, 0.0, 23842: mock_046) * 365.0 / if(((23844: mock_005 IS NULL) OR (23844: mock_005 < 0.0)) AND (23852: mock_054 != 'N'), NULL, 23844: mock_005) < 3.0416666666666668E10\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1330:Project\n  |  output columns:\n  |  23829 <-> [23829: mock_034, DATETIME, true]\n  |  23842 <-> [23842: mock_046, DOUBLE, true]\n  |  23844 <-> [23844: mock_005, DOUBLE, true]\n  |  23846 <-> [23846: mock_055, DOUBLE, true]\n  |  23848 <-> [23848: mock_042, DOUBLE, true]\n  |  23852 <-> [23852: mock_054, VARCHAR(65535), true]\n  |  23856 <-> [23856: mock_039, VARCHAR(65535), true]\n  |  23862 <-> [23862: mock_028, LARGEINT, true]\n  |  23864 <-> [23864: mock_030, LARGEINT, true]\n  |  23866 <-> [23866: mock_006, BIGINT, true]\n  |  23867 <-> [23867: mock_007, BIGINT, true]\n  |  23890 <-> xx_hash3_64[([23836: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23891 <-> xx_hash3_64[([23860: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23892 <-> xx_hash3_64[([23854: mock_002, VARCHAR(65535), true], [23856: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23893 <-> xx_hash3_64[([23856: mock_039, VARCHAR(65535), true], [23855: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23894 <-> [23835: mock_035, DOUBLE, true] * 0.0 * 3.0\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1329:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [23883: mock_024, BOOLEAN, true], [23880: mock_021, BOOLEAN, true], [23878: mock_018, BOOLEAN, true], [23882: mock_023, BOOLEAN, true], [23877: mock_017, BOOLEAN, true], [23881: mock_022, BOOLEAN, true], [23879: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=205.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 149(F919)\n\n  Input Partition: HASH_PARTITIONED: 29887: cast\n  OutPut Partition: HASH_PARTITIONED: 29863: cast\n  OutPut Exchange id: 1327\n\n  1326:Project\n  |  output columns:\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19678 <-> [19678: expr, BOOLEAN, true]\n  |  19679 <-> [19679: expr, BOOLEAN, true]\n  |  19681 <-> [19681: case, BIGINT, true]\n  |  19682 <-> [19682: case, BIGINT, true]\n  |  21543 <-> [21543: expr, BOOLEAN, true]\n  |  23772 <-> [23772: sum, DOUBLE, true]\n  |  29863 <-> cast([19439: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1325:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29887: cast, LARGEINT, true] = [21544: mock_191, LARGEINT, true]\n  |  output columns: 19403, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19439, 19441, 19678, 19679, 19681, 19682, 21543, 23772\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1324:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21544: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1057:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29887: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 150(F735)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21544: mock_191\n  OutPut Exchange id: 1324\n\n  1323:Project\n  |  output columns:\n  |  21544 <-> [21544: mock_191, LARGEINT, false]\n  |  23772 <-> [23772: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1322:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [21544: mock_191, LARGEINT, false] = [29888: cast, LARGEINT, true]\n  |  output columns: 21544, 23772\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1321:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29888: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1058:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 151(F916)\n\n  Input Partition: HASH_PARTITIONED: 21663: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29888: cast\n  OutPut Exchange id: 1321\n\n  1320:Project\n  |  output columns:\n  |  23772 <-> [23772: sum, DOUBLE, true]\n  |  29888 <-> cast([21663: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1319:AGGREGATE (merge finalize)\n  |  aggregate: sum[([23772: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [21663: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1318:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21663: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 152(F915)\n\n  Input Partition: HASH_PARTITIONED: 29889: cast\n  OutPut Partition: HASH_PARTITIONED: 21663: xx_hash3_64\n  OutPut Exchange id: 1318\n\n  1317:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([23770: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [21663: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1316:Project\n  |  output columns:\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  23770 <-> if[(((((21654: mock_024) AND (21651: mock_021)) AND ((21649: mock_018) AND (21653: mock_023))) AND (((21648: mock_017) AND (21652: mock_022)) AND ((21903: expr) AND (21904: expr)))) AND (((21650: mock_020) AND (22651: case / CAST(23766: coalesce AS DOUBLE) IS NOT NULL)) AND (21666: expr)), [21908: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1315:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29889: cast, LARGEINT, true] = [22654: mock_193, LARGEINT, true]\n  |  other predicates: 22651: case / CAST(23766: coalesce AS DOUBLE) IS NOT NULL\n  |  output columns: 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21663, 21666, 21903, 21904, 21908, 22651, 23766\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1314:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22654: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1182:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29889: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 153(F824)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22654: mock_193\n  OutPut Exchange id: 1314\n\n  1313:Project\n  |  output columns:\n  |  22654 <-> [22654: mock_193, LARGEINT, false]\n  |  23766 <-> coalesce[([23765: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1312:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [22654: mock_193, LARGEINT, false] = [29890: cast, LARGEINT, true]\n  |  output columns: 22654, 23765\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1311:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29890: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1183:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 154(F912)\n\n  Input Partition: HASH_PARTITIONED: 22774: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29890: cast\n  OutPut Exchange id: 1311\n\n  1310:Project\n  |  output columns:\n  |  23765 <-> [23765: count, BIGINT, false]\n  |  29890 <-> cast([22774: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1309:AGGREGATE (merge finalize)\n  |  aggregate: count[([23765: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [22774: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1308:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22774: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 155(F911)\n\n  Input Partition: HASH_PARTITIONED: 29891: cast\n  OutPut Partition: HASH_PARTITIONED: 22774: xx_hash3_64\n  OutPut Exchange id: 1308\n\n  1307:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([23764: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [22774: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1306:Project\n  |  output columns:\n  |  22774 <-> [22774: xx_hash3_64, BIGINT, true]\n  |  23764 <-> if[(((((22764: mock_024) AND (22761: mock_021)) AND ((22759: mock_018) AND (22763: mock_023))) AND (((22758: mock_017) AND (22762: mock_022)) AND ((23013: expr) AND (23014: expr)))) AND (22760: mock_020), if[(if[(CASE WHEN (30142: expr) AND (30143: coalesce = 1) THEN 23016: case WHEN (30142: expr) AND (30143: coalesce != 1) THEN 0 ELSE 23017: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [22738: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30142 <-> [23388: sum, DOUBLE, true] > 0.0\n  |  30143 <-> coalesce[([23016: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  1305:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29891: cast, LARGEINT, true] = [23389: mock_193, LARGEINT, true]\n  |  output columns: 22738, 22758, 22759, 22760, 22761, 22762, 22763, 22764, 22774, 23013, 23014, 23016, 23017, 23388\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1304:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23389: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1262:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29891: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 156(F882)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23389: mock_193\n  OutPut Exchange id: 1304\n\n  1303:Project\n  |  output columns:\n  |  23389 <-> [23389: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1302:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [23389: mock_193, LARGEINT, false] = [29892: cast, LARGEINT, true]\n  |  output columns: 23389\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1301:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29892: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1263:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 157(F908)\n\n  Input Partition: HASH_PARTITIONED: 23509: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29892: cast\n  OutPut Exchange id: 1301\n\n  1300:Project\n  |  output columns:\n  |  29892 <-> cast([23509: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1299:AGGREGATE (merge finalize)\n  |  group by: [23509: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1298:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23509: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 158(F907)\n\n  Input Partition: HASH_PARTITIONED: 29893: cast, 23445: mock_034\n  OutPut Partition: HASH_PARTITIONED: 23509: xx_hash3_64\n  OutPut Exchange id: 1298\n\n  1297:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [23509: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1296:Project\n  |  output columns:\n  |  23509 <-> [23509: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1295:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29893: cast, LARGEINT, true] = [23695: mock_189, LARGEINT, false]\n  |  equal join conjunct: [23445: mock_034, DATETIME, true] = [23716: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 120, build_expr = (23695: mock_189), remote = true\n  |  - filter_id = 121, build_expr = (23716: mock_157), remote = true\n  |  output columns: 23509\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1294:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23695: mock_189, LARGEINT, false], [23716: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1292:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29893: cast, LARGEINT, true], [23445: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 159(F905)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23695: mock_189, 23716: mock_157\n  OutPut Exchange id: 1294\n\n  1293:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 23716: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 160(F903)\n\n  Input Partition: HASH_PARTITIONED: 29894: cast, 23445: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29893: cast, 23445: mock_034\n  OutPut Exchange id: 1292\n\n  1291:Project\n  |  output columns:\n  |  23445 <-> [23445: mock_034, DATETIME, true]\n  |  23509 <-> [23509: xx_hash3_64, BIGINT, true]\n  |  29893 <-> cast([23507: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1290:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29894: cast, LARGEINT, true] = [23644: mock_177, LARGEINT, false]\n  |  equal join conjunct: [23445: mock_034, DATETIME, true] = [23665: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 118, build_expr = (23644: mock_177), remote = true\n  |  - filter_id = 119, build_expr = (23665: mock_157), remote = true\n  |  output columns: 23445, 23507, 23509\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 121, probe_expr = (23445: mock_034), partition_exprs = (CAST(23507: xx_hash3_64 AS LARGEINT),23445: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1289:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23644: mock_177, LARGEINT, false], [23665: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1287:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29894: cast, LARGEINT, true], [23445: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 120, probe_expr = (CAST(23507: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(23507: xx_hash3_64 AS LARGEINT),23445: mock_034)\n\nPLAN FRAGMENT 161(F901)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23644: mock_177, 23665: mock_157\n  OutPut Exchange id: 1289\n\n  1288:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 23665: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 162(F899)\n\n  Input Partition: HASH_PARTITIONED: 23480: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29894: cast, 23445: mock_034\n  OutPut Exchange id: 1287\n\n  1286:Project\n  |  output columns:\n  |  23445 <-> [23445: mock_034, DATETIME, true]\n  |  23507 <-> [23507: xx_hash3_64, BIGINT, true]\n  |  23509 <-> [23509: xx_hash3_64, BIGINT, true]\n  |  29894 <-> cast([23506: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1285:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23480: mock_030, LARGEINT, true] = [23643: mock_030, LARGEINT, true]\n  |  output columns: 23445, 23506, 23507, 23509\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1284:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23643: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1282:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23480: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 118, probe_expr = (CAST(23506: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(23506: xx_hash3_64 AS LARGEINT),23445: mock_034)\n     - filter_id = 119, probe_expr = (23445: mock_034), partition_exprs = (CAST(23506: xx_hash3_64 AS LARGEINT),23445: mock_034)\n\nPLAN FRAGMENT 163(F897)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23643: mock_030\n  OutPut Exchange id: 1284\n\n  1283:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 164(F895)\n\n  Input Partition: HASH_PARTITIONED: 23478: mock_028\n  OutPut Partition: HASH_PARTITIONED: 23480: mock_030\n  OutPut Exchange id: 1282\n\n  1281:Project\n  |  output columns:\n  |  23445 <-> [23445: mock_034, DATETIME, true]\n  |  23480 <-> [23480: mock_030, LARGEINT, true]\n  |  23506 <-> [23506: xx_hash3_64, BIGINT, true]\n  |  23507 <-> [23507: xx_hash3_64, BIGINT, true]\n  |  23509 <-> [23509: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1280:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23478: mock_028, LARGEINT, true] = [23571: mock_071, LARGEINT, true]\n  |  output columns: 23445, 23480, 23506, 23507, 23509\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1279:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23571: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1267:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23478: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 165(F893)\n\n  Input Partition: HASH_PARTITIONED: 23564: mock_075\n  OutPut Partition: HASH_PARTITIONED: 23571: mock_071\n  OutPut Exchange id: 1279\n\n  1278:Project\n  |  output columns:\n  |  23571 <-> [23571: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1277:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23564: mock_075, LARGEINT, true] = [23628: mock_075, LARGEINT, true]\n  |  output columns: 23571\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1276:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23628: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1274:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23564: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 166(F891)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23628: mock_075\n  OutPut Exchange id: 1276\n\n  1275:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 167(F889)\n\n  Input Partition: HASH_PARTITIONED: 23566: mock_077\n  OutPut Partition: HASH_PARTITIONED: 23564: mock_075\n  OutPut Exchange id: 1274\n\n  1273:Project\n  |  output columns:\n  |  23564 <-> [23564: mock_075, LARGEINT, true]\n  |  23571 <-> [23571: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1272:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23566: mock_077, LARGEINT, true] = [23599: mock_077, LARGEINT, true]\n  |  output columns: 23564, 23571\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1271:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23599: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1269:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23566: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 168(F887)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23599: mock_077\n  OutPut Exchange id: 1271\n\n  1270:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 169(F885)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23566: mock_077\n  OutPut Exchange id: 1269\n\n  1268:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 170(F883)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23478: mock_028\n  OutPut Exchange id: 1267\n\n  1266:SELECT\n  |  predicates: 23509: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1265:Project\n  |  output columns:\n  |  23445 <-> [23445: mock_034, DATETIME, true]\n  |  23478 <-> [23478: mock_028, LARGEINT, true]\n  |  23480 <-> [23480: mock_030, LARGEINT, true]\n  |  23506 <-> xx_hash3_64[([23452: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23507 <-> xx_hash3_64[([23476: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23509 <-> xx_hash3_64[([23472: mock_039, VARCHAR(65535), true], [23471: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1264:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [23499: mock_024, BOOLEAN, true], [23496: mock_021, BOOLEAN, true], [23494: mock_018, BOOLEAN, true], [23498: mock_023, BOOLEAN, true], [23493: mock_017, BOOLEAN, true], [23497: mock_022, BOOLEAN, true], [23495: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=110.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 171(F880)\n\n  Input Partition: HASH_PARTITIONED: 29895: cast\n  OutPut Partition: HASH_PARTITIONED: 29891: cast\n  OutPut Exchange id: 1262\n\n  1261:Project\n  |  output columns:\n  |  22738 <-> [22738: id, VARCHAR(65535), true]\n  |  22758 <-> [22758: mock_017, BOOLEAN, true]\n  |  22759 <-> [22759: mock_018, BOOLEAN, true]\n  |  22760 <-> [22760: mock_020, BOOLEAN, true]\n  |  22761 <-> [22761: mock_021, BOOLEAN, true]\n  |  22762 <-> [22762: mock_022, BOOLEAN, true]\n  |  22763 <-> [22763: mock_023, BOOLEAN, true]\n  |  22764 <-> [22764: mock_024, BOOLEAN, true]\n  |  22774 <-> [22774: xx_hash3_64, BIGINT, true]\n  |  23013 <-> [23013: expr, BOOLEAN, true]\n  |  23014 <-> [23014: expr, BOOLEAN, true]\n  |  23016 <-> [23016: case, BIGINT, true]\n  |  23017 <-> [23017: case, BIGINT, true]\n  |  23388 <-> [23388: sum, DOUBLE, true]\n  |  29891 <-> cast([22774: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1260:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29895: cast, LARGEINT, true] = [23020: mock_191, LARGEINT, true]\n  |  output columns: 22738, 22758, 22759, 22760, 22761, 22762, 22763, 22764, 22774, 23013, 23014, 23016, 23017, 23388\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1259:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23020: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1217:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29895: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 172(F851)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23020: mock_191\n  OutPut Exchange id: 1259\n\n  1258:Project\n  |  output columns:\n  |  23020 <-> [23020: mock_191, LARGEINT, false]\n  |  23388 <-> [23388: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1257:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [23020: mock_191, LARGEINT, false] = [29896: cast, LARGEINT, true]\n  |  output columns: 23020, 23388\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1256:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29896: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1218:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 173(F877)\n\n  Input Partition: HASH_PARTITIONED: 23139: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29896: cast\n  OutPut Exchange id: 1256\n\n  1255:Project\n  |  output columns:\n  |  23388 <-> [23388: sum, DOUBLE, true]\n  |  29896 <-> cast([23139: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1254:AGGREGATE (merge finalize)\n  |  aggregate: sum[([23388: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [23139: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1253:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23139: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 174(F876)\n\n  Input Partition: HASH_PARTITIONED: 29897: cast, 23076: mock_034\n  OutPut Partition: HASH_PARTITIONED: 23139: xx_hash3_64\n  OutPut Exchange id: 1253\n\n  1252:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([23386: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [23139: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1251:Project\n  |  output columns:\n  |  23139 <-> [23139: xx_hash3_64, BIGINT, true]\n  |  23386 <-> if[(((((23130: mock_024) AND (23127: mock_021)) AND ((23125: mock_018) AND (23129: mock_023))) AND (((23124: mock_017) AND (23128: mock_022)) AND ((23076: mock_034 = 23296: mock_157) AND (23076: mock_034 = 23347: mock_157)))) AND (23126: mock_020), if[(if[(if(23227: mock_133 = 23271: mock_133, 23103: mock_039, NULL) IS NULL, NULL, [23114: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [23095: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1250:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29897: cast, LARGEINT, true] = [23326: mock_189, LARGEINT, false]\n  |  equal join conjunct: [23076: mock_034, DATETIME, true] = [23347: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 116, build_expr = (23326: mock_189), remote = true\n  |  - filter_id = 117, build_expr = (23347: mock_157), remote = true\n  |  output columns: 23076, 23095, 23103, 23114, 23124, 23125, 23126, 23127, 23128, 23129, 23130, 23139, 23227, 23271, 23296, 23347\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1249:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23326: mock_189, LARGEINT, false], [23347: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1247:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29897: cast, LARGEINT, true], [23076: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 175(F874)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23326: mock_189, 23347: mock_157\n  OutPut Exchange id: 1249\n\n  1248:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 23347: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 176(F872)\n\n  Input Partition: HASH_PARTITIONED: 29898: cast, 23076: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29897: cast, 23076: mock_034\n  OutPut Exchange id: 1247\n\n  1246:Project\n  |  output columns:\n  |  23076 <-> [23076: mock_034, DATETIME, true]\n  |  23095 <-> [23095: mock_042, DOUBLE, true]\n  |  23103 <-> [23103: mock_039, VARCHAR(65535), true]\n  |  23114 <-> [23114: mock_007, BIGINT, true]\n  |  23124 <-> [23124: mock_017, BOOLEAN, true]\n  |  23125 <-> [23125: mock_018, BOOLEAN, true]\n  |  23126 <-> [23126: mock_020, BOOLEAN, true]\n  |  23127 <-> [23127: mock_021, BOOLEAN, true]\n  |  23128 <-> [23128: mock_022, BOOLEAN, true]\n  |  23129 <-> [23129: mock_023, BOOLEAN, true]\n  |  23130 <-> [23130: mock_024, BOOLEAN, true]\n  |  23139 <-> [23139: xx_hash3_64, BIGINT, true]\n  |  23227 <-> [23227: mock_133, VARCHAR(65535), true]\n  |  23271 <-> [23271: mock_133, VARCHAR(65535), true]\n  |  23296 <-> [23296: mock_157, DATETIME, true]\n  |  29897 <-> cast([23138: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1245:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29898: cast, LARGEINT, true] = [23275: mock_177, LARGEINT, false]\n  |  equal join conjunct: [23076: mock_034, DATETIME, true] = [23296: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 114, build_expr = (23275: mock_177), remote = true\n  |  - filter_id = 115, build_expr = (23296: mock_157), remote = true\n  |  output columns: 23076, 23095, 23103, 23114, 23124, 23125, 23126, 23127, 23128, 23129, 23130, 23138, 23139, 23227, 23271, 23296\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 117, probe_expr = (23076: mock_034), partition_exprs = (CAST(23138: xx_hash3_64 AS LARGEINT),23076: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1244:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23275: mock_177, LARGEINT, false], [23296: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1242:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29898: cast, LARGEINT, true], [23076: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 116, probe_expr = (CAST(23138: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(23138: xx_hash3_64 AS LARGEINT),23076: mock_034)\n\nPLAN FRAGMENT 177(F870)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23275: mock_177, 23296: mock_157\n  OutPut Exchange id: 1244\n\n  1243:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 23296: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 178(F868)\n\n  Input Partition: HASH_PARTITIONED: 23111: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29898: cast, 23076: mock_034\n  OutPut Exchange id: 1242\n\n  1241:Project\n  |  output columns:\n  |  23076 <-> [23076: mock_034, DATETIME, true]\n  |  23095 <-> [23095: mock_042, DOUBLE, true]\n  |  23103 <-> [23103: mock_039, VARCHAR(65535), true]\n  |  23114 <-> [23114: mock_007, BIGINT, true]\n  |  23124 <-> [23124: mock_017, BOOLEAN, true]\n  |  23125 <-> [23125: mock_018, BOOLEAN, true]\n  |  23126 <-> [23126: mock_020, BOOLEAN, true]\n  |  23127 <-> [23127: mock_021, BOOLEAN, true]\n  |  23128 <-> [23128: mock_022, BOOLEAN, true]\n  |  23129 <-> [23129: mock_023, BOOLEAN, true]\n  |  23130 <-> [23130: mock_024, BOOLEAN, true]\n  |  23138 <-> [23138: xx_hash3_64, BIGINT, true]\n  |  23139 <-> [23139: xx_hash3_64, BIGINT, true]\n  |  23227 <-> [23227: mock_133, VARCHAR(65535), true]\n  |  23271 <-> [23271: mock_133, VARCHAR(65535), true]\n  |  29898 <-> cast([23137: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1240:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23111: mock_030, LARGEINT, true] = [23274: mock_030, LARGEINT, true]\n  |  output columns: 23076, 23095, 23103, 23114, 23124, 23125, 23126, 23127, 23128, 23129, 23130, 23137, 23138, 23139, 23227, 23271\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1239:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23274: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1237:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23111: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 114, probe_expr = (CAST(23137: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(23137: xx_hash3_64 AS LARGEINT),23076: mock_034)\n     - filter_id = 115, probe_expr = (23076: mock_034), partition_exprs = (CAST(23137: xx_hash3_64 AS LARGEINT),23076: mock_034)\n\nPLAN FRAGMENT 179(F866)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23274: mock_030\n  OutPut Exchange id: 1239\n\n  1238:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 180(F864)\n\n  Input Partition: HASH_PARTITIONED: 23109: mock_028\n  OutPut Partition: HASH_PARTITIONED: 23111: mock_030\n  OutPut Exchange id: 1237\n\n  1236:Project\n  |  output columns:\n  |  23076 <-> [23076: mock_034, DATETIME, true]\n  |  23095 <-> [23095: mock_042, DOUBLE, true]\n  |  23103 <-> [23103: mock_039, VARCHAR(65535), true]\n  |  23111 <-> [23111: mock_030, LARGEINT, true]\n  |  23114 <-> [23114: mock_007, BIGINT, true]\n  |  23124 <-> [23124: mock_017, BOOLEAN, true]\n  |  23125 <-> [23125: mock_018, BOOLEAN, true]\n  |  23126 <-> [23126: mock_020, BOOLEAN, true]\n  |  23127 <-> [23127: mock_021, BOOLEAN, true]\n  |  23128 <-> [23128: mock_022, BOOLEAN, true]\n  |  23129 <-> [23129: mock_023, BOOLEAN, true]\n  |  23130 <-> [23130: mock_024, BOOLEAN, true]\n  |  23137 <-> [23137: xx_hash3_64, BIGINT, true]\n  |  23138 <-> [23138: xx_hash3_64, BIGINT, true]\n  |  23139 <-> [23139: xx_hash3_64, BIGINT, true]\n  |  23227 <-> [23227: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1235:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23109: mock_028, LARGEINT, true] = [23202: mock_071, LARGEINT, true]\n  |  output columns: 23076, 23095, 23103, 23111, 23114, 23124, 23125, 23126, 23127, 23128, 23129, 23130, 23137, 23138, 23139, 23227\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1234:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23202: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1222:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23109: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 181(F862)\n\n  Input Partition: HASH_PARTITIONED: 23195: mock_075\n  OutPut Partition: HASH_PARTITIONED: 23202: mock_071\n  OutPut Exchange id: 1234\n\n  1233:Project\n  |  output columns:\n  |  23202 <-> [23202: mock_071, LARGEINT, true]\n  |  23227 <-> [23227: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1232:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23195: mock_075, LARGEINT, true] = [23259: mock_075, LARGEINT, true]\n  |  output columns: 23202, 23227\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1231:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23259: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1229:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23195: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 182(F860)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23259: mock_075\n  OutPut Exchange id: 1231\n\n  1230:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 183(F858)\n\n  Input Partition: HASH_PARTITIONED: 23197: mock_077\n  OutPut Partition: HASH_PARTITIONED: 23195: mock_075\n  OutPut Exchange id: 1229\n\n  1228:Project\n  |  output columns:\n  |  23195 <-> [23195: mock_075, LARGEINT, true]\n  |  23202 <-> [23202: mock_071, LARGEINT, true]\n  |  23227 <-> [23227: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1227:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [23197: mock_077, LARGEINT, true] = [23230: mock_077, LARGEINT, true]\n  |  output columns: 23195, 23202, 23227\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1226:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [23230: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1224:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [23197: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 184(F856)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23230: mock_077\n  OutPut Exchange id: 1226\n\n  1225:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 185(F854)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23197: mock_077\n  OutPut Exchange id: 1224\n\n  1223:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 186(F852)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 23109: mock_028\n  OutPut Exchange id: 1222\n\n  1221:SELECT\n  |  predicates: 23139: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1220:Project\n  |  output columns:\n  |  23076 <-> [23076: mock_034, DATETIME, true]\n  |  23095 <-> [23095: mock_042, DOUBLE, true]\n  |  23103 <-> [23103: mock_039, VARCHAR(65535), true]\n  |  23109 <-> [23109: mock_028, LARGEINT, true]\n  |  23111 <-> [23111: mock_030, LARGEINT, true]\n  |  23114 <-> [23114: mock_007, BIGINT, true]\n  |  23124 <-> [23124: mock_017, BOOLEAN, true]\n  |  23125 <-> [23125: mock_018, BOOLEAN, true]\n  |  23126 <-> [23126: mock_020, BOOLEAN, true]\n  |  23127 <-> [23127: mock_021, BOOLEAN, true]\n  |  23128 <-> [23128: mock_022, BOOLEAN, true]\n  |  23129 <-> [23129: mock_023, BOOLEAN, true]\n  |  23130 <-> [23130: mock_024, BOOLEAN, true]\n  |  23137 <-> xx_hash3_64[([23083: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23138 <-> xx_hash3_64[([23107: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  23139 <-> xx_hash3_64[([23101: mock_002, VARCHAR(65535), true], [23103: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1219:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [23130: mock_024, BOOLEAN, true], [23127: mock_021, BOOLEAN, true], [23125: mock_018, BOOLEAN, true], [23129: mock_023, BOOLEAN, true], [23124: mock_017, BOOLEAN, true], [23128: mock_022, BOOLEAN, true], [23126: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 187(F849)\n\n  Input Partition: HASH_PARTITIONED: 29899: cast, 22710: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29895: cast\n  OutPut Exchange id: 1217\n\n  1216:Project\n  |  output columns:\n  |  22738 <-> [22738: id, VARCHAR(65535), true]\n  |  22758 <-> [22758: mock_017, BOOLEAN, true]\n  |  22759 <-> [22759: mock_018, BOOLEAN, true]\n  |  22760 <-> [22760: mock_020, BOOLEAN, true]\n  |  22761 <-> [22761: mock_021, BOOLEAN, true]\n  |  22762 <-> [22762: mock_022, BOOLEAN, true]\n  |  22763 <-> [22763: mock_023, BOOLEAN, true]\n  |  22764 <-> [22764: mock_024, BOOLEAN, true]\n  |  22774 <-> [22774: xx_hash3_64, BIGINT, true]\n  |  23013 <-> [22710: mock_034, DATETIME, true] = [22930: mock_157, DATETIME, true]\n  |  23014 <-> [22710: mock_034, DATETIME, true] = [22981: mock_157, DATETIME, true]\n  |  23016 <-> if[(if(22861: mock_133 = 22905: mock_133, 22737: mock_039, NULL) IS NULL, NULL, [22748: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  23017 <-> if[(if(22861: mock_133 != 22905: mock_133, 22737: mock_039, NULL) IS NULL, NULL, [22747: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29895 <-> cast([22773: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1215:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29899: cast, LARGEINT, true] = [22960: mock_189, LARGEINT, false]\n  |  equal join conjunct: [22710: mock_034, DATETIME, true] = [22981: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 112, build_expr = (22960: mock_189), remote = true\n  |  - filter_id = 113, build_expr = (22981: mock_157), remote = true\n  |  output columns: 22710, 22737, 22738, 22747, 22748, 22758, 22759, 22760, 22761, 22762, 22763, 22764, 22773, 22774, 22861, 22905, 22930, 22981\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1214:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22960: mock_189, LARGEINT, false], [22981: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1212:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29899: cast, LARGEINT, true], [22710: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 188(F847)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22960: mock_189, 22981: mock_157\n  OutPut Exchange id: 1214\n\n  1213:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 22981: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 189(F845)\n\n  Input Partition: HASH_PARTITIONED: 29900: cast, 22710: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29899: cast, 22710: mock_034\n  OutPut Exchange id: 1212\n\n  1211:Project\n  |  output columns:\n  |  22710 <-> [22710: mock_034, DATETIME, true]\n  |  22737 <-> [22737: mock_039, VARCHAR(65535), true]\n  |  22738 <-> [22738: id, VARCHAR(65535), true]\n  |  22747 <-> [22747: mock_006, BIGINT, true]\n  |  22748 <-> [22748: mock_007, BIGINT, true]\n  |  22758 <-> [22758: mock_017, BOOLEAN, true]\n  |  22759 <-> [22759: mock_018, BOOLEAN, true]\n  |  22760 <-> [22760: mock_020, BOOLEAN, true]\n  |  22761 <-> [22761: mock_021, BOOLEAN, true]\n  |  22762 <-> [22762: mock_022, BOOLEAN, true]\n  |  22763 <-> [22763: mock_023, BOOLEAN, true]\n  |  22764 <-> [22764: mock_024, BOOLEAN, true]\n  |  22773 <-> [22773: xx_hash3_64, BIGINT, true]\n  |  22774 <-> [22774: xx_hash3_64, BIGINT, true]\n  |  22861 <-> [22861: mock_133, VARCHAR(65535), true]\n  |  22905 <-> [22905: mock_133, VARCHAR(65535), true]\n  |  22930 <-> [22930: mock_157, DATETIME, true]\n  |  29899 <-> cast([22772: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1210:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29900: cast, LARGEINT, true] = [22909: mock_177, LARGEINT, false]\n  |  equal join conjunct: [22710: mock_034, DATETIME, true] = [22930: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 110, build_expr = (22909: mock_177), remote = true\n  |  - filter_id = 111, build_expr = (22930: mock_157), remote = true\n  |  output columns: 22710, 22737, 22738, 22747, 22748, 22758, 22759, 22760, 22761, 22762, 22763, 22764, 22772, 22773, 22774, 22861, 22905, 22930\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 113, probe_expr = (22710: mock_034), partition_exprs = (CAST(22772: xx_hash3_64 AS LARGEINT),22710: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1209:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22909: mock_177, LARGEINT, false], [22930: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1207:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29900: cast, LARGEINT, true], [22710: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 112, probe_expr = (CAST(22772: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(22772: xx_hash3_64 AS LARGEINT),22710: mock_034)\n\nPLAN FRAGMENT 190(F843)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22909: mock_177, 22930: mock_157\n  OutPut Exchange id: 1209\n\n  1208:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 22930: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 191(F841)\n\n  Input Partition: HASH_PARTITIONED: 22745: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29900: cast, 22710: mock_034\n  OutPut Exchange id: 1207\n\n  1206:Project\n  |  output columns:\n  |  22710 <-> [22710: mock_034, DATETIME, true]\n  |  22737 <-> [22737: mock_039, VARCHAR(65535), true]\n  |  22738 <-> [22738: id, VARCHAR(65535), true]\n  |  22747 <-> [22747: mock_006, BIGINT, true]\n  |  22748 <-> [22748: mock_007, BIGINT, true]\n  |  22758 <-> [22758: mock_017, BOOLEAN, true]\n  |  22759 <-> [22759: mock_018, BOOLEAN, true]\n  |  22760 <-> [22760: mock_020, BOOLEAN, true]\n  |  22761 <-> [22761: mock_021, BOOLEAN, true]\n  |  22762 <-> [22762: mock_022, BOOLEAN, true]\n  |  22763 <-> [22763: mock_023, BOOLEAN, true]\n  |  22764 <-> [22764: mock_024, BOOLEAN, true]\n  |  22772 <-> [22772: xx_hash3_64, BIGINT, true]\n  |  22773 <-> [22773: xx_hash3_64, BIGINT, true]\n  |  22774 <-> [22774: xx_hash3_64, BIGINT, true]\n  |  22861 <-> [22861: mock_133, VARCHAR(65535), true]\n  |  22905 <-> [22905: mock_133, VARCHAR(65535), true]\n  |  29900 <-> cast([22771: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1205:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22745: mock_030, LARGEINT, true] = [22908: mock_030, LARGEINT, true]\n  |  output columns: 22710, 22737, 22738, 22747, 22748, 22758, 22759, 22760, 22761, 22762, 22763, 22764, 22771, 22772, 22773, 22774, 22861, 22905\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1204:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22908: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1202:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22745: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 110, probe_expr = (CAST(22771: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(22771: xx_hash3_64 AS LARGEINT),22710: mock_034)\n     - filter_id = 111, probe_expr = (22710: mock_034), partition_exprs = (CAST(22771: xx_hash3_64 AS LARGEINT),22710: mock_034)\n\nPLAN FRAGMENT 192(F839)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22908: mock_030\n  OutPut Exchange id: 1204\n\n  1203:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 193(F837)\n\n  Input Partition: HASH_PARTITIONED: 22743: mock_028\n  OutPut Partition: HASH_PARTITIONED: 22745: mock_030\n  OutPut Exchange id: 1202\n\n  1201:Project\n  |  output columns:\n  |  22710 <-> [22710: mock_034, DATETIME, true]\n  |  22737 <-> [22737: mock_039, VARCHAR(65535), true]\n  |  22738 <-> [22738: id, VARCHAR(65535), true]\n  |  22745 <-> [22745: mock_030, LARGEINT, true]\n  |  22747 <-> [22747: mock_006, BIGINT, true]\n  |  22748 <-> [22748: mock_007, BIGINT, true]\n  |  22758 <-> [22758: mock_017, BOOLEAN, true]\n  |  22759 <-> [22759: mock_018, BOOLEAN, true]\n  |  22760 <-> [22760: mock_020, BOOLEAN, true]\n  |  22761 <-> [22761: mock_021, BOOLEAN, true]\n  |  22762 <-> [22762: mock_022, BOOLEAN, true]\n  |  22763 <-> [22763: mock_023, BOOLEAN, true]\n  |  22764 <-> [22764: mock_024, BOOLEAN, true]\n  |  22771 <-> [22771: xx_hash3_64, BIGINT, true]\n  |  22772 <-> [22772: xx_hash3_64, BIGINT, true]\n  |  22773 <-> [22773: xx_hash3_64, BIGINT, true]\n  |  22774 <-> [22774: xx_hash3_64, BIGINT, true]\n  |  22861 <-> [22861: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1200:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22743: mock_028, LARGEINT, true] = [22836: mock_071, LARGEINT, true]\n  |  output columns: 22710, 22737, 22738, 22745, 22747, 22748, 22758, 22759, 22760, 22761, 22762, 22763, 22764, 22771, 22772, 22773, 22774, 22861\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1199:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22836: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1187:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22743: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 194(F835)\n\n  Input Partition: HASH_PARTITIONED: 22829: mock_075\n  OutPut Partition: HASH_PARTITIONED: 22836: mock_071\n  OutPut Exchange id: 1199\n\n  1198:Project\n  |  output columns:\n  |  22836 <-> [22836: mock_071, LARGEINT, true]\n  |  22861 <-> [22861: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1197:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22829: mock_075, LARGEINT, true] = [22893: mock_075, LARGEINT, true]\n  |  output columns: 22836, 22861\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1196:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22893: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1194:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22829: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 195(F833)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22893: mock_075\n  OutPut Exchange id: 1196\n\n  1195:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 196(F831)\n\n  Input Partition: HASH_PARTITIONED: 22831: mock_077\n  OutPut Partition: HASH_PARTITIONED: 22829: mock_075\n  OutPut Exchange id: 1194\n\n  1193:Project\n  |  output columns:\n  |  22829 <-> [22829: mock_075, LARGEINT, true]\n  |  22836 <-> [22836: mock_071, LARGEINT, true]\n  |  22861 <-> [22861: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1192:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22831: mock_077, LARGEINT, true] = [22864: mock_077, LARGEINT, true]\n  |  output columns: 22829, 22836, 22861\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1191:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22864: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1189:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22831: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 197(F829)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22864: mock_077\n  OutPut Exchange id: 1191\n\n  1190:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 198(F827)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22831: mock_077\n  OutPut Exchange id: 1189\n\n  1188:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 199(F825)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22743: mock_028\n  OutPut Exchange id: 1187\n\n  1186:SELECT\n  |  predicates: 22774: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1185:Project\n  |  output columns:\n  |  22710 <-> [22710: mock_034, DATETIME, true]\n  |  22737 <-> [22737: mock_039, VARCHAR(65535), true]\n  |  22738 <-> [22738: id, VARCHAR(65535), true]\n  |  22743 <-> [22743: mock_028, LARGEINT, true]\n  |  22745 <-> [22745: mock_030, LARGEINT, true]\n  |  22747 <-> [22747: mock_006, BIGINT, true]\n  |  22748 <-> [22748: mock_007, BIGINT, true]\n  |  22758 <-> [22758: mock_017, BOOLEAN, true]\n  |  22759 <-> [22759: mock_018, BOOLEAN, true]\n  |  22760 <-> [22760: mock_020, BOOLEAN, true]\n  |  22761 <-> [22761: mock_021, BOOLEAN, true]\n  |  22762 <-> [22762: mock_022, BOOLEAN, true]\n  |  22763 <-> [22763: mock_023, BOOLEAN, true]\n  |  22764 <-> [22764: mock_024, BOOLEAN, true]\n  |  22771 <-> xx_hash3_64[([22717: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22772 <-> xx_hash3_64[([22741: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22773 <-> xx_hash3_64[([22735: mock_002, VARCHAR(65535), true], [22737: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22774 <-> xx_hash3_64[([22737: mock_039, VARCHAR(65535), true], [22736: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1184:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [22764: mock_024, BOOLEAN, true], [22761: mock_021, BOOLEAN, true], [22759: mock_018, BOOLEAN, true], [22763: mock_023, BOOLEAN, true], [22758: mock_017, BOOLEAN, true], [22762: mock_022, BOOLEAN, true], [22760: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=148.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 200(F822)\n\n  Input Partition: HASH_PARTITIONED: 29902: cast\n  OutPut Partition: HASH_PARTITIONED: 29889: cast\n  OutPut Exchange id: 1182\n\n  1181:Project\n  |  output columns:\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  21666 <-> [21666: expr, BOOLEAN, true]\n  |  21903 <-> [21903: expr, BOOLEAN, true]\n  |  21904 <-> [21904: expr, BOOLEAN, true]\n  |  21908 <-> [21908: case, DOUBLE, true]\n  |  22651 <-> if[([30127: case, DOUBLE, true] > [21665: expr, DOUBLE, true], [30127: case, DOUBLE, true] * cast(if[(CASE WHEN 30125: expr THEN 21906: case WHEN (30121: expr) AND (30122: coalesce != 1) THEN 0 ELSE 21907: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29889 <-> cast([21664: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30121 <-> [22278: sum, DOUBLE, true] > 0.0\n  |  30122 <-> coalesce[([21906: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30123 <-> [30122: coalesce, BIGINT, true] = 1\n  |  30124 <-> [30122: coalesce, BIGINT, true] = 0\n  |  30125 <-> (30121: expr) AND (30123: expr)\n  |  30126 <-> (30121: expr) AND (30124: expr)\n  |  30127 <-> CASE WHEN 30125: expr THEN 22647: sum WHEN 30126: expr THEN 0.0 ELSE 22648: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1180:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29901: cast, LARGEINT, true] = [22279: mock_193, LARGEINT, true]\n  |  output columns: 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21663, 21664, 21665, 21666, 21903, 21904, 21906, 21907, 21908, 22278, 22647, 22648\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1179:Project\n  |    |  output columns:\n  |    |  22279 <-> [22279: mock_193, LARGEINT, false]\n  |    |  22647 <-> [22647: sum, DOUBLE, true]\n  |    |  22648 <-> [22648: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    1178:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29902: cast, LARGEINT, true] = [22279: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 109, build_expr = (22279: mock_193), remote = true\n  |    |  output columns: 22279, 22647, 22648\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----1177:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [22279: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    1175:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29902: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1137:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29901: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 201(F820)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22279: mock_193\n  OutPut Exchange id: 1177\n\n  1176:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 202(F818)\n\n  Input Partition: HASH_PARTITIONED: 22399: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29902: cast\n  OutPut Exchange id: 1175\n\n  1174:Project\n  |  output columns:\n  |  22647 <-> [22647: sum, DOUBLE, true]\n  |  22648 <-> [22648: sum, DOUBLE, true]\n  |  29902 <-> cast([22399: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1173:AGGREGATE (merge finalize)\n  |  aggregate: sum[([22647: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([22648: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [22399: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 109, probe_expr = (CAST(22399: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1172:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22399: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 203(F817)\n\n  Input Partition: HASH_PARTITIONED: 29903: cast, 22335: mock_034\n  OutPut Partition: HASH_PARTITIONED: 22399: xx_hash3_64\n  OutPut Exchange id: 1172\n\n  1171:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([22645: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([22646: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [22399: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1170:Project\n  |  output columns:\n  |  22399 <-> [22399: xx_hash3_64, BIGINT, true]\n  |  22645 <-> if[([30141: expr, BOOLEAN, true], if[(if[(if(22486: mock_133 = 22530: mock_133, 22362: mock_039, NULL) IS NULL, NULL, [22373: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [22354: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  22646 <-> if[([30141: expr, BOOLEAN, true], if[(if[(if(22486: mock_133 != 22530: mock_133, 22362: mock_039, NULL) IS NULL, NULL, [22372: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [22354: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30132 <-> (22389: mock_024) AND (22386: mock_021)\n  |  30133 <-> (22384: mock_018) AND (22388: mock_023)\n  |  30134 <-> (22383: mock_017) AND (22387: mock_022)\n  |  30135 <-> [22335: mock_034, DATETIME, true] = [22555: mock_157, DATETIME, true]\n  |  30136 <-> [22335: mock_034, DATETIME, true] = [22606: mock_157, DATETIME, true]\n  |  30137 <-> (30132: expr) AND (30133: expr)\n  |  30138 <-> (30135: expr) AND (30136: expr)\n  |  30139 <-> (30134: expr) AND (30138: expr)\n  |  30140 <-> (30137: expr) AND (30139: expr)\n  |  30141 <-> (30140: expr) AND (22385: mock_020)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1169:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29903: cast, LARGEINT, true] = [22585: mock_189, LARGEINT, false]\n  |  equal join conjunct: [22335: mock_034, DATETIME, true] = [22606: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 107, build_expr = (22585: mock_189), remote = true\n  |  - filter_id = 108, build_expr = (22606: mock_157), remote = true\n  |  output columns: 22335, 22354, 22362, 22372, 22373, 22383, 22384, 22385, 22386, 22387, 22388, 22389, 22399, 22486, 22530, 22555, 22606\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1168:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22585: mock_189, LARGEINT, false], [22606: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1166:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29903: cast, LARGEINT, true], [22335: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 204(F815)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22585: mock_189, 22606: mock_157\n  OutPut Exchange id: 1168\n\n  1167:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 22606: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 205(F813)\n\n  Input Partition: HASH_PARTITIONED: 29904: cast, 22335: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29903: cast, 22335: mock_034\n  OutPut Exchange id: 1166\n\n  1165:Project\n  |  output columns:\n  |  22335 <-> [22335: mock_034, DATETIME, true]\n  |  22354 <-> [22354: mock_042, DOUBLE, true]\n  |  22362 <-> [22362: mock_039, VARCHAR(65535), true]\n  |  22372 <-> [22372: mock_006, BIGINT, true]\n  |  22373 <-> [22373: mock_007, BIGINT, true]\n  |  22383 <-> [22383: mock_017, BOOLEAN, true]\n  |  22384 <-> [22384: mock_018, BOOLEAN, true]\n  |  22385 <-> [22385: mock_020, BOOLEAN, true]\n  |  22386 <-> [22386: mock_021, BOOLEAN, true]\n  |  22387 <-> [22387: mock_022, BOOLEAN, true]\n  |  22388 <-> [22388: mock_023, BOOLEAN, true]\n  |  22389 <-> [22389: mock_024, BOOLEAN, true]\n  |  22399 <-> [22399: xx_hash3_64, BIGINT, true]\n  |  22486 <-> [22486: mock_133, VARCHAR(65535), true]\n  |  22530 <-> [22530: mock_133, VARCHAR(65535), true]\n  |  22555 <-> [22555: mock_157, DATETIME, true]\n  |  29903 <-> cast([22397: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1164:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29904: cast, LARGEINT, true] = [22534: mock_177, LARGEINT, false]\n  |  equal join conjunct: [22335: mock_034, DATETIME, true] = [22555: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 105, build_expr = (22534: mock_177), remote = true\n  |  - filter_id = 106, build_expr = (22555: mock_157), remote = true\n  |  output columns: 22335, 22354, 22362, 22372, 22373, 22383, 22384, 22385, 22386, 22387, 22388, 22389, 22397, 22399, 22486, 22530, 22555\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 108, probe_expr = (22335: mock_034), partition_exprs = (CAST(22397: xx_hash3_64 AS LARGEINT),22335: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1163:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22534: mock_177, LARGEINT, false], [22555: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1161:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29904: cast, LARGEINT, true], [22335: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 107, probe_expr = (CAST(22397: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(22397: xx_hash3_64 AS LARGEINT),22335: mock_034)\n\nPLAN FRAGMENT 206(F811)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22534: mock_177, 22555: mock_157\n  OutPut Exchange id: 1163\n\n  1162:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 22555: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 207(F809)\n\n  Input Partition: HASH_PARTITIONED: 22370: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29904: cast, 22335: mock_034\n  OutPut Exchange id: 1161\n\n  1160:Project\n  |  output columns:\n  |  22335 <-> [22335: mock_034, DATETIME, true]\n  |  22354 <-> [22354: mock_042, DOUBLE, true]\n  |  22362 <-> [22362: mock_039, VARCHAR(65535), true]\n  |  22372 <-> [22372: mock_006, BIGINT, true]\n  |  22373 <-> [22373: mock_007, BIGINT, true]\n  |  22383 <-> [22383: mock_017, BOOLEAN, true]\n  |  22384 <-> [22384: mock_018, BOOLEAN, true]\n  |  22385 <-> [22385: mock_020, BOOLEAN, true]\n  |  22386 <-> [22386: mock_021, BOOLEAN, true]\n  |  22387 <-> [22387: mock_022, BOOLEAN, true]\n  |  22388 <-> [22388: mock_023, BOOLEAN, true]\n  |  22389 <-> [22389: mock_024, BOOLEAN, true]\n  |  22397 <-> [22397: xx_hash3_64, BIGINT, true]\n  |  22399 <-> [22399: xx_hash3_64, BIGINT, true]\n  |  22486 <-> [22486: mock_133, VARCHAR(65535), true]\n  |  22530 <-> [22530: mock_133, VARCHAR(65535), true]\n  |  29904 <-> cast([22396: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1159:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22370: mock_030, LARGEINT, true] = [22533: mock_030, LARGEINT, true]\n  |  output columns: 22335, 22354, 22362, 22372, 22373, 22383, 22384, 22385, 22386, 22387, 22388, 22389, 22396, 22397, 22399, 22486, 22530\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1158:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22533: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1156:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22370: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 105, probe_expr = (CAST(22396: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(22396: xx_hash3_64 AS LARGEINT),22335: mock_034)\n     - filter_id = 106, probe_expr = (22335: mock_034), partition_exprs = (CAST(22396: xx_hash3_64 AS LARGEINT),22335: mock_034)\n\nPLAN FRAGMENT 208(F807)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22533: mock_030\n  OutPut Exchange id: 1158\n\n  1157:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 209(F805)\n\n  Input Partition: HASH_PARTITIONED: 22368: mock_028\n  OutPut Partition: HASH_PARTITIONED: 22370: mock_030\n  OutPut Exchange id: 1156\n\n  1155:Project\n  |  output columns:\n  |  22335 <-> [22335: mock_034, DATETIME, true]\n  |  22354 <-> [22354: mock_042, DOUBLE, true]\n  |  22362 <-> [22362: mock_039, VARCHAR(65535), true]\n  |  22370 <-> [22370: mock_030, LARGEINT, true]\n  |  22372 <-> [22372: mock_006, BIGINT, true]\n  |  22373 <-> [22373: mock_007, BIGINT, true]\n  |  22383 <-> [22383: mock_017, BOOLEAN, true]\n  |  22384 <-> [22384: mock_018, BOOLEAN, true]\n  |  22385 <-> [22385: mock_020, BOOLEAN, true]\n  |  22386 <-> [22386: mock_021, BOOLEAN, true]\n  |  22387 <-> [22387: mock_022, BOOLEAN, true]\n  |  22388 <-> [22388: mock_023, BOOLEAN, true]\n  |  22389 <-> [22389: mock_024, BOOLEAN, true]\n  |  22396 <-> [22396: xx_hash3_64, BIGINT, true]\n  |  22397 <-> [22397: xx_hash3_64, BIGINT, true]\n  |  22399 <-> [22399: xx_hash3_64, BIGINT, true]\n  |  22486 <-> [22486: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1154:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22368: mock_028, LARGEINT, true] = [22461: mock_071, LARGEINT, true]\n  |  output columns: 22335, 22354, 22362, 22370, 22372, 22373, 22383, 22384, 22385, 22386, 22387, 22388, 22389, 22396, 22397, 22399, 22486\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1153:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22461: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1141:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22368: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 210(F803)\n\n  Input Partition: HASH_PARTITIONED: 22454: mock_075\n  OutPut Partition: HASH_PARTITIONED: 22461: mock_071\n  OutPut Exchange id: 1153\n\n  1152:Project\n  |  output columns:\n  |  22461 <-> [22461: mock_071, LARGEINT, true]\n  |  22486 <-> [22486: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1151:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22454: mock_075, LARGEINT, true] = [22518: mock_075, LARGEINT, true]\n  |  output columns: 22461, 22486\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1150:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22518: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1148:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22454: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 211(F801)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22518: mock_075\n  OutPut Exchange id: 1150\n\n  1149:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 212(F799)\n\n  Input Partition: HASH_PARTITIONED: 22456: mock_077\n  OutPut Partition: HASH_PARTITIONED: 22454: mock_075\n  OutPut Exchange id: 1148\n\n  1147:Project\n  |  output columns:\n  |  22454 <-> [22454: mock_075, LARGEINT, true]\n  |  22461 <-> [22461: mock_071, LARGEINT, true]\n  |  22486 <-> [22486: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1146:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22456: mock_077, LARGEINT, true] = [22489: mock_077, LARGEINT, true]\n  |  output columns: 22454, 22461, 22486\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1145:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22489: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1143:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22456: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 213(F797)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22489: mock_077\n  OutPut Exchange id: 1145\n\n  1144:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 214(F795)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22456: mock_077\n  OutPut Exchange id: 1143\n\n  1142:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 215(F793)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22368: mock_028\n  OutPut Exchange id: 1141\n\n  1140:SELECT\n  |  predicates: 22399: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1139:Project\n  |  output columns:\n  |  22335 <-> [22335: mock_034, DATETIME, true]\n  |  22354 <-> [22354: mock_042, DOUBLE, true]\n  |  22362 <-> [22362: mock_039, VARCHAR(65535), true]\n  |  22368 <-> [22368: mock_028, LARGEINT, true]\n  |  22370 <-> [22370: mock_030, LARGEINT, true]\n  |  22372 <-> [22372: mock_006, BIGINT, true]\n  |  22373 <-> [22373: mock_007, BIGINT, true]\n  |  22383 <-> [22383: mock_017, BOOLEAN, true]\n  |  22384 <-> [22384: mock_018, BOOLEAN, true]\n  |  22385 <-> [22385: mock_020, BOOLEAN, true]\n  |  22386 <-> [22386: mock_021, BOOLEAN, true]\n  |  22387 <-> [22387: mock_022, BOOLEAN, true]\n  |  22388 <-> [22388: mock_023, BOOLEAN, true]\n  |  22389 <-> [22389: mock_024, BOOLEAN, true]\n  |  22396 <-> xx_hash3_64[([22342: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22397 <-> xx_hash3_64[([22366: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22399 <-> xx_hash3_64[([22362: mock_039, VARCHAR(65535), true], [22361: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1138:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [22389: mock_024, BOOLEAN, true], [22386: mock_021, BOOLEAN, true], [22384: mock_018, BOOLEAN, true], [22388: mock_023, BOOLEAN, true], [22383: mock_017, BOOLEAN, true], [22387: mock_022, BOOLEAN, true], [22385: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=134.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 216(F791)\n\n  Input Partition: HASH_PARTITIONED: 29905: cast\n  OutPut Partition: HASH_PARTITIONED: 29901: cast\n  OutPut Exchange id: 1137\n\n  1136:Project\n  |  output columns:\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  21664 <-> [21664: xx_hash3_64, BIGINT, true]\n  |  21665 <-> [21665: expr, DOUBLE, true]\n  |  21666 <-> [21666: expr, BOOLEAN, true]\n  |  21903 <-> [21903: expr, BOOLEAN, true]\n  |  21904 <-> [21904: expr, BOOLEAN, true]\n  |  21906 <-> [21906: case, BIGINT, true]\n  |  21907 <-> [21907: case, BIGINT, true]\n  |  21908 <-> [21908: case, DOUBLE, true]\n  |  22278 <-> [22278: sum, DOUBLE, true]\n  |  29901 <-> cast([21664: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1135:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29905: cast, LARGEINT, true] = [21910: mock_191, LARGEINT, true]\n  |  output columns: 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21663, 21664, 21665, 21666, 21903, 21904, 21906, 21907, 21908, 22278\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1134:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21910: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1092:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29905: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 217(F762)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21910: mock_191\n  OutPut Exchange id: 1134\n\n  1133:Project\n  |  output columns:\n  |  21910 <-> [21910: mock_191, LARGEINT, false]\n  |  22278 <-> [22278: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1132:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [21910: mock_191, LARGEINT, false] = [29906: cast, LARGEINT, true]\n  |  output columns: 21910, 22278\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1131:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29906: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1093:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 218(F788)\n\n  Input Partition: HASH_PARTITIONED: 22029: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29906: cast\n  OutPut Exchange id: 1131\n\n  1130:Project\n  |  output columns:\n  |  22278 <-> [22278: sum, DOUBLE, true]\n  |  29906 <-> cast([22029: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1129:AGGREGATE (merge finalize)\n  |  aggregate: sum[([22278: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [22029: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1128:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22029: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 219(F787)\n\n  Input Partition: HASH_PARTITIONED: 29907: cast, 21966: mock_034\n  OutPut Partition: HASH_PARTITIONED: 22029: xx_hash3_64\n  OutPut Exchange id: 1128\n\n  1127:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([22276: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [22029: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1126:Project\n  |  output columns:\n  |  22029 <-> [22029: xx_hash3_64, BIGINT, true]\n  |  22276 <-> if[(((((22020: mock_024) AND (22017: mock_021)) AND ((22015: mock_018) AND (22019: mock_023))) AND (((22014: mock_017) AND (22018: mock_022)) AND ((21966: mock_034 = 22186: mock_157) AND (21966: mock_034 = 22237: mock_157)))) AND (22016: mock_020), if[(if[(if(22117: mock_133 = 22161: mock_133, 21993: mock_039, NULL) IS NULL, NULL, [22004: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [21985: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1125:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29907: cast, LARGEINT, true] = [22216: mock_189, LARGEINT, false]\n  |  equal join conjunct: [21966: mock_034, DATETIME, true] = [22237: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 103, build_expr = (22216: mock_189), remote = true\n  |  - filter_id = 104, build_expr = (22237: mock_157), remote = true\n  |  output columns: 21966, 21985, 21993, 22004, 22014, 22015, 22016, 22017, 22018, 22019, 22020, 22029, 22117, 22161, 22186, 22237\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1124:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22216: mock_189, LARGEINT, false], [22237: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1122:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29907: cast, LARGEINT, true], [21966: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 220(F785)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22216: mock_189, 22237: mock_157\n  OutPut Exchange id: 1124\n\n  1123:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 22237: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 221(F783)\n\n  Input Partition: HASH_PARTITIONED: 29908: cast, 21966: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29907: cast, 21966: mock_034\n  OutPut Exchange id: 1122\n\n  1121:Project\n  |  output columns:\n  |  21966 <-> [21966: mock_034, DATETIME, true]\n  |  21985 <-> [21985: mock_042, DOUBLE, true]\n  |  21993 <-> [21993: mock_039, VARCHAR(65535), true]\n  |  22004 <-> [22004: mock_007, BIGINT, true]\n  |  22014 <-> [22014: mock_017, BOOLEAN, true]\n  |  22015 <-> [22015: mock_018, BOOLEAN, true]\n  |  22016 <-> [22016: mock_020, BOOLEAN, true]\n  |  22017 <-> [22017: mock_021, BOOLEAN, true]\n  |  22018 <-> [22018: mock_022, BOOLEAN, true]\n  |  22019 <-> [22019: mock_023, BOOLEAN, true]\n  |  22020 <-> [22020: mock_024, BOOLEAN, true]\n  |  22029 <-> [22029: xx_hash3_64, BIGINT, true]\n  |  22117 <-> [22117: mock_133, VARCHAR(65535), true]\n  |  22161 <-> [22161: mock_133, VARCHAR(65535), true]\n  |  22186 <-> [22186: mock_157, DATETIME, true]\n  |  29907 <-> cast([22028: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1120:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29908: cast, LARGEINT, true] = [22165: mock_177, LARGEINT, false]\n  |  equal join conjunct: [21966: mock_034, DATETIME, true] = [22186: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 101, build_expr = (22165: mock_177), remote = true\n  |  - filter_id = 102, build_expr = (22186: mock_157), remote = true\n  |  output columns: 21966, 21985, 21993, 22004, 22014, 22015, 22016, 22017, 22018, 22019, 22020, 22028, 22029, 22117, 22161, 22186\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 104, probe_expr = (21966: mock_034), partition_exprs = (CAST(22028: xx_hash3_64 AS LARGEINT),21966: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1119:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22165: mock_177, LARGEINT, false], [22186: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1117:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29908: cast, LARGEINT, true], [21966: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 103, probe_expr = (CAST(22028: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(22028: xx_hash3_64 AS LARGEINT),21966: mock_034)\n\nPLAN FRAGMENT 222(F781)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22165: mock_177, 22186: mock_157\n  OutPut Exchange id: 1119\n\n  1118:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 22186: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 223(F779)\n\n  Input Partition: HASH_PARTITIONED: 22001: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29908: cast, 21966: mock_034\n  OutPut Exchange id: 1117\n\n  1116:Project\n  |  output columns:\n  |  21966 <-> [21966: mock_034, DATETIME, true]\n  |  21985 <-> [21985: mock_042, DOUBLE, true]\n  |  21993 <-> [21993: mock_039, VARCHAR(65535), true]\n  |  22004 <-> [22004: mock_007, BIGINT, true]\n  |  22014 <-> [22014: mock_017, BOOLEAN, true]\n  |  22015 <-> [22015: mock_018, BOOLEAN, true]\n  |  22016 <-> [22016: mock_020, BOOLEAN, true]\n  |  22017 <-> [22017: mock_021, BOOLEAN, true]\n  |  22018 <-> [22018: mock_022, BOOLEAN, true]\n  |  22019 <-> [22019: mock_023, BOOLEAN, true]\n  |  22020 <-> [22020: mock_024, BOOLEAN, true]\n  |  22028 <-> [22028: xx_hash3_64, BIGINT, true]\n  |  22029 <-> [22029: xx_hash3_64, BIGINT, true]\n  |  22117 <-> [22117: mock_133, VARCHAR(65535), true]\n  |  22161 <-> [22161: mock_133, VARCHAR(65535), true]\n  |  29908 <-> cast([22027: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1115:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22001: mock_030, LARGEINT, true] = [22164: mock_030, LARGEINT, true]\n  |  output columns: 21966, 21985, 21993, 22004, 22014, 22015, 22016, 22017, 22018, 22019, 22020, 22027, 22028, 22029, 22117, 22161\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1114:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22164: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1112:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22001: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 101, probe_expr = (CAST(22027: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(22027: xx_hash3_64 AS LARGEINT),21966: mock_034)\n     - filter_id = 102, probe_expr = (21966: mock_034), partition_exprs = (CAST(22027: xx_hash3_64 AS LARGEINT),21966: mock_034)\n\nPLAN FRAGMENT 224(F777)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22164: mock_030\n  OutPut Exchange id: 1114\n\n  1113:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 225(F775)\n\n  Input Partition: HASH_PARTITIONED: 21999: mock_028\n  OutPut Partition: HASH_PARTITIONED: 22001: mock_030\n  OutPut Exchange id: 1112\n\n  1111:Project\n  |  output columns:\n  |  21966 <-> [21966: mock_034, DATETIME, true]\n  |  21985 <-> [21985: mock_042, DOUBLE, true]\n  |  21993 <-> [21993: mock_039, VARCHAR(65535), true]\n  |  22001 <-> [22001: mock_030, LARGEINT, true]\n  |  22004 <-> [22004: mock_007, BIGINT, true]\n  |  22014 <-> [22014: mock_017, BOOLEAN, true]\n  |  22015 <-> [22015: mock_018, BOOLEAN, true]\n  |  22016 <-> [22016: mock_020, BOOLEAN, true]\n  |  22017 <-> [22017: mock_021, BOOLEAN, true]\n  |  22018 <-> [22018: mock_022, BOOLEAN, true]\n  |  22019 <-> [22019: mock_023, BOOLEAN, true]\n  |  22020 <-> [22020: mock_024, BOOLEAN, true]\n  |  22027 <-> [22027: xx_hash3_64, BIGINT, true]\n  |  22028 <-> [22028: xx_hash3_64, BIGINT, true]\n  |  22029 <-> [22029: xx_hash3_64, BIGINT, true]\n  |  22117 <-> [22117: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1110:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21999: mock_028, LARGEINT, true] = [22092: mock_071, LARGEINT, true]\n  |  output columns: 21966, 21985, 21993, 22001, 22004, 22014, 22015, 22016, 22017, 22018, 22019, 22020, 22027, 22028, 22029, 22117\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1109:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22092: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1097:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21999: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 226(F773)\n\n  Input Partition: HASH_PARTITIONED: 22085: mock_075\n  OutPut Partition: HASH_PARTITIONED: 22092: mock_071\n  OutPut Exchange id: 1109\n\n  1108:Project\n  |  output columns:\n  |  22092 <-> [22092: mock_071, LARGEINT, true]\n  |  22117 <-> [22117: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1107:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22085: mock_075, LARGEINT, true] = [22149: mock_075, LARGEINT, true]\n  |  output columns: 22092, 22117\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1106:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22149: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1104:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22085: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 227(F771)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22149: mock_075\n  OutPut Exchange id: 1106\n\n  1105:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 228(F769)\n\n  Input Partition: HASH_PARTITIONED: 22087: mock_077\n  OutPut Partition: HASH_PARTITIONED: 22085: mock_075\n  OutPut Exchange id: 1104\n\n  1103:Project\n  |  output columns:\n  |  22085 <-> [22085: mock_075, LARGEINT, true]\n  |  22092 <-> [22092: mock_071, LARGEINT, true]\n  |  22117 <-> [22117: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1102:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [22087: mock_077, LARGEINT, true] = [22120: mock_077, LARGEINT, true]\n  |  output columns: 22085, 22092, 22117\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1101:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [22120: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1099:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [22087: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 229(F767)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22120: mock_077\n  OutPut Exchange id: 1101\n\n  1100:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 230(F765)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 22087: mock_077\n  OutPut Exchange id: 1099\n\n  1098:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 231(F763)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21999: mock_028\n  OutPut Exchange id: 1097\n\n  1096:SELECT\n  |  predicates: 22029: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1095:Project\n  |  output columns:\n  |  21966 <-> [21966: mock_034, DATETIME, true]\n  |  21985 <-> [21985: mock_042, DOUBLE, true]\n  |  21993 <-> [21993: mock_039, VARCHAR(65535), true]\n  |  21999 <-> [21999: mock_028, LARGEINT, true]\n  |  22001 <-> [22001: mock_030, LARGEINT, true]\n  |  22004 <-> [22004: mock_007, BIGINT, true]\n  |  22014 <-> [22014: mock_017, BOOLEAN, true]\n  |  22015 <-> [22015: mock_018, BOOLEAN, true]\n  |  22016 <-> [22016: mock_020, BOOLEAN, true]\n  |  22017 <-> [22017: mock_021, BOOLEAN, true]\n  |  22018 <-> [22018: mock_022, BOOLEAN, true]\n  |  22019 <-> [22019: mock_023, BOOLEAN, true]\n  |  22020 <-> [22020: mock_024, BOOLEAN, true]\n  |  22027 <-> xx_hash3_64[([21973: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22028 <-> xx_hash3_64[([21997: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  22029 <-> xx_hash3_64[([21991: mock_002, VARCHAR(65535), true], [21993: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1094:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [22020: mock_024, BOOLEAN, true], [22017: mock_021, BOOLEAN, true], [22015: mock_018, BOOLEAN, true], [22019: mock_023, BOOLEAN, true], [22014: mock_017, BOOLEAN, true], [22018: mock_022, BOOLEAN, true], [22016: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 232(F760)\n\n  Input Partition: HASH_PARTITIONED: 29909: cast, 21600: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29905: cast\n  OutPut Exchange id: 1092\n\n  1091:Project\n  |  output columns:\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  21664 <-> [21664: xx_hash3_64, BIGINT, true]\n  |  21665 <-> [21665: expr, DOUBLE, true]\n  |  21666 <-> [21666: expr, BOOLEAN, true]\n  |  21903 <-> [21600: mock_034, DATETIME, true] = [21820: mock_157, DATETIME, true]\n  |  21904 <-> [21600: mock_034, DATETIME, true] = [21871: mock_157, DATETIME, true]\n  |  21906 <-> [30131: if, BIGINT, true]\n  |  21907 <-> if[(if(21751: mock_133 != 21795: mock_133, 21627: mock_039, NULL) IS NULL, NULL, [21637: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  21908 <-> if[([30131: if, BIGINT, true] = 1, [21619: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29905 <-> cast([21663: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30128 <-> [21751: mock_133, VARCHAR(65535), true] = [21795: mock_133, VARCHAR(65535), true]\n  |  30129 <-> if[([30128: expr, BOOLEAN, true], [21627: mock_039, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  30130 <-> 30129: if IS NULL\n  |  30131 <-> if[([30130: expr, BOOLEAN, false], NULL, [21638: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1090:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29909: cast, LARGEINT, true] = [21850: mock_189, LARGEINT, false]\n  |  equal join conjunct: [21600: mock_034, DATETIME, true] = [21871: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 99, build_expr = (21850: mock_189), remote = true\n  |  - filter_id = 100, build_expr = (21871: mock_157), remote = true\n  |  output columns: 21600, 21619, 21627, 21637, 21638, 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21663, 21664, 21665, 21666, 21751, 21795, 21820, 21871\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1089:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21850: mock_189, LARGEINT, false], [21871: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1087:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29909: cast, LARGEINT, true], [21600: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 233(F758)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21850: mock_189, 21871: mock_157\n  OutPut Exchange id: 1089\n\n  1088:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 21871: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 234(F756)\n\n  Input Partition: HASH_PARTITIONED: 29910: cast, 21600: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29909: cast, 21600: mock_034\n  OutPut Exchange id: 1087\n\n  1086:Project\n  |  output columns:\n  |  21600 <-> [21600: mock_034, DATETIME, true]\n  |  21619 <-> [21619: mock_042, DOUBLE, true]\n  |  21627 <-> [21627: mock_039, VARCHAR(65535), true]\n  |  21637 <-> [21637: mock_006, BIGINT, true]\n  |  21638 <-> [21638: mock_007, BIGINT, true]\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  21664 <-> [21664: xx_hash3_64, BIGINT, true]\n  |  21665 <-> [21665: expr, DOUBLE, true]\n  |  21666 <-> [21666: expr, BOOLEAN, true]\n  |  21751 <-> [21751: mock_133, VARCHAR(65535), true]\n  |  21795 <-> [21795: mock_133, VARCHAR(65535), true]\n  |  21820 <-> [21820: mock_157, DATETIME, true]\n  |  29909 <-> cast([21662: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1085:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29910: cast, LARGEINT, true] = [21799: mock_177, LARGEINT, false]\n  |  equal join conjunct: [21600: mock_034, DATETIME, true] = [21820: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 97, build_expr = (21799: mock_177), remote = true\n  |  - filter_id = 98, build_expr = (21820: mock_157), remote = true\n  |  output columns: 21600, 21619, 21627, 21637, 21638, 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21662, 21663, 21664, 21665, 21666, 21751, 21795, 21820\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 100, probe_expr = (21600: mock_034), partition_exprs = (CAST(21662: xx_hash3_64 AS LARGEINT),21600: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1084:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21799: mock_177, LARGEINT, false], [21820: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1082:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29910: cast, LARGEINT, true], [21600: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 99, probe_expr = (CAST(21662: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(21662: xx_hash3_64 AS LARGEINT),21600: mock_034)\n\nPLAN FRAGMENT 235(F754)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21799: mock_177, 21820: mock_157\n  OutPut Exchange id: 1084\n\n  1083:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 21820: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 236(F752)\n\n  Input Partition: HASH_PARTITIONED: 21635: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29910: cast, 21600: mock_034\n  OutPut Exchange id: 1082\n\n  1081:Project\n  |  output columns:\n  |  21600 <-> [21600: mock_034, DATETIME, true]\n  |  21619 <-> [21619: mock_042, DOUBLE, true]\n  |  21627 <-> [21627: mock_039, VARCHAR(65535), true]\n  |  21637 <-> [21637: mock_006, BIGINT, true]\n  |  21638 <-> [21638: mock_007, BIGINT, true]\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21662 <-> [21662: xx_hash3_64, BIGINT, true]\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  21664 <-> [21664: xx_hash3_64, BIGINT, true]\n  |  21665 <-> [21665: expr, DOUBLE, true]\n  |  21666 <-> [21666: expr, BOOLEAN, true]\n  |  21751 <-> [21751: mock_133, VARCHAR(65535), true]\n  |  21795 <-> [21795: mock_133, VARCHAR(65535), true]\n  |  29910 <-> cast([21661: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1080:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21635: mock_030, LARGEINT, true] = [21798: mock_030, LARGEINT, true]\n  |  output columns: 21600, 21619, 21627, 21637, 21638, 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21661, 21662, 21663, 21664, 21665, 21666, 21751, 21795\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1079:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21798: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1077:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21635: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 97, probe_expr = (CAST(21661: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(21661: xx_hash3_64 AS LARGEINT),21600: mock_034)\n     - filter_id = 98, probe_expr = (21600: mock_034), partition_exprs = (CAST(21661: xx_hash3_64 AS LARGEINT),21600: mock_034)\n\nPLAN FRAGMENT 237(F750)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21798: mock_030\n  OutPut Exchange id: 1079\n\n  1078:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 238(F748)\n\n  Input Partition: HASH_PARTITIONED: 21633: mock_028\n  OutPut Partition: HASH_PARTITIONED: 21635: mock_030\n  OutPut Exchange id: 1077\n\n  1076:Project\n  |  output columns:\n  |  21600 <-> [21600: mock_034, DATETIME, true]\n  |  21619 <-> [21619: mock_042, DOUBLE, true]\n  |  21627 <-> [21627: mock_039, VARCHAR(65535), true]\n  |  21635 <-> [21635: mock_030, LARGEINT, true]\n  |  21637 <-> [21637: mock_006, BIGINT, true]\n  |  21638 <-> [21638: mock_007, BIGINT, true]\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21661 <-> [21661: xx_hash3_64, BIGINT, true]\n  |  21662 <-> [21662: xx_hash3_64, BIGINT, true]\n  |  21663 <-> [21663: xx_hash3_64, BIGINT, true]\n  |  21664 <-> [21664: xx_hash3_64, BIGINT, true]\n  |  21665 <-> [21665: expr, DOUBLE, true]\n  |  21666 <-> [21666: expr, BOOLEAN, true]\n  |  21751 <-> [21751: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1075:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21633: mock_028, LARGEINT, true] = [21726: mock_071, LARGEINT, true]\n  |  output columns: 21600, 21619, 21627, 21635, 21637, 21638, 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21661, 21662, 21663, 21664, 21665, 21666, 21751\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----1074:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21726: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1062:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21633: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 239(F746)\n\n  Input Partition: HASH_PARTITIONED: 21719: mock_075\n  OutPut Partition: HASH_PARTITIONED: 21726: mock_071\n  OutPut Exchange id: 1074\n\n  1073:Project\n  |  output columns:\n  |  21726 <-> [21726: mock_071, LARGEINT, true]\n  |  21751 <-> [21751: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1072:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21719: mock_075, LARGEINT, true] = [21783: mock_075, LARGEINT, true]\n  |  output columns: 21726, 21751\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1071:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21783: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1069:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21719: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 240(F744)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21783: mock_075\n  OutPut Exchange id: 1071\n\n  1070:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 241(F742)\n\n  Input Partition: HASH_PARTITIONED: 21721: mock_077\n  OutPut Partition: HASH_PARTITIONED: 21719: mock_075\n  OutPut Exchange id: 1069\n\n  1068:Project\n  |  output columns:\n  |  21719 <-> [21719: mock_075, LARGEINT, true]\n  |  21726 <-> [21726: mock_071, LARGEINT, true]\n  |  21751 <-> [21751: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  1067:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21721: mock_077, LARGEINT, true] = [21754: mock_077, LARGEINT, true]\n  |  output columns: 21719, 21726, 21751\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1066:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21754: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1064:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21721: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 242(F740)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21754: mock_077\n  OutPut Exchange id: 1066\n\n  1065:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 243(F738)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21721: mock_077\n  OutPut Exchange id: 1064\n\n  1063:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 244(F736)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21633: mock_028\n  OutPut Exchange id: 1062\n\n  1061:SELECT\n  |  predicates: 21663: xx_hash3_64 IS NOT NULL, 21666: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1060:Project\n  |  output columns:\n  |  21600 <-> [21600: mock_034, DATETIME, true]\n  |  21619 <-> [21619: mock_042, DOUBLE, true]\n  |  21627 <-> [21627: mock_039, VARCHAR(65535), true]\n  |  21633 <-> [21633: mock_028, LARGEINT, true]\n  |  21635 <-> [21635: mock_030, LARGEINT, true]\n  |  21637 <-> [21637: mock_006, BIGINT, true]\n  |  21638 <-> [21638: mock_007, BIGINT, true]\n  |  21648 <-> [21648: mock_017, BOOLEAN, true]\n  |  21649 <-> [21649: mock_018, BOOLEAN, true]\n  |  21650 <-> [21650: mock_020, BOOLEAN, true]\n  |  21651 <-> [21651: mock_021, BOOLEAN, true]\n  |  21652 <-> [21652: mock_022, BOOLEAN, true]\n  |  21653 <-> [21653: mock_023, BOOLEAN, true]\n  |  21654 <-> [21654: mock_024, BOOLEAN, true]\n  |  21661 <-> xx_hash3_64[([21607: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  21662 <-> xx_hash3_64[([21631: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  21663 <-> xx_hash3_64[([21625: mock_002, VARCHAR(65535), true], [21627: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  21664 <-> xx_hash3_64[([21627: mock_039, VARCHAR(65535), true], [21626: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  21665 <-> [21606: mock_035, DOUBLE, true] * 0.0 * 3.0\n  |  21666 <-> [21617: mock_055, DOUBLE, true] + [21619: mock_042, DOUBLE, true] + if[(21613: mock_046 IS NULL, 0.0, [21613: mock_046, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] * 365.0 / if[(((21615: mock_005 IS NULL) OR (21615: mock_005 < 0.0)) AND (21623: mock_054 != 'N'), NULL, [21615: mock_005, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] < 3.0416666666666668E10\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1059:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [21654: mock_024, BOOLEAN, true], [21651: mock_021, BOOLEAN, true], [21649: mock_018, BOOLEAN, true], [21653: mock_023, BOOLEAN, true], [21648: mock_017, BOOLEAN, true], [21652: mock_022, BOOLEAN, true], [21650: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=206.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n     * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 245(F733)\n\n  Input Partition: HASH_PARTITIONED: 29911: cast\n  OutPut Partition: HASH_PARTITIONED: 29887: cast\n  OutPut Exchange id: 1057\n\n  1056:Project\n  |  output columns:\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19678 <-> [19678: expr, BOOLEAN, true]\n  |  19679 <-> [19679: expr, BOOLEAN, true]\n  |  19681 <-> [19681: case, BIGINT, true]\n  |  19682 <-> [19682: case, BIGINT, true]\n  |  21543 <-> 20426: case / CAST(21541: coalesce AS DOUBLE) IS NOT NULL\n  |  29887 <-> cast([19438: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1055:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29911: cast, LARGEINT, true] = [20429: mock_193, LARGEINT, true]\n  |  other predicates: 20426: case / CAST(21541: coalesce AS DOUBLE) IS NOT NULL\n  |  output columns: 19403, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19438, 19439, 19441, 19678, 19679, 19681, 19682, 20426, 21541\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1054:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20429: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  922:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29911: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 246(F642)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20429: mock_193\n  OutPut Exchange id: 1054\n\n  1053:Project\n  |  output columns:\n  |  20429 <-> [20429: mock_193, LARGEINT, false]\n  |  21541 <-> coalesce[([21540: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1052:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [20429: mock_193, LARGEINT, false] = [29912: cast, LARGEINT, true]\n  |  output columns: 20429, 21540\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1051:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29912: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  923:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 247(F730)\n\n  Input Partition: HASH_PARTITIONED: 20549: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29912: cast\n  OutPut Exchange id: 1051\n\n  1050:Project\n  |  output columns:\n  |  21540 <-> [21540: count, BIGINT, false]\n  |  29912 <-> cast([20549: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1049:AGGREGATE (merge finalize)\n  |  aggregate: count[([21540: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [20549: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1048:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20549: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 248(F729)\n\n  Input Partition: HASH_PARTITIONED: 29913: cast\n  OutPut Partition: HASH_PARTITIONED: 20549: xx_hash3_64\n  OutPut Exchange id: 1048\n\n  1047:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([21539: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [20549: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  1046:Project\n  |  output columns:\n  |  20549 <-> [20549: xx_hash3_64, BIGINT, true]\n  |  21539 <-> if[(((((20539: mock_024) AND (20536: mock_021)) AND ((20534: mock_018) AND (20538: mock_023))) AND (((20533: mock_017) AND (20537: mock_022)) AND ((20788: expr) AND (20789: expr)))) AND (20535: mock_020), if[(if[(CASE WHEN (30119: expr) AND (30120: coalesce = 1) THEN 20791: case WHEN (30119: expr) AND (30120: coalesce != 1) THEN 0 ELSE 20792: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [20513: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30119 <-> [21163: sum, DOUBLE, true] > 0.0\n  |  30120 <-> coalesce[([20791: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  1045:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29913: cast, LARGEINT, true] = [21164: mock_193, LARGEINT, true]\n  |  output columns: 20513, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20549, 20788, 20789, 20791, 20792, 21163\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1044:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21164: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1002:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29913: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 249(F700)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21164: mock_193\n  OutPut Exchange id: 1044\n\n  1043:Project\n  |  output columns:\n  |  21164 <-> [21164: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1042:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [21164: mock_193, LARGEINT, false] = [29914: cast, LARGEINT, true]\n  |  output columns: 21164\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1041:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29914: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1003:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 250(F726)\n\n  Input Partition: HASH_PARTITIONED: 21284: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29914: cast\n  OutPut Exchange id: 1041\n\n  1040:Project\n  |  output columns:\n  |  29914 <-> cast([21284: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1039:AGGREGATE (merge finalize)\n  |  group by: [21284: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1038:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21284: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 251(F725)\n\n  Input Partition: HASH_PARTITIONED: 29915: cast, 21220: mock_034\n  OutPut Partition: HASH_PARTITIONED: 21284: xx_hash3_64\n  OutPut Exchange id: 1038\n\n  1037:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [21284: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1036:Project\n  |  output columns:\n  |  21284 <-> [21284: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1035:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29915: cast, LARGEINT, true] = [21470: mock_189, LARGEINT, false]\n  |  equal join conjunct: [21220: mock_034, DATETIME, true] = [21491: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 95, build_expr = (21470: mock_189), remote = true\n  |  - filter_id = 96, build_expr = (21491: mock_157), remote = true\n  |  output columns: 21284\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1034:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21470: mock_189, LARGEINT, false], [21491: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1032:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29915: cast, LARGEINT, true], [21220: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 252(F723)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21470: mock_189, 21491: mock_157\n  OutPut Exchange id: 1034\n\n  1033:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 21491: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 253(F721)\n\n  Input Partition: HASH_PARTITIONED: 29916: cast, 21220: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29915: cast, 21220: mock_034\n  OutPut Exchange id: 1032\n\n  1031:Project\n  |  output columns:\n  |  21220 <-> [21220: mock_034, DATETIME, true]\n  |  21284 <-> [21284: xx_hash3_64, BIGINT, true]\n  |  29915 <-> cast([21282: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1030:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29916: cast, LARGEINT, true] = [21419: mock_177, LARGEINT, false]\n  |  equal join conjunct: [21220: mock_034, DATETIME, true] = [21440: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 93, build_expr = (21419: mock_177), remote = true\n  |  - filter_id = 94, build_expr = (21440: mock_157), remote = true\n  |  output columns: 21220, 21282, 21284\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 96, probe_expr = (21220: mock_034), partition_exprs = (CAST(21282: xx_hash3_64 AS LARGEINT),21220: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1029:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21419: mock_177, LARGEINT, false], [21440: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  1027:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29916: cast, LARGEINT, true], [21220: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 95, probe_expr = (CAST(21282: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(21282: xx_hash3_64 AS LARGEINT),21220: mock_034)\n\nPLAN FRAGMENT 254(F719)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21419: mock_177, 21440: mock_157\n  OutPut Exchange id: 1029\n\n  1028:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 21440: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 255(F717)\n\n  Input Partition: HASH_PARTITIONED: 21255: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29916: cast, 21220: mock_034\n  OutPut Exchange id: 1027\n\n  1026:Project\n  |  output columns:\n  |  21220 <-> [21220: mock_034, DATETIME, true]\n  |  21282 <-> [21282: xx_hash3_64, BIGINT, true]\n  |  21284 <-> [21284: xx_hash3_64, BIGINT, true]\n  |  29916 <-> cast([21281: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1025:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21255: mock_030, LARGEINT, true] = [21418: mock_030, LARGEINT, true]\n  |  output columns: 21220, 21281, 21282, 21284\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----1024:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21418: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1022:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21255: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 93, probe_expr = (CAST(21281: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(21281: xx_hash3_64 AS LARGEINT),21220: mock_034)\n     - filter_id = 94, probe_expr = (21220: mock_034), partition_exprs = (CAST(21281: xx_hash3_64 AS LARGEINT),21220: mock_034)\n\nPLAN FRAGMENT 256(F715)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21418: mock_030\n  OutPut Exchange id: 1024\n\n  1023:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 257(F713)\n\n  Input Partition: HASH_PARTITIONED: 21253: mock_028\n  OutPut Partition: HASH_PARTITIONED: 21255: mock_030\n  OutPut Exchange id: 1022\n\n  1021:Project\n  |  output columns:\n  |  21220 <-> [21220: mock_034, DATETIME, true]\n  |  21255 <-> [21255: mock_030, LARGEINT, true]\n  |  21281 <-> [21281: xx_hash3_64, BIGINT, true]\n  |  21282 <-> [21282: xx_hash3_64, BIGINT, true]\n  |  21284 <-> [21284: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1020:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21253: mock_028, LARGEINT, true] = [21346: mock_071, LARGEINT, true]\n  |  output columns: 21220, 21255, 21281, 21282, 21284\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1019:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21346: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1007:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21253: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 258(F711)\n\n  Input Partition: HASH_PARTITIONED: 21339: mock_075\n  OutPut Partition: HASH_PARTITIONED: 21346: mock_071\n  OutPut Exchange id: 1019\n\n  1018:Project\n  |  output columns:\n  |  21346 <-> [21346: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1017:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21339: mock_075, LARGEINT, true] = [21403: mock_075, LARGEINT, true]\n  |  output columns: 21346\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1016:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21403: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1014:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21339: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 259(F709)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21403: mock_075\n  OutPut Exchange id: 1016\n\n  1015:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 260(F707)\n\n  Input Partition: HASH_PARTITIONED: 21341: mock_077\n  OutPut Partition: HASH_PARTITIONED: 21339: mock_075\n  OutPut Exchange id: 1014\n\n  1013:Project\n  |  output columns:\n  |  21339 <-> [21339: mock_075, LARGEINT, true]\n  |  21346 <-> [21346: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  1012:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [21341: mock_077, LARGEINT, true] = [21374: mock_077, LARGEINT, true]\n  |  output columns: 21339, 21346\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----1011:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21374: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  1009:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [21341: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 261(F705)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21374: mock_077\n  OutPut Exchange id: 1011\n\n  1010:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 262(F703)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21341: mock_077\n  OutPut Exchange id: 1009\n\n  1008:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 263(F701)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21253: mock_028\n  OutPut Exchange id: 1007\n\n  1006:SELECT\n  |  predicates: 21284: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1005:Project\n  |  output columns:\n  |  21220 <-> [21220: mock_034, DATETIME, true]\n  |  21253 <-> [21253: mock_028, LARGEINT, true]\n  |  21255 <-> [21255: mock_030, LARGEINT, true]\n  |  21281 <-> xx_hash3_64[([21227: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  21282 <-> xx_hash3_64[([21251: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  21284 <-> xx_hash3_64[([21247: mock_039, VARCHAR(65535), true], [21246: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1004:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [21274: mock_024, BOOLEAN, true], [21271: mock_021, BOOLEAN, true], [21269: mock_018, BOOLEAN, true], [21273: mock_023, BOOLEAN, true], [21268: mock_017, BOOLEAN, true], [21272: mock_022, BOOLEAN, true], [21270: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=110.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 264(F698)\n\n  Input Partition: HASH_PARTITIONED: 29917: cast\n  OutPut Partition: HASH_PARTITIONED: 29913: cast\n  OutPut Exchange id: 1002\n\n  1001:Project\n  |  output columns:\n  |  20513 <-> [20513: id, VARCHAR(65535), true]\n  |  20533 <-> [20533: mock_017, BOOLEAN, true]\n  |  20534 <-> [20534: mock_018, BOOLEAN, true]\n  |  20535 <-> [20535: mock_020, BOOLEAN, true]\n  |  20536 <-> [20536: mock_021, BOOLEAN, true]\n  |  20537 <-> [20537: mock_022, BOOLEAN, true]\n  |  20538 <-> [20538: mock_023, BOOLEAN, true]\n  |  20539 <-> [20539: mock_024, BOOLEAN, true]\n  |  20549 <-> [20549: xx_hash3_64, BIGINT, true]\n  |  20788 <-> [20788: expr, BOOLEAN, true]\n  |  20789 <-> [20789: expr, BOOLEAN, true]\n  |  20791 <-> [20791: case, BIGINT, true]\n  |  20792 <-> [20792: case, BIGINT, true]\n  |  21163 <-> [21163: sum, DOUBLE, true]\n  |  29913 <-> cast([20549: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  1000:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29917: cast, LARGEINT, true] = [20795: mock_191, LARGEINT, true]\n  |  output columns: 20513, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20549, 20788, 20789, 20791, 20792, 21163\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----999:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20795: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  957:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29917: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 265(F669)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20795: mock_191\n  OutPut Exchange id: 999\n\n  998:Project\n  |  output columns:\n  |  20795 <-> [20795: mock_191, LARGEINT, false]\n  |  21163 <-> [21163: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  997:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [20795: mock_191, LARGEINT, false] = [29918: cast, LARGEINT, true]\n  |  output columns: 20795, 21163\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----996:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29918: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  958:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 266(F695)\n\n  Input Partition: HASH_PARTITIONED: 20914: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29918: cast\n  OutPut Exchange id: 996\n\n  995:Project\n  |  output columns:\n  |  21163 <-> [21163: sum, DOUBLE, true]\n  |  29918 <-> cast([20914: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  994:AGGREGATE (merge finalize)\n  |  aggregate: sum[([21163: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [20914: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  993:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20914: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 267(F694)\n\n  Input Partition: HASH_PARTITIONED: 29919: cast, 20851: mock_034\n  OutPut Partition: HASH_PARTITIONED: 20914: xx_hash3_64\n  OutPut Exchange id: 993\n\n  992:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([21161: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [20914: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  991:Project\n  |  output columns:\n  |  20914 <-> [20914: xx_hash3_64, BIGINT, true]\n  |  21161 <-> if[(((((20905: mock_024) AND (20902: mock_021)) AND ((20900: mock_018) AND (20904: mock_023))) AND (((20899: mock_017) AND (20903: mock_022)) AND ((20851: mock_034 = 21071: mock_157) AND (20851: mock_034 = 21122: mock_157)))) AND (20901: mock_020), if[(if[(if(21002: mock_133 = 21046: mock_133, 20878: mock_039, NULL) IS NULL, NULL, [20889: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [20870: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  990:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29919: cast, LARGEINT, true] = [21101: mock_189, LARGEINT, false]\n  |  equal join conjunct: [20851: mock_034, DATETIME, true] = [21122: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 91, build_expr = (21101: mock_189), remote = true\n  |  - filter_id = 92, build_expr = (21122: mock_157), remote = true\n  |  output columns: 20851, 20870, 20878, 20889, 20899, 20900, 20901, 20902, 20903, 20904, 20905, 20914, 21002, 21046, 21071, 21122\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----989:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21101: mock_189, LARGEINT, false], [21122: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  987:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29919: cast, LARGEINT, true], [20851: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 268(F692)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21101: mock_189, 21122: mock_157\n  OutPut Exchange id: 989\n\n  988:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 21122: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 269(F690)\n\n  Input Partition: HASH_PARTITIONED: 29920: cast, 20851: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29919: cast, 20851: mock_034\n  OutPut Exchange id: 987\n\n  986:Project\n  |  output columns:\n  |  20851 <-> [20851: mock_034, DATETIME, true]\n  |  20870 <-> [20870: mock_042, DOUBLE, true]\n  |  20878 <-> [20878: mock_039, VARCHAR(65535), true]\n  |  20889 <-> [20889: mock_007, BIGINT, true]\n  |  20899 <-> [20899: mock_017, BOOLEAN, true]\n  |  20900 <-> [20900: mock_018, BOOLEAN, true]\n  |  20901 <-> [20901: mock_020, BOOLEAN, true]\n  |  20902 <-> [20902: mock_021, BOOLEAN, true]\n  |  20903 <-> [20903: mock_022, BOOLEAN, true]\n  |  20904 <-> [20904: mock_023, BOOLEAN, true]\n  |  20905 <-> [20905: mock_024, BOOLEAN, true]\n  |  20914 <-> [20914: xx_hash3_64, BIGINT, true]\n  |  21002 <-> [21002: mock_133, VARCHAR(65535), true]\n  |  21046 <-> [21046: mock_133, VARCHAR(65535), true]\n  |  21071 <-> [21071: mock_157, DATETIME, true]\n  |  29919 <-> cast([20913: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  985:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29920: cast, LARGEINT, true] = [21050: mock_177, LARGEINT, false]\n  |  equal join conjunct: [20851: mock_034, DATETIME, true] = [21071: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 89, build_expr = (21050: mock_177), remote = true\n  |  - filter_id = 90, build_expr = (21071: mock_157), remote = true\n  |  output columns: 20851, 20870, 20878, 20889, 20899, 20900, 20901, 20902, 20903, 20904, 20905, 20913, 20914, 21002, 21046, 21071\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 92, probe_expr = (20851: mock_034), partition_exprs = (CAST(20913: xx_hash3_64 AS LARGEINT),20851: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----984:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21050: mock_177, LARGEINT, false], [21071: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  982:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29920: cast, LARGEINT, true], [20851: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 91, probe_expr = (CAST(20913: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(20913: xx_hash3_64 AS LARGEINT),20851: mock_034)\n\nPLAN FRAGMENT 270(F688)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21050: mock_177, 21071: mock_157\n  OutPut Exchange id: 984\n\n  983:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 21071: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 271(F686)\n\n  Input Partition: HASH_PARTITIONED: 20886: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29920: cast, 20851: mock_034\n  OutPut Exchange id: 982\n\n  981:Project\n  |  output columns:\n  |  20851 <-> [20851: mock_034, DATETIME, true]\n  |  20870 <-> [20870: mock_042, DOUBLE, true]\n  |  20878 <-> [20878: mock_039, VARCHAR(65535), true]\n  |  20889 <-> [20889: mock_007, BIGINT, true]\n  |  20899 <-> [20899: mock_017, BOOLEAN, true]\n  |  20900 <-> [20900: mock_018, BOOLEAN, true]\n  |  20901 <-> [20901: mock_020, BOOLEAN, true]\n  |  20902 <-> [20902: mock_021, BOOLEAN, true]\n  |  20903 <-> [20903: mock_022, BOOLEAN, true]\n  |  20904 <-> [20904: mock_023, BOOLEAN, true]\n  |  20905 <-> [20905: mock_024, BOOLEAN, true]\n  |  20913 <-> [20913: xx_hash3_64, BIGINT, true]\n  |  20914 <-> [20914: xx_hash3_64, BIGINT, true]\n  |  21002 <-> [21002: mock_133, VARCHAR(65535), true]\n  |  21046 <-> [21046: mock_133, VARCHAR(65535), true]\n  |  29920 <-> cast([20912: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  980:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20886: mock_030, LARGEINT, true] = [21049: mock_030, LARGEINT, true]\n  |  output columns: 20851, 20870, 20878, 20889, 20899, 20900, 20901, 20902, 20903, 20904, 20905, 20912, 20913, 20914, 21002, 21046\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----979:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21049: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  977:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20886: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 89, probe_expr = (CAST(20912: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(20912: xx_hash3_64 AS LARGEINT),20851: mock_034)\n     - filter_id = 90, probe_expr = (20851: mock_034), partition_exprs = (CAST(20912: xx_hash3_64 AS LARGEINT),20851: mock_034)\n\nPLAN FRAGMENT 272(F684)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21049: mock_030\n  OutPut Exchange id: 979\n\n  978:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 273(F682)\n\n  Input Partition: HASH_PARTITIONED: 20884: mock_028\n  OutPut Partition: HASH_PARTITIONED: 20886: mock_030\n  OutPut Exchange id: 977\n\n  976:Project\n  |  output columns:\n  |  20851 <-> [20851: mock_034, DATETIME, true]\n  |  20870 <-> [20870: mock_042, DOUBLE, true]\n  |  20878 <-> [20878: mock_039, VARCHAR(65535), true]\n  |  20886 <-> [20886: mock_030, LARGEINT, true]\n  |  20889 <-> [20889: mock_007, BIGINT, true]\n  |  20899 <-> [20899: mock_017, BOOLEAN, true]\n  |  20900 <-> [20900: mock_018, BOOLEAN, true]\n  |  20901 <-> [20901: mock_020, BOOLEAN, true]\n  |  20902 <-> [20902: mock_021, BOOLEAN, true]\n  |  20903 <-> [20903: mock_022, BOOLEAN, true]\n  |  20904 <-> [20904: mock_023, BOOLEAN, true]\n  |  20905 <-> [20905: mock_024, BOOLEAN, true]\n  |  20912 <-> [20912: xx_hash3_64, BIGINT, true]\n  |  20913 <-> [20913: xx_hash3_64, BIGINT, true]\n  |  20914 <-> [20914: xx_hash3_64, BIGINT, true]\n  |  21002 <-> [21002: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  975:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20884: mock_028, LARGEINT, true] = [20977: mock_071, LARGEINT, true]\n  |  output columns: 20851, 20870, 20878, 20886, 20889, 20899, 20900, 20901, 20902, 20903, 20904, 20905, 20912, 20913, 20914, 21002\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----974:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20977: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  962:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20884: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 274(F680)\n\n  Input Partition: HASH_PARTITIONED: 20970: mock_075\n  OutPut Partition: HASH_PARTITIONED: 20977: mock_071\n  OutPut Exchange id: 974\n\n  973:Project\n  |  output columns:\n  |  20977 <-> [20977: mock_071, LARGEINT, true]\n  |  21002 <-> [21002: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  972:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20970: mock_075, LARGEINT, true] = [21034: mock_075, LARGEINT, true]\n  |  output columns: 20977, 21002\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----971:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21034: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  969:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20970: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 275(F678)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21034: mock_075\n  OutPut Exchange id: 971\n\n  970:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 276(F676)\n\n  Input Partition: HASH_PARTITIONED: 20972: mock_077\n  OutPut Partition: HASH_PARTITIONED: 20970: mock_075\n  OutPut Exchange id: 969\n\n  968:Project\n  |  output columns:\n  |  20970 <-> [20970: mock_075, LARGEINT, true]\n  |  20977 <-> [20977: mock_071, LARGEINT, true]\n  |  21002 <-> [21002: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  967:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20972: mock_077, LARGEINT, true] = [21005: mock_077, LARGEINT, true]\n  |  output columns: 20970, 20977, 21002\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----966:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [21005: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  964:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20972: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 277(F674)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 21005: mock_077\n  OutPut Exchange id: 966\n\n  965:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 278(F672)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20972: mock_077\n  OutPut Exchange id: 964\n\n  963:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 279(F670)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20884: mock_028\n  OutPut Exchange id: 962\n\n  961:SELECT\n  |  predicates: 20914: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  960:Project\n  |  output columns:\n  |  20851 <-> [20851: mock_034, DATETIME, true]\n  |  20870 <-> [20870: mock_042, DOUBLE, true]\n  |  20878 <-> [20878: mock_039, VARCHAR(65535), true]\n  |  20884 <-> [20884: mock_028, LARGEINT, true]\n  |  20886 <-> [20886: mock_030, LARGEINT, true]\n  |  20889 <-> [20889: mock_007, BIGINT, true]\n  |  20899 <-> [20899: mock_017, BOOLEAN, true]\n  |  20900 <-> [20900: mock_018, BOOLEAN, true]\n  |  20901 <-> [20901: mock_020, BOOLEAN, true]\n  |  20902 <-> [20902: mock_021, BOOLEAN, true]\n  |  20903 <-> [20903: mock_022, BOOLEAN, true]\n  |  20904 <-> [20904: mock_023, BOOLEAN, true]\n  |  20905 <-> [20905: mock_024, BOOLEAN, true]\n  |  20912 <-> xx_hash3_64[([20858: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20913 <-> xx_hash3_64[([20882: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20914 <-> xx_hash3_64[([20876: mock_002, VARCHAR(65535), true], [20878: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  959:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [20905: mock_024, BOOLEAN, true], [20902: mock_021, BOOLEAN, true], [20900: mock_018, BOOLEAN, true], [20904: mock_023, BOOLEAN, true], [20899: mock_017, BOOLEAN, true], [20903: mock_022, BOOLEAN, true], [20901: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 280(F667)\n\n  Input Partition: HASH_PARTITIONED: 29921: cast, 20485: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29917: cast\n  OutPut Exchange id: 957\n\n  956:Project\n  |  output columns:\n  |  20513 <-> [20513: id, VARCHAR(65535), true]\n  |  20533 <-> [20533: mock_017, BOOLEAN, true]\n  |  20534 <-> [20534: mock_018, BOOLEAN, true]\n  |  20535 <-> [20535: mock_020, BOOLEAN, true]\n  |  20536 <-> [20536: mock_021, BOOLEAN, true]\n  |  20537 <-> [20537: mock_022, BOOLEAN, true]\n  |  20538 <-> [20538: mock_023, BOOLEAN, true]\n  |  20539 <-> [20539: mock_024, BOOLEAN, true]\n  |  20549 <-> [20549: xx_hash3_64, BIGINT, true]\n  |  20788 <-> [20485: mock_034, DATETIME, true] = [20705: mock_157, DATETIME, true]\n  |  20789 <-> [20485: mock_034, DATETIME, true] = [20756: mock_157, DATETIME, true]\n  |  20791 <-> if[(if(20636: mock_133 = 20680: mock_133, 20512: mock_039, NULL) IS NULL, NULL, [20523: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  20792 <-> if[(if(20636: mock_133 != 20680: mock_133, 20512: mock_039, NULL) IS NULL, NULL, [20522: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29917 <-> cast([20548: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  955:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29921: cast, LARGEINT, true] = [20735: mock_189, LARGEINT, false]\n  |  equal join conjunct: [20485: mock_034, DATETIME, true] = [20756: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 87, build_expr = (20735: mock_189), remote = true\n  |  - filter_id = 88, build_expr = (20756: mock_157), remote = true\n  |  output columns: 20485, 20512, 20513, 20522, 20523, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20548, 20549, 20636, 20680, 20705, 20756\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----954:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20735: mock_189, LARGEINT, false], [20756: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  952:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29921: cast, LARGEINT, true], [20485: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 281(F665)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20735: mock_189, 20756: mock_157\n  OutPut Exchange id: 954\n\n  953:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 20756: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 282(F663)\n\n  Input Partition: HASH_PARTITIONED: 29922: cast, 20485: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29921: cast, 20485: mock_034\n  OutPut Exchange id: 952\n\n  951:Project\n  |  output columns:\n  |  20485 <-> [20485: mock_034, DATETIME, true]\n  |  20512 <-> [20512: mock_039, VARCHAR(65535), true]\n  |  20513 <-> [20513: id, VARCHAR(65535), true]\n  |  20522 <-> [20522: mock_006, BIGINT, true]\n  |  20523 <-> [20523: mock_007, BIGINT, true]\n  |  20533 <-> [20533: mock_017, BOOLEAN, true]\n  |  20534 <-> [20534: mock_018, BOOLEAN, true]\n  |  20535 <-> [20535: mock_020, BOOLEAN, true]\n  |  20536 <-> [20536: mock_021, BOOLEAN, true]\n  |  20537 <-> [20537: mock_022, BOOLEAN, true]\n  |  20538 <-> [20538: mock_023, BOOLEAN, true]\n  |  20539 <-> [20539: mock_024, BOOLEAN, true]\n  |  20548 <-> [20548: xx_hash3_64, BIGINT, true]\n  |  20549 <-> [20549: xx_hash3_64, BIGINT, true]\n  |  20636 <-> [20636: mock_133, VARCHAR(65535), true]\n  |  20680 <-> [20680: mock_133, VARCHAR(65535), true]\n  |  20705 <-> [20705: mock_157, DATETIME, true]\n  |  29921 <-> cast([20547: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  950:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29922: cast, LARGEINT, true] = [20684: mock_177, LARGEINT, false]\n  |  equal join conjunct: [20485: mock_034, DATETIME, true] = [20705: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 85, build_expr = (20684: mock_177), remote = true\n  |  - filter_id = 86, build_expr = (20705: mock_157), remote = true\n  |  output columns: 20485, 20512, 20513, 20522, 20523, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20547, 20548, 20549, 20636, 20680, 20705\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 88, probe_expr = (20485: mock_034), partition_exprs = (CAST(20547: xx_hash3_64 AS LARGEINT),20485: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----949:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20684: mock_177, LARGEINT, false], [20705: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  947:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29922: cast, LARGEINT, true], [20485: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 87, probe_expr = (CAST(20547: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(20547: xx_hash3_64 AS LARGEINT),20485: mock_034)\n\nPLAN FRAGMENT 283(F661)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20684: mock_177, 20705: mock_157\n  OutPut Exchange id: 949\n\n  948:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 20705: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 284(F659)\n\n  Input Partition: HASH_PARTITIONED: 20520: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29922: cast, 20485: mock_034\n  OutPut Exchange id: 947\n\n  946:Project\n  |  output columns:\n  |  20485 <-> [20485: mock_034, DATETIME, true]\n  |  20512 <-> [20512: mock_039, VARCHAR(65535), true]\n  |  20513 <-> [20513: id, VARCHAR(65535), true]\n  |  20522 <-> [20522: mock_006, BIGINT, true]\n  |  20523 <-> [20523: mock_007, BIGINT, true]\n  |  20533 <-> [20533: mock_017, BOOLEAN, true]\n  |  20534 <-> [20534: mock_018, BOOLEAN, true]\n  |  20535 <-> [20535: mock_020, BOOLEAN, true]\n  |  20536 <-> [20536: mock_021, BOOLEAN, true]\n  |  20537 <-> [20537: mock_022, BOOLEAN, true]\n  |  20538 <-> [20538: mock_023, BOOLEAN, true]\n  |  20539 <-> [20539: mock_024, BOOLEAN, true]\n  |  20547 <-> [20547: xx_hash3_64, BIGINT, true]\n  |  20548 <-> [20548: xx_hash3_64, BIGINT, true]\n  |  20549 <-> [20549: xx_hash3_64, BIGINT, true]\n  |  20636 <-> [20636: mock_133, VARCHAR(65535), true]\n  |  20680 <-> [20680: mock_133, VARCHAR(65535), true]\n  |  29922 <-> cast([20546: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  945:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20520: mock_030, LARGEINT, true] = [20683: mock_030, LARGEINT, true]\n  |  output columns: 20485, 20512, 20513, 20522, 20523, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20546, 20547, 20548, 20549, 20636, 20680\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----944:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20683: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  942:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20520: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 85, probe_expr = (CAST(20546: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(20546: xx_hash3_64 AS LARGEINT),20485: mock_034)\n     - filter_id = 86, probe_expr = (20485: mock_034), partition_exprs = (CAST(20546: xx_hash3_64 AS LARGEINT),20485: mock_034)\n\nPLAN FRAGMENT 285(F657)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20683: mock_030\n  OutPut Exchange id: 944\n\n  943:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 286(F655)\n\n  Input Partition: HASH_PARTITIONED: 20518: mock_028\n  OutPut Partition: HASH_PARTITIONED: 20520: mock_030\n  OutPut Exchange id: 942\n\n  941:Project\n  |  output columns:\n  |  20485 <-> [20485: mock_034, DATETIME, true]\n  |  20512 <-> [20512: mock_039, VARCHAR(65535), true]\n  |  20513 <-> [20513: id, VARCHAR(65535), true]\n  |  20520 <-> [20520: mock_030, LARGEINT, true]\n  |  20522 <-> [20522: mock_006, BIGINT, true]\n  |  20523 <-> [20523: mock_007, BIGINT, true]\n  |  20533 <-> [20533: mock_017, BOOLEAN, true]\n  |  20534 <-> [20534: mock_018, BOOLEAN, true]\n  |  20535 <-> [20535: mock_020, BOOLEAN, true]\n  |  20536 <-> [20536: mock_021, BOOLEAN, true]\n  |  20537 <-> [20537: mock_022, BOOLEAN, true]\n  |  20538 <-> [20538: mock_023, BOOLEAN, true]\n  |  20539 <-> [20539: mock_024, BOOLEAN, true]\n  |  20546 <-> [20546: xx_hash3_64, BIGINT, true]\n  |  20547 <-> [20547: xx_hash3_64, BIGINT, true]\n  |  20548 <-> [20548: xx_hash3_64, BIGINT, true]\n  |  20549 <-> [20549: xx_hash3_64, BIGINT, true]\n  |  20636 <-> [20636: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  940:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20518: mock_028, LARGEINT, true] = [20611: mock_071, LARGEINT, true]\n  |  output columns: 20485, 20512, 20513, 20520, 20522, 20523, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20546, 20547, 20548, 20549, 20636\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----939:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20611: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  927:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20518: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 287(F653)\n\n  Input Partition: HASH_PARTITIONED: 20604: mock_075\n  OutPut Partition: HASH_PARTITIONED: 20611: mock_071\n  OutPut Exchange id: 939\n\n  938:Project\n  |  output columns:\n  |  20611 <-> [20611: mock_071, LARGEINT, true]\n  |  20636 <-> [20636: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  937:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20604: mock_075, LARGEINT, true] = [20668: mock_075, LARGEINT, true]\n  |  output columns: 20611, 20636\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----936:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20668: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  934:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20604: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 288(F651)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20668: mock_075\n  OutPut Exchange id: 936\n\n  935:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 289(F649)\n\n  Input Partition: HASH_PARTITIONED: 20606: mock_077\n  OutPut Partition: HASH_PARTITIONED: 20604: mock_075\n  OutPut Exchange id: 934\n\n  933:Project\n  |  output columns:\n  |  20604 <-> [20604: mock_075, LARGEINT, true]\n  |  20611 <-> [20611: mock_071, LARGEINT, true]\n  |  20636 <-> [20636: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  932:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20606: mock_077, LARGEINT, true] = [20639: mock_077, LARGEINT, true]\n  |  output columns: 20604, 20611, 20636\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----931:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20639: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  929:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20606: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 290(F647)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20639: mock_077\n  OutPut Exchange id: 931\n\n  930:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 291(F645)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20606: mock_077\n  OutPut Exchange id: 929\n\n  928:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 292(F643)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20518: mock_028\n  OutPut Exchange id: 927\n\n  926:SELECT\n  |  predicates: 20549: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  925:Project\n  |  output columns:\n  |  20485 <-> [20485: mock_034, DATETIME, true]\n  |  20512 <-> [20512: mock_039, VARCHAR(65535), true]\n  |  20513 <-> [20513: id, VARCHAR(65535), true]\n  |  20518 <-> [20518: mock_028, LARGEINT, true]\n  |  20520 <-> [20520: mock_030, LARGEINT, true]\n  |  20522 <-> [20522: mock_006, BIGINT, true]\n  |  20523 <-> [20523: mock_007, BIGINT, true]\n  |  20533 <-> [20533: mock_017, BOOLEAN, true]\n  |  20534 <-> [20534: mock_018, BOOLEAN, true]\n  |  20535 <-> [20535: mock_020, BOOLEAN, true]\n  |  20536 <-> [20536: mock_021, BOOLEAN, true]\n  |  20537 <-> [20537: mock_022, BOOLEAN, true]\n  |  20538 <-> [20538: mock_023, BOOLEAN, true]\n  |  20539 <-> [20539: mock_024, BOOLEAN, true]\n  |  20546 <-> xx_hash3_64[([20492: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20547 <-> xx_hash3_64[([20516: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20548 <-> xx_hash3_64[([20510: mock_002, VARCHAR(65535), true], [20512: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20549 <-> xx_hash3_64[([20512: mock_039, VARCHAR(65535), true], [20511: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  924:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [20539: mock_024, BOOLEAN, true], [20536: mock_021, BOOLEAN, true], [20534: mock_018, BOOLEAN, true], [20538: mock_023, BOOLEAN, true], [20533: mock_017, BOOLEAN, true], [20537: mock_022, BOOLEAN, true], [20535: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=148.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 293(F640)\n\n  Input Partition: HASH_PARTITIONED: 29924: cast\n  OutPut Partition: HASH_PARTITIONED: 29911: cast\n  OutPut Exchange id: 922\n\n  921:Project\n  |  output columns:\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19438 <-> [19438: xx_hash3_64, BIGINT, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19678 <-> [19678: expr, BOOLEAN, true]\n  |  19679 <-> [19679: expr, BOOLEAN, true]\n  |  19681 <-> [19681: case, BIGINT, true]\n  |  19682 <-> [19682: case, BIGINT, true]\n  |  20426 <-> if[([30108: case, DOUBLE, true] > [19440: expr, DOUBLE, true], [30108: case, DOUBLE, true] * cast(if[(CASE WHEN 30106: expr THEN 19681: case WHEN (30102: expr) AND (30103: coalesce != 1) THEN 0 ELSE 19682: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29911 <-> cast([19439: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30102 <-> [20053: sum, DOUBLE, true] > 0.0\n  |  30103 <-> coalesce[([19681: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30104 <-> [30103: coalesce, BIGINT, true] = 1\n  |  30105 <-> [30103: coalesce, BIGINT, true] = 0\n  |  30106 <-> (30102: expr) AND (30104: expr)\n  |  30107 <-> (30102: expr) AND (30105: expr)\n  |  30108 <-> CASE WHEN 30106: expr THEN 20422: sum WHEN 30107: expr THEN 0.0 ELSE 20423: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  920:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29923: cast, LARGEINT, true] = [20054: mock_193, LARGEINT, true]\n  |  output columns: 19403, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19438, 19439, 19440, 19441, 19678, 19679, 19681, 19682, 20053, 20422, 20423\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----919:Project\n  |    |  output columns:\n  |    |  20054 <-> [20054: mock_193, LARGEINT, false]\n  |    |  20422 <-> [20422: sum, DOUBLE, true]\n  |    |  20423 <-> [20423: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    918:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29924: cast, LARGEINT, true] = [20054: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 84, build_expr = (20054: mock_193), remote = true\n  |    |  output columns: 20054, 20422, 20423\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----917:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [20054: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    915:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29924: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  877:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29923: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 294(F638)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20054: mock_193\n  OutPut Exchange id: 917\n\n  916:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 295(F636)\n\n  Input Partition: HASH_PARTITIONED: 20174: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29924: cast\n  OutPut Exchange id: 915\n\n  914:Project\n  |  output columns:\n  |  20422 <-> [20422: sum, DOUBLE, true]\n  |  20423 <-> [20423: sum, DOUBLE, true]\n  |  29924 <-> cast([20174: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  913:AGGREGATE (merge finalize)\n  |  aggregate: sum[([20422: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([20423: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [20174: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 84, probe_expr = (CAST(20174: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  912:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20174: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 296(F635)\n\n  Input Partition: HASH_PARTITIONED: 29925: cast, 20110: mock_034\n  OutPut Partition: HASH_PARTITIONED: 20174: xx_hash3_64\n  OutPut Exchange id: 912\n\n  911:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([20420: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([20421: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [20174: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  910:Project\n  |  output columns:\n  |  20174 <-> [20174: xx_hash3_64, BIGINT, true]\n  |  20420 <-> if[([30118: expr, BOOLEAN, true], if[(if[(if(20261: mock_133 = 20305: mock_133, 20137: mock_039, NULL) IS NULL, NULL, [20148: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [20129: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  20421 <-> if[([30118: expr, BOOLEAN, true], if[(if[(if(20261: mock_133 != 20305: mock_133, 20137: mock_039, NULL) IS NULL, NULL, [20147: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [20129: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30112 <-> [20110: mock_034, DATETIME, true] = [20330: mock_157, DATETIME, true]\n  |  30113 <-> [20110: mock_034, DATETIME, true] = [20381: mock_157, DATETIME, true]\n  |  30114 <-> (30109: expr) AND (30110: expr)\n  |  30115 <-> (30112: expr) AND (30113: expr)\n  |  30116 <-> (30111: expr) AND (30115: expr)\n  |  30117 <-> (30114: expr) AND (30116: expr)\n  |  30118 <-> (30117: expr) AND (20160: mock_020)\n  |  30109 <-> (20164: mock_024) AND (20161: mock_021)\n  |  30110 <-> (20159: mock_018) AND (20163: mock_023)\n  |  30111 <-> (20158: mock_017) AND (20162: mock_022)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  909:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29925: cast, LARGEINT, true] = [20360: mock_189, LARGEINT, false]\n  |  equal join conjunct: [20110: mock_034, DATETIME, true] = [20381: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 82, build_expr = (20360: mock_189), remote = true\n  |  - filter_id = 83, build_expr = (20381: mock_157), remote = true\n  |  output columns: 20110, 20129, 20137, 20147, 20148, 20158, 20159, 20160, 20161, 20162, 20163, 20164, 20174, 20261, 20305, 20330, 20381\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----908:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20360: mock_189, LARGEINT, false], [20381: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  906:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29925: cast, LARGEINT, true], [20110: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 297(F633)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20360: mock_189, 20381: mock_157\n  OutPut Exchange id: 908\n\n  907:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 20381: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 298(F631)\n\n  Input Partition: HASH_PARTITIONED: 29926: cast, 20110: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29925: cast, 20110: mock_034\n  OutPut Exchange id: 906\n\n  905:Project\n  |  output columns:\n  |  20110 <-> [20110: mock_034, DATETIME, true]\n  |  20129 <-> [20129: mock_042, DOUBLE, true]\n  |  20137 <-> [20137: mock_039, VARCHAR(65535), true]\n  |  20147 <-> [20147: mock_006, BIGINT, true]\n  |  20148 <-> [20148: mock_007, BIGINT, true]\n  |  20158 <-> [20158: mock_017, BOOLEAN, true]\n  |  20159 <-> [20159: mock_018, BOOLEAN, true]\n  |  20160 <-> [20160: mock_020, BOOLEAN, true]\n  |  20161 <-> [20161: mock_021, BOOLEAN, true]\n  |  20162 <-> [20162: mock_022, BOOLEAN, true]\n  |  20163 <-> [20163: mock_023, BOOLEAN, true]\n  |  20164 <-> [20164: mock_024, BOOLEAN, true]\n  |  20174 <-> [20174: xx_hash3_64, BIGINT, true]\n  |  20261 <-> [20261: mock_133, VARCHAR(65535), true]\n  |  20305 <-> [20305: mock_133, VARCHAR(65535), true]\n  |  20330 <-> [20330: mock_157, DATETIME, true]\n  |  29925 <-> cast([20172: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  904:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29926: cast, LARGEINT, true] = [20309: mock_177, LARGEINT, false]\n  |  equal join conjunct: [20110: mock_034, DATETIME, true] = [20330: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 80, build_expr = (20309: mock_177), remote = true\n  |  - filter_id = 81, build_expr = (20330: mock_157), remote = true\n  |  output columns: 20110, 20129, 20137, 20147, 20148, 20158, 20159, 20160, 20161, 20162, 20163, 20164, 20172, 20174, 20261, 20305, 20330\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 83, probe_expr = (20110: mock_034), partition_exprs = (CAST(20172: xx_hash3_64 AS LARGEINT),20110: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----903:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20309: mock_177, LARGEINT, false], [20330: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  901:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29926: cast, LARGEINT, true], [20110: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 82, probe_expr = (CAST(20172: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(20172: xx_hash3_64 AS LARGEINT),20110: mock_034)\n\nPLAN FRAGMENT 299(F629)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20309: mock_177, 20330: mock_157\n  OutPut Exchange id: 903\n\n  902:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 20330: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 300(F627)\n\n  Input Partition: HASH_PARTITIONED: 20145: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29926: cast, 20110: mock_034\n  OutPut Exchange id: 901\n\n  900:Project\n  |  output columns:\n  |  20110 <-> [20110: mock_034, DATETIME, true]\n  |  20129 <-> [20129: mock_042, DOUBLE, true]\n  |  20137 <-> [20137: mock_039, VARCHAR(65535), true]\n  |  20147 <-> [20147: mock_006, BIGINT, true]\n  |  20148 <-> [20148: mock_007, BIGINT, true]\n  |  20158 <-> [20158: mock_017, BOOLEAN, true]\n  |  20159 <-> [20159: mock_018, BOOLEAN, true]\n  |  20160 <-> [20160: mock_020, BOOLEAN, true]\n  |  20161 <-> [20161: mock_021, BOOLEAN, true]\n  |  20162 <-> [20162: mock_022, BOOLEAN, true]\n  |  20163 <-> [20163: mock_023, BOOLEAN, true]\n  |  20164 <-> [20164: mock_024, BOOLEAN, true]\n  |  20172 <-> [20172: xx_hash3_64, BIGINT, true]\n  |  20174 <-> [20174: xx_hash3_64, BIGINT, true]\n  |  20261 <-> [20261: mock_133, VARCHAR(65535), true]\n  |  20305 <-> [20305: mock_133, VARCHAR(65535), true]\n  |  29926 <-> cast([20171: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  899:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20145: mock_030, LARGEINT, true] = [20308: mock_030, LARGEINT, true]\n  |  output columns: 20110, 20129, 20137, 20147, 20148, 20158, 20159, 20160, 20161, 20162, 20163, 20164, 20171, 20172, 20174, 20261, 20305\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----898:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20308: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  896:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20145: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 80, probe_expr = (CAST(20171: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(20171: xx_hash3_64 AS LARGEINT),20110: mock_034)\n     - filter_id = 81, probe_expr = (20110: mock_034), partition_exprs = (CAST(20171: xx_hash3_64 AS LARGEINT),20110: mock_034)\n\nPLAN FRAGMENT 301(F625)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20308: mock_030\n  OutPut Exchange id: 898\n\n  897:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 302(F623)\n\n  Input Partition: HASH_PARTITIONED: 20143: mock_028\n  OutPut Partition: HASH_PARTITIONED: 20145: mock_030\n  OutPut Exchange id: 896\n\n  895:Project\n  |  output columns:\n  |  20110 <-> [20110: mock_034, DATETIME, true]\n  |  20129 <-> [20129: mock_042, DOUBLE, true]\n  |  20137 <-> [20137: mock_039, VARCHAR(65535), true]\n  |  20145 <-> [20145: mock_030, LARGEINT, true]\n  |  20147 <-> [20147: mock_006, BIGINT, true]\n  |  20148 <-> [20148: mock_007, BIGINT, true]\n  |  20158 <-> [20158: mock_017, BOOLEAN, true]\n  |  20159 <-> [20159: mock_018, BOOLEAN, true]\n  |  20160 <-> [20160: mock_020, BOOLEAN, true]\n  |  20161 <-> [20161: mock_021, BOOLEAN, true]\n  |  20162 <-> [20162: mock_022, BOOLEAN, true]\n  |  20163 <-> [20163: mock_023, BOOLEAN, true]\n  |  20164 <-> [20164: mock_024, BOOLEAN, true]\n  |  20171 <-> [20171: xx_hash3_64, BIGINT, true]\n  |  20172 <-> [20172: xx_hash3_64, BIGINT, true]\n  |  20174 <-> [20174: xx_hash3_64, BIGINT, true]\n  |  20261 <-> [20261: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  894:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20143: mock_028, LARGEINT, true] = [20236: mock_071, LARGEINT, true]\n  |  output columns: 20110, 20129, 20137, 20145, 20147, 20148, 20158, 20159, 20160, 20161, 20162, 20163, 20164, 20171, 20172, 20174, 20261\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----893:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20236: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  881:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20143: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 303(F621)\n\n  Input Partition: HASH_PARTITIONED: 20229: mock_075\n  OutPut Partition: HASH_PARTITIONED: 20236: mock_071\n  OutPut Exchange id: 893\n\n  892:Project\n  |  output columns:\n  |  20236 <-> [20236: mock_071, LARGEINT, true]\n  |  20261 <-> [20261: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  891:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20229: mock_075, LARGEINT, true] = [20293: mock_075, LARGEINT, true]\n  |  output columns: 20236, 20261\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----890:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20293: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  888:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20229: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 304(F619)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20293: mock_075\n  OutPut Exchange id: 890\n\n  889:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 305(F617)\n\n  Input Partition: HASH_PARTITIONED: 20231: mock_077\n  OutPut Partition: HASH_PARTITIONED: 20229: mock_075\n  OutPut Exchange id: 888\n\n  887:Project\n  |  output columns:\n  |  20229 <-> [20229: mock_075, LARGEINT, true]\n  |  20236 <-> [20236: mock_071, LARGEINT, true]\n  |  20261 <-> [20261: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  886:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [20231: mock_077, LARGEINT, true] = [20264: mock_077, LARGEINT, true]\n  |  output columns: 20229, 20236, 20261\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----885:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [20264: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  883:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [20231: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 306(F615)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20264: mock_077\n  OutPut Exchange id: 885\n\n  884:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 307(F613)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20231: mock_077\n  OutPut Exchange id: 883\n\n  882:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 308(F611)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 20143: mock_028\n  OutPut Exchange id: 881\n\n  880:SELECT\n  |  predicates: 20174: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  879:Project\n  |  output columns:\n  |  20110 <-> [20110: mock_034, DATETIME, true]\n  |  20129 <-> [20129: mock_042, DOUBLE, true]\n  |  20137 <-> [20137: mock_039, VARCHAR(65535), true]\n  |  20143 <-> [20143: mock_028, LARGEINT, true]\n  |  20145 <-> [20145: mock_030, LARGEINT, true]\n  |  20147 <-> [20147: mock_006, BIGINT, true]\n  |  20148 <-> [20148: mock_007, BIGINT, true]\n  |  20158 <-> [20158: mock_017, BOOLEAN, true]\n  |  20159 <-> [20159: mock_018, BOOLEAN, true]\n  |  20160 <-> [20160: mock_020, BOOLEAN, true]\n  |  20161 <-> [20161: mock_021, BOOLEAN, true]\n  |  20162 <-> [20162: mock_022, BOOLEAN, true]\n  |  20163 <-> [20163: mock_023, BOOLEAN, true]\n  |  20164 <-> [20164: mock_024, BOOLEAN, true]\n  |  20171 <-> xx_hash3_64[([20117: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20172 <-> xx_hash3_64[([20141: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  20174 <-> xx_hash3_64[([20137: mock_039, VARCHAR(65535), true], [20136: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  878:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [20164: mock_024, BOOLEAN, true], [20161: mock_021, BOOLEAN, true], [20159: mock_018, BOOLEAN, true], [20163: mock_023, BOOLEAN, true], [20158: mock_017, BOOLEAN, true], [20162: mock_022, BOOLEAN, true], [20160: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=134.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 309(F609)\n\n  Input Partition: HASH_PARTITIONED: 29927: cast\n  OutPut Partition: HASH_PARTITIONED: 29923: cast\n  OutPut Exchange id: 877\n\n  876:Project\n  |  output columns:\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19438 <-> [19438: xx_hash3_64, BIGINT, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19440 <-> [19440: expr, DOUBLE, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19678 <-> [19678: expr, BOOLEAN, true]\n  |  19679 <-> [19679: expr, BOOLEAN, true]\n  |  19681 <-> [19681: case, BIGINT, true]\n  |  19682 <-> [19682: case, BIGINT, true]\n  |  20053 <-> [20053: sum, DOUBLE, true]\n  |  29923 <-> cast([19439: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  875:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29927: cast, LARGEINT, true] = [19685: mock_191, LARGEINT, true]\n  |  output columns: 19403, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19438, 19439, 19440, 19441, 19678, 19679, 19681, 19682, 20053\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----874:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19685: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  832:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29927: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 310(F580)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19685: mock_191\n  OutPut Exchange id: 874\n\n  873:Project\n  |  output columns:\n  |  19685 <-> [19685: mock_191, LARGEINT, false]\n  |  20053 <-> [20053: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  872:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [19685: mock_191, LARGEINT, false] = [29928: cast, LARGEINT, true]\n  |  output columns: 19685, 20053\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----871:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29928: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  833:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 311(F606)\n\n  Input Partition: HASH_PARTITIONED: 19804: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29928: cast\n  OutPut Exchange id: 871\n\n  870:Project\n  |  output columns:\n  |  20053 <-> [20053: sum, DOUBLE, true]\n  |  29928 <-> cast([19804: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  869:AGGREGATE (merge finalize)\n  |  aggregate: sum[([20053: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [19804: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  868:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19804: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 312(F605)\n\n  Input Partition: HASH_PARTITIONED: 29929: cast, 19741: mock_034\n  OutPut Partition: HASH_PARTITIONED: 19804: xx_hash3_64\n  OutPut Exchange id: 868\n\n  867:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([20051: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [19804: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  866:Project\n  |  output columns:\n  |  19804 <-> [19804: xx_hash3_64, BIGINT, true]\n  |  20051 <-> if[(((((19795: mock_024) AND (19792: mock_021)) AND ((19790: mock_018) AND (19794: mock_023))) AND (((19789: mock_017) AND (19793: mock_022)) AND ((19741: mock_034 = 19961: mock_157) AND (19741: mock_034 = 20012: mock_157)))) AND (19791: mock_020), if[(if[(if(19892: mock_133 = 19936: mock_133, 19768: mock_039, NULL) IS NULL, NULL, [19779: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [19760: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  865:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29929: cast, LARGEINT, true] = [19991: mock_189, LARGEINT, false]\n  |  equal join conjunct: [19741: mock_034, DATETIME, true] = [20012: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 78, build_expr = (19991: mock_189), remote = true\n  |  - filter_id = 79, build_expr = (20012: mock_157), remote = true\n  |  output columns: 19741, 19760, 19768, 19779, 19789, 19790, 19791, 19792, 19793, 19794, 19795, 19804, 19892, 19936, 19961, 20012\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----864:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19991: mock_189, LARGEINT, false], [20012: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  862:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29929: cast, LARGEINT, true], [19741: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 313(F603)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19991: mock_189, 20012: mock_157\n  OutPut Exchange id: 864\n\n  863:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 20012: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 314(F601)\n\n  Input Partition: HASH_PARTITIONED: 29930: cast, 19741: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29929: cast, 19741: mock_034\n  OutPut Exchange id: 862\n\n  861:Project\n  |  output columns:\n  |  19741 <-> [19741: mock_034, DATETIME, true]\n  |  19760 <-> [19760: mock_042, DOUBLE, true]\n  |  19768 <-> [19768: mock_039, VARCHAR(65535), true]\n  |  19779 <-> [19779: mock_007, BIGINT, true]\n  |  19789 <-> [19789: mock_017, BOOLEAN, true]\n  |  19790 <-> [19790: mock_018, BOOLEAN, true]\n  |  19791 <-> [19791: mock_020, BOOLEAN, true]\n  |  19792 <-> [19792: mock_021, BOOLEAN, true]\n  |  19793 <-> [19793: mock_022, BOOLEAN, true]\n  |  19794 <-> [19794: mock_023, BOOLEAN, true]\n  |  19795 <-> [19795: mock_024, BOOLEAN, true]\n  |  19804 <-> [19804: xx_hash3_64, BIGINT, true]\n  |  19892 <-> [19892: mock_133, VARCHAR(65535), true]\n  |  19936 <-> [19936: mock_133, VARCHAR(65535), true]\n  |  19961 <-> [19961: mock_157, DATETIME, true]\n  |  29929 <-> cast([19803: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  860:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29930: cast, LARGEINT, true] = [19940: mock_177, LARGEINT, false]\n  |  equal join conjunct: [19741: mock_034, DATETIME, true] = [19961: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 76, build_expr = (19940: mock_177), remote = true\n  |  - filter_id = 77, build_expr = (19961: mock_157), remote = true\n  |  output columns: 19741, 19760, 19768, 19779, 19789, 19790, 19791, 19792, 19793, 19794, 19795, 19803, 19804, 19892, 19936, 19961\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 79, probe_expr = (19741: mock_034), partition_exprs = (CAST(19803: xx_hash3_64 AS LARGEINT),19741: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----859:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19940: mock_177, LARGEINT, false], [19961: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  857:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29930: cast, LARGEINT, true], [19741: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 78, probe_expr = (CAST(19803: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(19803: xx_hash3_64 AS LARGEINT),19741: mock_034)\n\nPLAN FRAGMENT 315(F599)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19940: mock_177, 19961: mock_157\n  OutPut Exchange id: 859\n\n  858:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 19961: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 316(F597)\n\n  Input Partition: HASH_PARTITIONED: 19776: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29930: cast, 19741: mock_034\n  OutPut Exchange id: 857\n\n  856:Project\n  |  output columns:\n  |  19741 <-> [19741: mock_034, DATETIME, true]\n  |  19760 <-> [19760: mock_042, DOUBLE, true]\n  |  19768 <-> [19768: mock_039, VARCHAR(65535), true]\n  |  19779 <-> [19779: mock_007, BIGINT, true]\n  |  19789 <-> [19789: mock_017, BOOLEAN, true]\n  |  19790 <-> [19790: mock_018, BOOLEAN, true]\n  |  19791 <-> [19791: mock_020, BOOLEAN, true]\n  |  19792 <-> [19792: mock_021, BOOLEAN, true]\n  |  19793 <-> [19793: mock_022, BOOLEAN, true]\n  |  19794 <-> [19794: mock_023, BOOLEAN, true]\n  |  19795 <-> [19795: mock_024, BOOLEAN, true]\n  |  19803 <-> [19803: xx_hash3_64, BIGINT, true]\n  |  19804 <-> [19804: xx_hash3_64, BIGINT, true]\n  |  19892 <-> [19892: mock_133, VARCHAR(65535), true]\n  |  19936 <-> [19936: mock_133, VARCHAR(65535), true]\n  |  29930 <-> cast([19802: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  855:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19776: mock_030, LARGEINT, true] = [19939: mock_030, LARGEINT, true]\n  |  output columns: 19741, 19760, 19768, 19779, 19789, 19790, 19791, 19792, 19793, 19794, 19795, 19802, 19803, 19804, 19892, 19936\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----854:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19939: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  852:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19776: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 76, probe_expr = (CAST(19802: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(19802: xx_hash3_64 AS LARGEINT),19741: mock_034)\n     - filter_id = 77, probe_expr = (19741: mock_034), partition_exprs = (CAST(19802: xx_hash3_64 AS LARGEINT),19741: mock_034)\n\nPLAN FRAGMENT 317(F595)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19939: mock_030\n  OutPut Exchange id: 854\n\n  853:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 318(F593)\n\n  Input Partition: HASH_PARTITIONED: 19774: mock_028\n  OutPut Partition: HASH_PARTITIONED: 19776: mock_030\n  OutPut Exchange id: 852\n\n  851:Project\n  |  output columns:\n  |  19741 <-> [19741: mock_034, DATETIME, true]\n  |  19760 <-> [19760: mock_042, DOUBLE, true]\n  |  19768 <-> [19768: mock_039, VARCHAR(65535), true]\n  |  19776 <-> [19776: mock_030, LARGEINT, true]\n  |  19779 <-> [19779: mock_007, BIGINT, true]\n  |  19789 <-> [19789: mock_017, BOOLEAN, true]\n  |  19790 <-> [19790: mock_018, BOOLEAN, true]\n  |  19791 <-> [19791: mock_020, BOOLEAN, true]\n  |  19792 <-> [19792: mock_021, BOOLEAN, true]\n  |  19793 <-> [19793: mock_022, BOOLEAN, true]\n  |  19794 <-> [19794: mock_023, BOOLEAN, true]\n  |  19795 <-> [19795: mock_024, BOOLEAN, true]\n  |  19802 <-> [19802: xx_hash3_64, BIGINT, true]\n  |  19803 <-> [19803: xx_hash3_64, BIGINT, true]\n  |  19804 <-> [19804: xx_hash3_64, BIGINT, true]\n  |  19892 <-> [19892: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  850:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19774: mock_028, LARGEINT, true] = [19867: mock_071, LARGEINT, true]\n  |  output columns: 19741, 19760, 19768, 19776, 19779, 19789, 19790, 19791, 19792, 19793, 19794, 19795, 19802, 19803, 19804, 19892\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----849:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19867: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  837:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19774: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 319(F591)\n\n  Input Partition: HASH_PARTITIONED: 19860: mock_075\n  OutPut Partition: HASH_PARTITIONED: 19867: mock_071\n  OutPut Exchange id: 849\n\n  848:Project\n  |  output columns:\n  |  19867 <-> [19867: mock_071, LARGEINT, true]\n  |  19892 <-> [19892: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  847:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19860: mock_075, LARGEINT, true] = [19924: mock_075, LARGEINT, true]\n  |  output columns: 19867, 19892\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----846:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19924: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  844:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19860: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 320(F589)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19924: mock_075\n  OutPut Exchange id: 846\n\n  845:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 321(F587)\n\n  Input Partition: HASH_PARTITIONED: 19862: mock_077\n  OutPut Partition: HASH_PARTITIONED: 19860: mock_075\n  OutPut Exchange id: 844\n\n  843:Project\n  |  output columns:\n  |  19860 <-> [19860: mock_075, LARGEINT, true]\n  |  19867 <-> [19867: mock_071, LARGEINT, true]\n  |  19892 <-> [19892: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  842:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19862: mock_077, LARGEINT, true] = [19895: mock_077, LARGEINT, true]\n  |  output columns: 19860, 19867, 19892\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----841:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19895: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  839:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19862: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 322(F585)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19895: mock_077\n  OutPut Exchange id: 841\n\n  840:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 323(F583)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19862: mock_077\n  OutPut Exchange id: 839\n\n  838:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 324(F581)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19774: mock_028\n  OutPut Exchange id: 837\n\n  836:SELECT\n  |  predicates: 19804: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  835:Project\n  |  output columns:\n  |  19741 <-> [19741: mock_034, DATETIME, true]\n  |  19760 <-> [19760: mock_042, DOUBLE, true]\n  |  19768 <-> [19768: mock_039, VARCHAR(65535), true]\n  |  19774 <-> [19774: mock_028, LARGEINT, true]\n  |  19776 <-> [19776: mock_030, LARGEINT, true]\n  |  19779 <-> [19779: mock_007, BIGINT, true]\n  |  19789 <-> [19789: mock_017, BOOLEAN, true]\n  |  19790 <-> [19790: mock_018, BOOLEAN, true]\n  |  19791 <-> [19791: mock_020, BOOLEAN, true]\n  |  19792 <-> [19792: mock_021, BOOLEAN, true]\n  |  19793 <-> [19793: mock_022, BOOLEAN, true]\n  |  19794 <-> [19794: mock_023, BOOLEAN, true]\n  |  19795 <-> [19795: mock_024, BOOLEAN, true]\n  |  19802 <-> xx_hash3_64[([19748: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19803 <-> xx_hash3_64[([19772: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19804 <-> xx_hash3_64[([19766: mock_002, VARCHAR(65535), true], [19768: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  834:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [19795: mock_024, BOOLEAN, true], [19792: mock_021, BOOLEAN, true], [19790: mock_018, BOOLEAN, true], [19794: mock_023, BOOLEAN, true], [19789: mock_017, BOOLEAN, true], [19793: mock_022, BOOLEAN, true], [19791: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 325(F578)\n\n  Input Partition: HASH_PARTITIONED: 29931: cast, 19375: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29927: cast\n  OutPut Exchange id: 832\n\n  831:Project\n  |  output columns:\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19438 <-> [19438: xx_hash3_64, BIGINT, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19440 <-> [19440: expr, DOUBLE, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19678 <-> [19375: mock_034, DATETIME, true] = [19595: mock_157, DATETIME, true]\n  |  19679 <-> [19375: mock_034, DATETIME, true] = [19646: mock_157, DATETIME, true]\n  |  19681 <-> if[(if(19526: mock_133 = 19570: mock_133, 19402: mock_039, NULL) IS NULL, NULL, [19413: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  19682 <-> if[(if(19526: mock_133 != 19570: mock_133, 19402: mock_039, NULL) IS NULL, NULL, [19412: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29927 <-> cast([19438: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  830:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29931: cast, LARGEINT, true] = [19625: mock_189, LARGEINT, false]\n  |  equal join conjunct: [19375: mock_034, DATETIME, true] = [19646: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 74, build_expr = (19625: mock_189), remote = true\n  |  - filter_id = 75, build_expr = (19646: mock_157), remote = true\n  |  output columns: 19375, 19402, 19403, 19412, 19413, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19438, 19439, 19440, 19441, 19526, 19570, 19595, 19646\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----829:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19625: mock_189, LARGEINT, false], [19646: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  827:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29931: cast, LARGEINT, true], [19375: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 326(F576)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19625: mock_189, 19646: mock_157\n  OutPut Exchange id: 829\n\n  828:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 19646: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 327(F574)\n\n  Input Partition: HASH_PARTITIONED: 29932: cast, 19375: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29931: cast, 19375: mock_034\n  OutPut Exchange id: 827\n\n  826:Project\n  |  output columns:\n  |  19375 <-> [19375: mock_034, DATETIME, true]\n  |  19402 <-> [19402: mock_039, VARCHAR(65535), true]\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19412 <-> [19412: mock_006, BIGINT, true]\n  |  19413 <-> [19413: mock_007, BIGINT, true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19438 <-> [19438: xx_hash3_64, BIGINT, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19440 <-> [19440: expr, DOUBLE, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19526 <-> [19526: mock_133, VARCHAR(65535), true]\n  |  19570 <-> [19570: mock_133, VARCHAR(65535), true]\n  |  19595 <-> [19595: mock_157, DATETIME, true]\n  |  29931 <-> cast([19437: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  825:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29932: cast, LARGEINT, true] = [19574: mock_177, LARGEINT, false]\n  |  equal join conjunct: [19375: mock_034, DATETIME, true] = [19595: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 72, build_expr = (19574: mock_177), remote = true\n  |  - filter_id = 73, build_expr = (19595: mock_157), remote = true\n  |  output columns: 19375, 19402, 19403, 19412, 19413, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19437, 19438, 19439, 19440, 19441, 19526, 19570, 19595\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 75, probe_expr = (19375: mock_034), partition_exprs = (CAST(19437: xx_hash3_64 AS LARGEINT),19375: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----824:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19574: mock_177, LARGEINT, false], [19595: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  822:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29932: cast, LARGEINT, true], [19375: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 74, probe_expr = (CAST(19437: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(19437: xx_hash3_64 AS LARGEINT),19375: mock_034)\n\nPLAN FRAGMENT 328(F572)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19574: mock_177, 19595: mock_157\n  OutPut Exchange id: 824\n\n  823:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 19595: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 329(F570)\n\n  Input Partition: HASH_PARTITIONED: 19410: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29932: cast, 19375: mock_034\n  OutPut Exchange id: 822\n\n  821:Project\n  |  output columns:\n  |  19375 <-> [19375: mock_034, DATETIME, true]\n  |  19402 <-> [19402: mock_039, VARCHAR(65535), true]\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19412 <-> [19412: mock_006, BIGINT, true]\n  |  19413 <-> [19413: mock_007, BIGINT, true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19437 <-> [19437: xx_hash3_64, BIGINT, true]\n  |  19438 <-> [19438: xx_hash3_64, BIGINT, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19440 <-> [19440: expr, DOUBLE, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19526 <-> [19526: mock_133, VARCHAR(65535), true]\n  |  19570 <-> [19570: mock_133, VARCHAR(65535), true]\n  |  29932 <-> cast([19436: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  820:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19410: mock_030, LARGEINT, true] = [19573: mock_030, LARGEINT, true]\n  |  output columns: 19375, 19402, 19403, 19412, 19413, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19436, 19437, 19438, 19439, 19440, 19441, 19526, 19570\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----819:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19573: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  817:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19410: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 72, probe_expr = (CAST(19436: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(19436: xx_hash3_64 AS LARGEINT),19375: mock_034)\n     - filter_id = 73, probe_expr = (19375: mock_034), partition_exprs = (CAST(19436: xx_hash3_64 AS LARGEINT),19375: mock_034)\n\nPLAN FRAGMENT 330(F568)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19573: mock_030\n  OutPut Exchange id: 819\n\n  818:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 331(F566)\n\n  Input Partition: HASH_PARTITIONED: 19408: mock_028\n  OutPut Partition: HASH_PARTITIONED: 19410: mock_030\n  OutPut Exchange id: 817\n\n  816:Project\n  |  output columns:\n  |  19375 <-> [19375: mock_034, DATETIME, true]\n  |  19402 <-> [19402: mock_039, VARCHAR(65535), true]\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19410 <-> [19410: mock_030, LARGEINT, true]\n  |  19412 <-> [19412: mock_006, BIGINT, true]\n  |  19413 <-> [19413: mock_007, BIGINT, true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19436 <-> [19436: xx_hash3_64, BIGINT, true]\n  |  19437 <-> [19437: xx_hash3_64, BIGINT, true]\n  |  19438 <-> [19438: xx_hash3_64, BIGINT, true]\n  |  19439 <-> [19439: xx_hash3_64, BIGINT, true]\n  |  19440 <-> [19440: expr, DOUBLE, true]\n  |  19441 <-> [19441: expr, BOOLEAN, true]\n  |  19526 <-> [19526: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  815:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19408: mock_028, LARGEINT, true] = [19501: mock_071, LARGEINT, true]\n  |  output columns: 19375, 19402, 19403, 19410, 19412, 19413, 19423, 19424, 19425, 19426, 19427, 19428, 19429, 19436, 19437, 19438, 19439, 19440, 19441, 19526\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----814:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19501: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  802:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19408: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 332(F564)\n\n  Input Partition: HASH_PARTITIONED: 19494: mock_075\n  OutPut Partition: HASH_PARTITIONED: 19501: mock_071\n  OutPut Exchange id: 814\n\n  813:Project\n  |  output columns:\n  |  19501 <-> [19501: mock_071, LARGEINT, true]\n  |  19526 <-> [19526: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  812:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19494: mock_075, LARGEINT, true] = [19558: mock_075, LARGEINT, true]\n  |  output columns: 19501, 19526\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----811:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19558: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  809:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19494: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 333(F562)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19558: mock_075\n  OutPut Exchange id: 811\n\n  810:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 334(F560)\n\n  Input Partition: HASH_PARTITIONED: 19496: mock_077\n  OutPut Partition: HASH_PARTITIONED: 19494: mock_075\n  OutPut Exchange id: 809\n\n  808:Project\n  |  output columns:\n  |  19494 <-> [19494: mock_075, LARGEINT, true]\n  |  19501 <-> [19501: mock_071, LARGEINT, true]\n  |  19526 <-> [19526: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  807:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19496: mock_077, LARGEINT, true] = [19529: mock_077, LARGEINT, true]\n  |  output columns: 19494, 19501, 19526\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----806:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19529: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  804:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19496: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 335(F558)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19529: mock_077\n  OutPut Exchange id: 806\n\n  805:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 336(F556)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19496: mock_077\n  OutPut Exchange id: 804\n\n  803:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 337(F554)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19408: mock_028\n  OutPut Exchange id: 802\n\n  801:SELECT\n  |  predicates: 19439: xx_hash3_64 IS NOT NULL, 19441: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  800:Project\n  |  output columns:\n  |  19375 <-> [19375: mock_034, DATETIME, true]\n  |  19402 <-> [19402: mock_039, VARCHAR(65535), true]\n  |  19403 <-> [19403: id, VARCHAR(65535), true]\n  |  19408 <-> [19408: mock_028, LARGEINT, true]\n  |  19410 <-> [19410: mock_030, LARGEINT, true]\n  |  19412 <-> [19412: mock_006, BIGINT, true]\n  |  19413 <-> [19413: mock_007, BIGINT, true]\n  |  19423 <-> [19423: mock_017, BOOLEAN, true]\n  |  19424 <-> [19424: mock_018, BOOLEAN, true]\n  |  19425 <-> [19425: mock_020, BOOLEAN, true]\n  |  19426 <-> [19426: mock_021, BOOLEAN, true]\n  |  19427 <-> [19427: mock_022, BOOLEAN, true]\n  |  19428 <-> [19428: mock_023, BOOLEAN, true]\n  |  19429 <-> [19429: mock_024, BOOLEAN, true]\n  |  19436 <-> xx_hash3_64[([19382: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19437 <-> xx_hash3_64[([19406: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19438 <-> xx_hash3_64[([19400: mock_002, VARCHAR(65535), true], [19402: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19439 <-> xx_hash3_64[([19402: mock_039, VARCHAR(65535), true], [19401: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19440 <-> [19381: mock_035, DOUBLE, true] * 0.0 * 3.0\n  |  19441 <-> [19392: mock_055, DOUBLE, true] + [19394: mock_042, DOUBLE, true] + if[(19388: mock_046 IS NULL, 0.0, [19388: mock_046, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] * 365.0 / if[(((19390: mock_005 IS NULL) OR (19390: mock_005 < 0.0)) AND (19398: mock_054 != 'N'), NULL, [19390: mock_005, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] < 3.0416666666666668E10\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  799:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [19429: mock_024, BOOLEAN, true], [19426: mock_021, BOOLEAN, true], [19424: mock_018, BOOLEAN, true], [19428: mock_023, BOOLEAN, true], [19423: mock_017, BOOLEAN, true], [19427: mock_022, BOOLEAN, true], [19425: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=212.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n     * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 338(F551)\n\n  Input Partition: HASH_PARTITIONED: 29934: cast\n  OutPut Partition: HASH_PARTITIONED: 29861: cast\n  OutPut Exchange id: 797\n\n  796:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12989: expr, BOOLEAN, true]\n  |  12990 <-> [12990: expr, BOOLEAN, true]\n  |  12992 <-> [12992: case, BIGINT, true]\n  |  12993 <-> [12993: case, BIGINT, true]\n  |  12994 <-> [12994: case, DOUBLE, true]\n  |  12995 <-> [12995: case, DOUBLE, true]\n  |  14854 <-> [14854: expr, BOOLEAN, true]\n  |  19316 <-> if[([30009: case, DOUBLE, true] > [12751: expr, DOUBLE, true], [30009: case, DOUBLE, true] * cast(if[(CASE WHEN 30007: expr THEN 12992: case WHEN (30003: expr) AND (30004: coalesce != 1) THEN 0 ELSE 12993: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29861 <-> cast([12750: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30003 <-> [17083: sum, DOUBLE, true] > 0.0\n  |  30004 <-> coalesce[([12992: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30005 <-> [30004: coalesce, BIGINT, true] = 1\n  |  30006 <-> [30004: coalesce, BIGINT, true] = 0\n  |  30007 <-> (30003: expr) AND (30005: expr)\n  |  30008 <-> (30003: expr) AND (30006: expr)\n  |  30009 <-> CASE WHEN 30007: expr THEN 19312: sum WHEN 30008: expr THEN 0.0 ELSE 19313: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  795:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29933: cast, LARGEINT, true] = [17084: mock_193, LARGEINT, true]\n  |  output columns: 12714, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12854, 12989, 12990, 12992, 12993, 12994, 12995, 14854, 17083, 19312, 19313\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----794:Project\n  |    |  output columns:\n  |    |  17084 <-> [17084: mock_193, LARGEINT, false]\n  |    |  19312 <-> [19312: sum, DOUBLE, true]\n  |    |  19313 <-> [19313: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    793:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29934: cast, LARGEINT, true] = [17084: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 71, build_expr = (17084: mock_193), remote = true\n  |    |  output columns: 17084, 19312, 19313\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----792:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [17084: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    790:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29934: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  527:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29933: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 339(F549)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17084: mock_193\n  OutPut Exchange id: 792\n\n  791:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 340(F547)\n\n  Input Partition: HASH_PARTITIONED: 17204: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29934: cast\n  OutPut Exchange id: 790\n\n  789:Project\n  |  output columns:\n  |  19312 <-> [19312: sum, DOUBLE, true]\n  |  19313 <-> [19313: sum, DOUBLE, true]\n  |  29934 <-> cast([17204: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  788:AGGREGATE (merge finalize)\n  |  aggregate: sum[([19313: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([19312: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [17204: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 71, probe_expr = (CAST(17204: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  787:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17204: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 341(F546)\n\n  Input Partition: HASH_PARTITIONED: 29935: cast\n  OutPut Partition: HASH_PARTITIONED: 17204: xx_hash3_64\n  OutPut Exchange id: 787\n\n  786:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([19311: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([19310: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [17204: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  785:Project\n  |  output columns:\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  19310 <-> if[([30072: expr, BOOLEAN, true], [17448: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  19311 <-> if[([30072: expr, BOOLEAN, true], [17449: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30060 <-> (17194: mock_024) AND (17191: mock_021)\n  |  30061 <-> (17189: mock_018) AND (17193: mock_023)\n  |  30062 <-> (17188: mock_017) AND (17192: mock_022)\n  |  30063 <-> (17443: expr) AND (17444: expr)\n  |  30064 <-> cast([19306: coalesce, BIGINT, true] as DOUBLE)\n  |  30065 <-> (30060: expr) AND (30061: expr)\n  |  30066 <-> (30062: expr) AND (30063: expr)\n  |  30067 <-> [18191: case, DOUBLE, true] / [30064: cast, DOUBLE, true]\n  |  30068 <-> (30065: expr) AND (30066: expr)\n  |  30069 <-> 30067: divide IS NOT NULL\n  |  30070 <-> (17190: mock_020) AND (30069: expr)\n  |  30071 <-> (30070: expr) AND (17206: expr)\n  |  30072 <-> (30068: expr) AND (30071: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  784:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29935: cast, LARGEINT, true] = [18194: mock_193, LARGEINT, true]\n  |  other predicates: 18191: case / CAST(19306: coalesce AS DOUBLE) IS NOT NULL\n  |  output columns: 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17204, 17206, 17443, 17444, 17448, 17449, 18191, 19306\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----783:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18194: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  651:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29935: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 342(F455)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18194: mock_193\n  OutPut Exchange id: 783\n\n  782:Project\n  |  output columns:\n  |  18194 <-> [18194: mock_193, LARGEINT, false]\n  |  19306 <-> coalesce[([19305: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  781:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [18194: mock_193, LARGEINT, false] = [29936: cast, LARGEINT, true]\n  |  output columns: 18194, 19305\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----780:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29936: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  652:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 343(F543)\n\n  Input Partition: HASH_PARTITIONED: 18314: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29936: cast\n  OutPut Exchange id: 780\n\n  779:Project\n  |  output columns:\n  |  19305 <-> [19305: count, BIGINT, false]\n  |  29936 <-> cast([18314: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  778:AGGREGATE (merge finalize)\n  |  aggregate: count[([19305: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [18314: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  777:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18314: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 344(F542)\n\n  Input Partition: HASH_PARTITIONED: 29937: cast\n  OutPut Partition: HASH_PARTITIONED: 18314: xx_hash3_64\n  OutPut Exchange id: 777\n\n  776:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([19304: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [18314: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  775:Project\n  |  output columns:\n  |  18314 <-> [18314: xx_hash3_64, BIGINT, true]\n  |  19304 <-> if[(((((18304: mock_024) AND (18301: mock_021)) AND ((18299: mock_018) AND (18303: mock_023))) AND (((18298: mock_017) AND (18302: mock_022)) AND ((18553: expr) AND (18554: expr)))) AND (18300: mock_020), if[(if[(CASE WHEN (30098: expr) AND (30099: coalesce = 1) THEN 18556: case WHEN (30098: expr) AND (30099: coalesce != 1) THEN 0 ELSE 18557: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [18278: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30098 <-> [18928: sum, DOUBLE, true] > 0.0\n  |  30099 <-> coalesce[([18556: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  774:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29937: cast, LARGEINT, true] = [18929: mock_193, LARGEINT, true]\n  |  output columns: 18278, 18298, 18299, 18300, 18301, 18302, 18303, 18304, 18314, 18553, 18554, 18556, 18557, 18928\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----773:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18929: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  731:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29937: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 345(F513)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18929: mock_193\n  OutPut Exchange id: 773\n\n  772:Project\n  |  output columns:\n  |  18929 <-> [18929: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  771:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [18929: mock_193, LARGEINT, false] = [29938: cast, LARGEINT, true]\n  |  output columns: 18929\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----770:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29938: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  732:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 346(F539)\n\n  Input Partition: HASH_PARTITIONED: 19049: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29938: cast\n  OutPut Exchange id: 770\n\n  769:Project\n  |  output columns:\n  |  29938 <-> cast([19049: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  768:AGGREGATE (merge finalize)\n  |  group by: [19049: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  767:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19049: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 347(F538)\n\n  Input Partition: HASH_PARTITIONED: 29939: cast, 18985: mock_034\n  OutPut Partition: HASH_PARTITIONED: 19049: xx_hash3_64\n  OutPut Exchange id: 767\n\n  766:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [19049: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  765:Project\n  |  output columns:\n  |  19049 <-> [19049: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  764:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29939: cast, LARGEINT, true] = [19235: mock_189, LARGEINT, false]\n  |  equal join conjunct: [18985: mock_034, DATETIME, true] = [19256: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 69, build_expr = (19235: mock_189), remote = true\n  |  - filter_id = 70, build_expr = (19256: mock_157), remote = true\n  |  output columns: 19049\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----763:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19235: mock_189, LARGEINT, false], [19256: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  761:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29939: cast, LARGEINT, true], [18985: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 348(F536)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19235: mock_189, 19256: mock_157\n  OutPut Exchange id: 763\n\n  762:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 19256: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 349(F534)\n\n  Input Partition: HASH_PARTITIONED: 29940: cast, 18985: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29939: cast, 18985: mock_034\n  OutPut Exchange id: 761\n\n  760:Project\n  |  output columns:\n  |  18985 <-> [18985: mock_034, DATETIME, true]\n  |  19049 <-> [19049: xx_hash3_64, BIGINT, true]\n  |  29939 <-> cast([19047: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  759:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29940: cast, LARGEINT, true] = [19184: mock_177, LARGEINT, false]\n  |  equal join conjunct: [18985: mock_034, DATETIME, true] = [19205: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 67, build_expr = (19184: mock_177), remote = true\n  |  - filter_id = 68, build_expr = (19205: mock_157), remote = true\n  |  output columns: 18985, 19047, 19049\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 70, probe_expr = (18985: mock_034), partition_exprs = (CAST(19047: xx_hash3_64 AS LARGEINT),18985: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----758:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19184: mock_177, LARGEINT, false], [19205: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  756:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29940: cast, LARGEINT, true], [18985: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 69, probe_expr = (CAST(19047: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(19047: xx_hash3_64 AS LARGEINT),18985: mock_034)\n\nPLAN FRAGMENT 350(F532)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19184: mock_177, 19205: mock_157\n  OutPut Exchange id: 758\n\n  757:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 19205: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 351(F530)\n\n  Input Partition: HASH_PARTITIONED: 19020: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29940: cast, 18985: mock_034\n  OutPut Exchange id: 756\n\n  755:Project\n  |  output columns:\n  |  18985 <-> [18985: mock_034, DATETIME, true]\n  |  19047 <-> [19047: xx_hash3_64, BIGINT, true]\n  |  19049 <-> [19049: xx_hash3_64, BIGINT, true]\n  |  29940 <-> cast([19046: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  754:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19020: mock_030, LARGEINT, true] = [19183: mock_030, LARGEINT, true]\n  |  output columns: 18985, 19046, 19047, 19049\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----753:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19183: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  751:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19020: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 67, probe_expr = (CAST(19046: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(19046: xx_hash3_64 AS LARGEINT),18985: mock_034)\n     - filter_id = 68, probe_expr = (18985: mock_034), partition_exprs = (CAST(19046: xx_hash3_64 AS LARGEINT),18985: mock_034)\n\nPLAN FRAGMENT 352(F528)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19183: mock_030\n  OutPut Exchange id: 753\n\n  752:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 353(F526)\n\n  Input Partition: HASH_PARTITIONED: 19018: mock_028\n  OutPut Partition: HASH_PARTITIONED: 19020: mock_030\n  OutPut Exchange id: 751\n\n  750:Project\n  |  output columns:\n  |  18985 <-> [18985: mock_034, DATETIME, true]\n  |  19020 <-> [19020: mock_030, LARGEINT, true]\n  |  19046 <-> [19046: xx_hash3_64, BIGINT, true]\n  |  19047 <-> [19047: xx_hash3_64, BIGINT, true]\n  |  19049 <-> [19049: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  749:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19018: mock_028, LARGEINT, true] = [19111: mock_071, LARGEINT, true]\n  |  output columns: 18985, 19020, 19046, 19047, 19049\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----748:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19111: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  736:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19018: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 354(F524)\n\n  Input Partition: HASH_PARTITIONED: 19104: mock_075\n  OutPut Partition: HASH_PARTITIONED: 19111: mock_071\n  OutPut Exchange id: 748\n\n  747:Project\n  |  output columns:\n  |  19111 <-> [19111: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  746:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19104: mock_075, LARGEINT, true] = [19168: mock_075, LARGEINT, true]\n  |  output columns: 19111\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----745:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19168: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  743:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19104: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 355(F522)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19168: mock_075\n  OutPut Exchange id: 745\n\n  744:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 356(F520)\n\n  Input Partition: HASH_PARTITIONED: 19106: mock_077\n  OutPut Partition: HASH_PARTITIONED: 19104: mock_075\n  OutPut Exchange id: 743\n\n  742:Project\n  |  output columns:\n  |  19104 <-> [19104: mock_075, LARGEINT, true]\n  |  19111 <-> [19111: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  741:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [19106: mock_077, LARGEINT, true] = [19139: mock_077, LARGEINT, true]\n  |  output columns: 19104, 19111\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----740:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [19139: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  738:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [19106: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 357(F518)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19139: mock_077\n  OutPut Exchange id: 740\n\n  739:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 358(F516)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19106: mock_077\n  OutPut Exchange id: 738\n\n  737:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 359(F514)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 19018: mock_028\n  OutPut Exchange id: 736\n\n  735:SELECT\n  |  predicates: 19049: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  734:Project\n  |  output columns:\n  |  18985 <-> [18985: mock_034, DATETIME, true]\n  |  19018 <-> [19018: mock_028, LARGEINT, true]\n  |  19020 <-> [19020: mock_030, LARGEINT, true]\n  |  19046 <-> xx_hash3_64[([18992: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19047 <-> xx_hash3_64[([19016: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  19049 <-> xx_hash3_64[([19012: mock_039, VARCHAR(65535), true], [19011: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  733:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [19039: mock_024, BOOLEAN, true], [19036: mock_021, BOOLEAN, true], [19034: mock_018, BOOLEAN, true], [19038: mock_023, BOOLEAN, true], [19033: mock_017, BOOLEAN, true], [19037: mock_022, BOOLEAN, true], [19035: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=110.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 360(F511)\n\n  Input Partition: HASH_PARTITIONED: 29941: cast\n  OutPut Partition: HASH_PARTITIONED: 29937: cast\n  OutPut Exchange id: 731\n\n  730:Project\n  |  output columns:\n  |  18278 <-> [18278: id, VARCHAR(65535), true]\n  |  18298 <-> [18298: mock_017, BOOLEAN, true]\n  |  18299 <-> [18299: mock_018, BOOLEAN, true]\n  |  18300 <-> [18300: mock_020, BOOLEAN, true]\n  |  18301 <-> [18301: mock_021, BOOLEAN, true]\n  |  18302 <-> [18302: mock_022, BOOLEAN, true]\n  |  18303 <-> [18303: mock_023, BOOLEAN, true]\n  |  18304 <-> [18304: mock_024, BOOLEAN, true]\n  |  18314 <-> [18314: xx_hash3_64, BIGINT, true]\n  |  18553 <-> [18553: expr, BOOLEAN, true]\n  |  18554 <-> [18554: expr, BOOLEAN, true]\n  |  18556 <-> [18556: case, BIGINT, true]\n  |  18557 <-> [18557: case, BIGINT, true]\n  |  18928 <-> [18928: sum, DOUBLE, true]\n  |  29937 <-> cast([18314: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  729:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29941: cast, LARGEINT, true] = [18560: mock_191, LARGEINT, true]\n  |  output columns: 18278, 18298, 18299, 18300, 18301, 18302, 18303, 18304, 18314, 18553, 18554, 18556, 18557, 18928\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----728:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18560: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  686:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29941: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 361(F482)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18560: mock_191\n  OutPut Exchange id: 728\n\n  727:Project\n  |  output columns:\n  |  18560 <-> [18560: mock_191, LARGEINT, false]\n  |  18928 <-> [18928: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  726:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [18560: mock_191, LARGEINT, false] = [29942: cast, LARGEINT, true]\n  |  output columns: 18560, 18928\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----725:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29942: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  687:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 362(F508)\n\n  Input Partition: HASH_PARTITIONED: 18679: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29942: cast\n  OutPut Exchange id: 725\n\n  724:Project\n  |  output columns:\n  |  18928 <-> [18928: sum, DOUBLE, true]\n  |  29942 <-> cast([18679: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  723:AGGREGATE (merge finalize)\n  |  aggregate: sum[([18928: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [18679: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  722:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18679: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 363(F507)\n\n  Input Partition: HASH_PARTITIONED: 29943: cast, 18616: mock_034\n  OutPut Partition: HASH_PARTITIONED: 18679: xx_hash3_64\n  OutPut Exchange id: 722\n\n  721:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([18926: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [18679: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  720:Project\n  |  output columns:\n  |  18679 <-> [18679: xx_hash3_64, BIGINT, true]\n  |  18926 <-> if[(((((18670: mock_024) AND (18667: mock_021)) AND ((18665: mock_018) AND (18669: mock_023))) AND (((18664: mock_017) AND (18668: mock_022)) AND ((18616: mock_034 = 18836: mock_157) AND (18616: mock_034 = 18887: mock_157)))) AND (18666: mock_020), if[(if[(if(18767: mock_133 = 18811: mock_133, 18643: mock_039, NULL) IS NULL, NULL, [18654: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [18635: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  719:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29943: cast, LARGEINT, true] = [18866: mock_189, LARGEINT, false]\n  |  equal join conjunct: [18616: mock_034, DATETIME, true] = [18887: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 65, build_expr = (18866: mock_189), remote = true\n  |  - filter_id = 66, build_expr = (18887: mock_157), remote = true\n  |  output columns: 18616, 18635, 18643, 18654, 18664, 18665, 18666, 18667, 18668, 18669, 18670, 18679, 18767, 18811, 18836, 18887\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----718:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18866: mock_189, LARGEINT, false], [18887: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  716:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29943: cast, LARGEINT, true], [18616: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 364(F505)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18866: mock_189, 18887: mock_157\n  OutPut Exchange id: 718\n\n  717:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 18887: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 365(F503)\n\n  Input Partition: HASH_PARTITIONED: 29944: cast, 18616: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29943: cast, 18616: mock_034\n  OutPut Exchange id: 716\n\n  715:Project\n  |  output columns:\n  |  18616 <-> [18616: mock_034, DATETIME, true]\n  |  18635 <-> [18635: mock_042, DOUBLE, true]\n  |  18643 <-> [18643: mock_039, VARCHAR(65535), true]\n  |  18654 <-> [18654: mock_007, BIGINT, true]\n  |  18664 <-> [18664: mock_017, BOOLEAN, true]\n  |  18665 <-> [18665: mock_018, BOOLEAN, true]\n  |  18666 <-> [18666: mock_020, BOOLEAN, true]\n  |  18667 <-> [18667: mock_021, BOOLEAN, true]\n  |  18668 <-> [18668: mock_022, BOOLEAN, true]\n  |  18669 <-> [18669: mock_023, BOOLEAN, true]\n  |  18670 <-> [18670: mock_024, BOOLEAN, true]\n  |  18679 <-> [18679: xx_hash3_64, BIGINT, true]\n  |  18767 <-> [18767: mock_133, VARCHAR(65535), true]\n  |  18811 <-> [18811: mock_133, VARCHAR(65535), true]\n  |  18836 <-> [18836: mock_157, DATETIME, true]\n  |  29943 <-> cast([18678: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  714:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29944: cast, LARGEINT, true] = [18815: mock_177, LARGEINT, false]\n  |  equal join conjunct: [18616: mock_034, DATETIME, true] = [18836: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 63, build_expr = (18815: mock_177), remote = true\n  |  - filter_id = 64, build_expr = (18836: mock_157), remote = true\n  |  output columns: 18616, 18635, 18643, 18654, 18664, 18665, 18666, 18667, 18668, 18669, 18670, 18678, 18679, 18767, 18811, 18836\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 66, probe_expr = (18616: mock_034), partition_exprs = (CAST(18678: xx_hash3_64 AS LARGEINT),18616: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----713:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18815: mock_177, LARGEINT, false], [18836: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  711:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29944: cast, LARGEINT, true], [18616: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 65, probe_expr = (CAST(18678: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(18678: xx_hash3_64 AS LARGEINT),18616: mock_034)\n\nPLAN FRAGMENT 366(F501)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18815: mock_177, 18836: mock_157\n  OutPut Exchange id: 713\n\n  712:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 18836: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 367(F499)\n\n  Input Partition: HASH_PARTITIONED: 18651: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29944: cast, 18616: mock_034\n  OutPut Exchange id: 711\n\n  710:Project\n  |  output columns:\n  |  18616 <-> [18616: mock_034, DATETIME, true]\n  |  18635 <-> [18635: mock_042, DOUBLE, true]\n  |  18643 <-> [18643: mock_039, VARCHAR(65535), true]\n  |  18654 <-> [18654: mock_007, BIGINT, true]\n  |  18664 <-> [18664: mock_017, BOOLEAN, true]\n  |  18665 <-> [18665: mock_018, BOOLEAN, true]\n  |  18666 <-> [18666: mock_020, BOOLEAN, true]\n  |  18667 <-> [18667: mock_021, BOOLEAN, true]\n  |  18668 <-> [18668: mock_022, BOOLEAN, true]\n  |  18669 <-> [18669: mock_023, BOOLEAN, true]\n  |  18670 <-> [18670: mock_024, BOOLEAN, true]\n  |  18678 <-> [18678: xx_hash3_64, BIGINT, true]\n  |  18679 <-> [18679: xx_hash3_64, BIGINT, true]\n  |  18767 <-> [18767: mock_133, VARCHAR(65535), true]\n  |  18811 <-> [18811: mock_133, VARCHAR(65535), true]\n  |  29944 <-> cast([18677: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  709:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18651: mock_030, LARGEINT, true] = [18814: mock_030, LARGEINT, true]\n  |  output columns: 18616, 18635, 18643, 18654, 18664, 18665, 18666, 18667, 18668, 18669, 18670, 18677, 18678, 18679, 18767, 18811\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----708:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18814: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  706:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18651: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 63, probe_expr = (CAST(18677: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(18677: xx_hash3_64 AS LARGEINT),18616: mock_034)\n     - filter_id = 64, probe_expr = (18616: mock_034), partition_exprs = (CAST(18677: xx_hash3_64 AS LARGEINT),18616: mock_034)\n\nPLAN FRAGMENT 368(F497)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18814: mock_030\n  OutPut Exchange id: 708\n\n  707:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 369(F495)\n\n  Input Partition: HASH_PARTITIONED: 18649: mock_028\n  OutPut Partition: HASH_PARTITIONED: 18651: mock_030\n  OutPut Exchange id: 706\n\n  705:Project\n  |  output columns:\n  |  18616 <-> [18616: mock_034, DATETIME, true]\n  |  18635 <-> [18635: mock_042, DOUBLE, true]\n  |  18643 <-> [18643: mock_039, VARCHAR(65535), true]\n  |  18651 <-> [18651: mock_030, LARGEINT, true]\n  |  18654 <-> [18654: mock_007, BIGINT, true]\n  |  18664 <-> [18664: mock_017, BOOLEAN, true]\n  |  18665 <-> [18665: mock_018, BOOLEAN, true]\n  |  18666 <-> [18666: mock_020, BOOLEAN, true]\n  |  18667 <-> [18667: mock_021, BOOLEAN, true]\n  |  18668 <-> [18668: mock_022, BOOLEAN, true]\n  |  18669 <-> [18669: mock_023, BOOLEAN, true]\n  |  18670 <-> [18670: mock_024, BOOLEAN, true]\n  |  18677 <-> [18677: xx_hash3_64, BIGINT, true]\n  |  18678 <-> [18678: xx_hash3_64, BIGINT, true]\n  |  18679 <-> [18679: xx_hash3_64, BIGINT, true]\n  |  18767 <-> [18767: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  704:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18649: mock_028, LARGEINT, true] = [18742: mock_071, LARGEINT, true]\n  |  output columns: 18616, 18635, 18643, 18651, 18654, 18664, 18665, 18666, 18667, 18668, 18669, 18670, 18677, 18678, 18679, 18767\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----703:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18742: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  691:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18649: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 370(F493)\n\n  Input Partition: HASH_PARTITIONED: 18735: mock_075\n  OutPut Partition: HASH_PARTITIONED: 18742: mock_071\n  OutPut Exchange id: 703\n\n  702:Project\n  |  output columns:\n  |  18742 <-> [18742: mock_071, LARGEINT, true]\n  |  18767 <-> [18767: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  701:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18735: mock_075, LARGEINT, true] = [18799: mock_075, LARGEINT, true]\n  |  output columns: 18742, 18767\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----700:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18799: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  698:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18735: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 371(F491)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18799: mock_075\n  OutPut Exchange id: 700\n\n  699:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 372(F489)\n\n  Input Partition: HASH_PARTITIONED: 18737: mock_077\n  OutPut Partition: HASH_PARTITIONED: 18735: mock_075\n  OutPut Exchange id: 698\n\n  697:Project\n  |  output columns:\n  |  18735 <-> [18735: mock_075, LARGEINT, true]\n  |  18742 <-> [18742: mock_071, LARGEINT, true]\n  |  18767 <-> [18767: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  696:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18737: mock_077, LARGEINT, true] = [18770: mock_077, LARGEINT, true]\n  |  output columns: 18735, 18742, 18767\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----695:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18770: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  693:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18737: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 373(F487)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18770: mock_077\n  OutPut Exchange id: 695\n\n  694:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 374(F485)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18737: mock_077\n  OutPut Exchange id: 693\n\n  692:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 375(F483)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18649: mock_028\n  OutPut Exchange id: 691\n\n  690:SELECT\n  |  predicates: 18679: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  689:Project\n  |  output columns:\n  |  18616 <-> [18616: mock_034, DATETIME, true]\n  |  18635 <-> [18635: mock_042, DOUBLE, true]\n  |  18643 <-> [18643: mock_039, VARCHAR(65535), true]\n  |  18649 <-> [18649: mock_028, LARGEINT, true]\n  |  18651 <-> [18651: mock_030, LARGEINT, true]\n  |  18654 <-> [18654: mock_007, BIGINT, true]\n  |  18664 <-> [18664: mock_017, BOOLEAN, true]\n  |  18665 <-> [18665: mock_018, BOOLEAN, true]\n  |  18666 <-> [18666: mock_020, BOOLEAN, true]\n  |  18667 <-> [18667: mock_021, BOOLEAN, true]\n  |  18668 <-> [18668: mock_022, BOOLEAN, true]\n  |  18669 <-> [18669: mock_023, BOOLEAN, true]\n  |  18670 <-> [18670: mock_024, BOOLEAN, true]\n  |  18677 <-> xx_hash3_64[([18623: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  18678 <-> xx_hash3_64[([18647: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  18679 <-> xx_hash3_64[([18641: mock_002, VARCHAR(65535), true], [18643: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  688:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [18670: mock_024, BOOLEAN, true], [18667: mock_021, BOOLEAN, true], [18665: mock_018, BOOLEAN, true], [18669: mock_023, BOOLEAN, true], [18664: mock_017, BOOLEAN, true], [18668: mock_022, BOOLEAN, true], [18666: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 376(F480)\n\n  Input Partition: HASH_PARTITIONED: 29945: cast, 18250: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29941: cast\n  OutPut Exchange id: 686\n\n  685:Project\n  |  output columns:\n  |  18278 <-> [18278: id, VARCHAR(65535), true]\n  |  18298 <-> [18298: mock_017, BOOLEAN, true]\n  |  18299 <-> [18299: mock_018, BOOLEAN, true]\n  |  18300 <-> [18300: mock_020, BOOLEAN, true]\n  |  18301 <-> [18301: mock_021, BOOLEAN, true]\n  |  18302 <-> [18302: mock_022, BOOLEAN, true]\n  |  18303 <-> [18303: mock_023, BOOLEAN, true]\n  |  18304 <-> [18304: mock_024, BOOLEAN, true]\n  |  18314 <-> [18314: xx_hash3_64, BIGINT, true]\n  |  18553 <-> [18250: mock_034, DATETIME, true] = [18470: mock_157, DATETIME, true]\n  |  18554 <-> [18250: mock_034, DATETIME, true] = [18521: mock_157, DATETIME, true]\n  |  18556 <-> if[(if(18401: mock_133 = 18445: mock_133, 18277: mock_039, NULL) IS NULL, NULL, [18288: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  18557 <-> if[(if(18401: mock_133 != 18445: mock_133, 18277: mock_039, NULL) IS NULL, NULL, [18287: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29941 <-> cast([18313: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  684:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29945: cast, LARGEINT, true] = [18500: mock_189, LARGEINT, false]\n  |  equal join conjunct: [18250: mock_034, DATETIME, true] = [18521: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 61, build_expr = (18500: mock_189), remote = true\n  |  - filter_id = 62, build_expr = (18521: mock_157), remote = true\n  |  output columns: 18250, 18277, 18278, 18287, 18288, 18298, 18299, 18300, 18301, 18302, 18303, 18304, 18313, 18314, 18401, 18445, 18470, 18521\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----683:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18500: mock_189, LARGEINT, false], [18521: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  681:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29945: cast, LARGEINT, true], [18250: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 377(F478)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18500: mock_189, 18521: mock_157\n  OutPut Exchange id: 683\n\n  682:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 18521: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 378(F476)\n\n  Input Partition: HASH_PARTITIONED: 29946: cast, 18250: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29945: cast, 18250: mock_034\n  OutPut Exchange id: 681\n\n  680:Project\n  |  output columns:\n  |  18250 <-> [18250: mock_034, DATETIME, true]\n  |  18277 <-> [18277: mock_039, VARCHAR(65535), true]\n  |  18278 <-> [18278: id, VARCHAR(65535), true]\n  |  18287 <-> [18287: mock_006, BIGINT, true]\n  |  18288 <-> [18288: mock_007, BIGINT, true]\n  |  18298 <-> [18298: mock_017, BOOLEAN, true]\n  |  18299 <-> [18299: mock_018, BOOLEAN, true]\n  |  18300 <-> [18300: mock_020, BOOLEAN, true]\n  |  18301 <-> [18301: mock_021, BOOLEAN, true]\n  |  18302 <-> [18302: mock_022, BOOLEAN, true]\n  |  18303 <-> [18303: mock_023, BOOLEAN, true]\n  |  18304 <-> [18304: mock_024, BOOLEAN, true]\n  |  18313 <-> [18313: xx_hash3_64, BIGINT, true]\n  |  18314 <-> [18314: xx_hash3_64, BIGINT, true]\n  |  18401 <-> [18401: mock_133, VARCHAR(65535), true]\n  |  18445 <-> [18445: mock_133, VARCHAR(65535), true]\n  |  18470 <-> [18470: mock_157, DATETIME, true]\n  |  29945 <-> cast([18312: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  679:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29946: cast, LARGEINT, true] = [18449: mock_177, LARGEINT, false]\n  |  equal join conjunct: [18250: mock_034, DATETIME, true] = [18470: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 59, build_expr = (18449: mock_177), remote = true\n  |  - filter_id = 60, build_expr = (18470: mock_157), remote = true\n  |  output columns: 18250, 18277, 18278, 18287, 18288, 18298, 18299, 18300, 18301, 18302, 18303, 18304, 18312, 18313, 18314, 18401, 18445, 18470\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 62, probe_expr = (18250: mock_034), partition_exprs = (CAST(18312: xx_hash3_64 AS LARGEINT),18250: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----678:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18449: mock_177, LARGEINT, false], [18470: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  676:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29946: cast, LARGEINT, true], [18250: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 61, probe_expr = (CAST(18312: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(18312: xx_hash3_64 AS LARGEINT),18250: mock_034)\n\nPLAN FRAGMENT 379(F474)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18449: mock_177, 18470: mock_157\n  OutPut Exchange id: 678\n\n  677:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 18470: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 380(F472)\n\n  Input Partition: HASH_PARTITIONED: 18285: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29946: cast, 18250: mock_034\n  OutPut Exchange id: 676\n\n  675:Project\n  |  output columns:\n  |  18250 <-> [18250: mock_034, DATETIME, true]\n  |  18277 <-> [18277: mock_039, VARCHAR(65535), true]\n  |  18278 <-> [18278: id, VARCHAR(65535), true]\n  |  18287 <-> [18287: mock_006, BIGINT, true]\n  |  18288 <-> [18288: mock_007, BIGINT, true]\n  |  18298 <-> [18298: mock_017, BOOLEAN, true]\n  |  18299 <-> [18299: mock_018, BOOLEAN, true]\n  |  18300 <-> [18300: mock_020, BOOLEAN, true]\n  |  18301 <-> [18301: mock_021, BOOLEAN, true]\n  |  18302 <-> [18302: mock_022, BOOLEAN, true]\n  |  18303 <-> [18303: mock_023, BOOLEAN, true]\n  |  18304 <-> [18304: mock_024, BOOLEAN, true]\n  |  18312 <-> [18312: xx_hash3_64, BIGINT, true]\n  |  18313 <-> [18313: xx_hash3_64, BIGINT, true]\n  |  18314 <-> [18314: xx_hash3_64, BIGINT, true]\n  |  18401 <-> [18401: mock_133, VARCHAR(65535), true]\n  |  18445 <-> [18445: mock_133, VARCHAR(65535), true]\n  |  29946 <-> cast([18311: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  674:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18285: mock_030, LARGEINT, true] = [18448: mock_030, LARGEINT, true]\n  |  output columns: 18250, 18277, 18278, 18287, 18288, 18298, 18299, 18300, 18301, 18302, 18303, 18304, 18311, 18312, 18313, 18314, 18401, 18445\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----673:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18448: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  671:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18285: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 59, probe_expr = (CAST(18311: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(18311: xx_hash3_64 AS LARGEINT),18250: mock_034)\n     - filter_id = 60, probe_expr = (18250: mock_034), partition_exprs = (CAST(18311: xx_hash3_64 AS LARGEINT),18250: mock_034)\n\nPLAN FRAGMENT 381(F470)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18448: mock_030\n  OutPut Exchange id: 673\n\n  672:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 382(F468)\n\n  Input Partition: HASH_PARTITIONED: 18283: mock_028\n  OutPut Partition: HASH_PARTITIONED: 18285: mock_030\n  OutPut Exchange id: 671\n\n  670:Project\n  |  output columns:\n  |  18250 <-> [18250: mock_034, DATETIME, true]\n  |  18277 <-> [18277: mock_039, VARCHAR(65535), true]\n  |  18278 <-> [18278: id, VARCHAR(65535), true]\n  |  18285 <-> [18285: mock_030, LARGEINT, true]\n  |  18287 <-> [18287: mock_006, BIGINT, true]\n  |  18288 <-> [18288: mock_007, BIGINT, true]\n  |  18298 <-> [18298: mock_017, BOOLEAN, true]\n  |  18299 <-> [18299: mock_018, BOOLEAN, true]\n  |  18300 <-> [18300: mock_020, BOOLEAN, true]\n  |  18301 <-> [18301: mock_021, BOOLEAN, true]\n  |  18302 <-> [18302: mock_022, BOOLEAN, true]\n  |  18303 <-> [18303: mock_023, BOOLEAN, true]\n  |  18304 <-> [18304: mock_024, BOOLEAN, true]\n  |  18311 <-> [18311: xx_hash3_64, BIGINT, true]\n  |  18312 <-> [18312: xx_hash3_64, BIGINT, true]\n  |  18313 <-> [18313: xx_hash3_64, BIGINT, true]\n  |  18314 <-> [18314: xx_hash3_64, BIGINT, true]\n  |  18401 <-> [18401: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  669:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18283: mock_028, LARGEINT, true] = [18376: mock_071, LARGEINT, true]\n  |  output columns: 18250, 18277, 18278, 18285, 18287, 18288, 18298, 18299, 18300, 18301, 18302, 18303, 18304, 18311, 18312, 18313, 18314, 18401\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----668:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18376: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  656:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18283: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 383(F466)\n\n  Input Partition: HASH_PARTITIONED: 18369: mock_075\n  OutPut Partition: HASH_PARTITIONED: 18376: mock_071\n  OutPut Exchange id: 668\n\n  667:Project\n  |  output columns:\n  |  18376 <-> [18376: mock_071, LARGEINT, true]\n  |  18401 <-> [18401: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  666:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18369: mock_075, LARGEINT, true] = [18433: mock_075, LARGEINT, true]\n  |  output columns: 18376, 18401\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----665:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18433: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  663:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18369: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 384(F464)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18433: mock_075\n  OutPut Exchange id: 665\n\n  664:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 385(F462)\n\n  Input Partition: HASH_PARTITIONED: 18371: mock_077\n  OutPut Partition: HASH_PARTITIONED: 18369: mock_075\n  OutPut Exchange id: 663\n\n  662:Project\n  |  output columns:\n  |  18369 <-> [18369: mock_075, LARGEINT, true]\n  |  18376 <-> [18376: mock_071, LARGEINT, true]\n  |  18401 <-> [18401: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  661:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [18371: mock_077, LARGEINT, true] = [18404: mock_077, LARGEINT, true]\n  |  output columns: 18369, 18376, 18401\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----660:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18404: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  658:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [18371: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 386(F460)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18404: mock_077\n  OutPut Exchange id: 660\n\n  659:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 387(F458)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18371: mock_077\n  OutPut Exchange id: 658\n\n  657:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 388(F456)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18283: mock_028\n  OutPut Exchange id: 656\n\n  655:SELECT\n  |  predicates: 18314: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  654:Project\n  |  output columns:\n  |  18250 <-> [18250: mock_034, DATETIME, true]\n  |  18277 <-> [18277: mock_039, VARCHAR(65535), true]\n  |  18278 <-> [18278: id, VARCHAR(65535), true]\n  |  18283 <-> [18283: mock_028, LARGEINT, true]\n  |  18285 <-> [18285: mock_030, LARGEINT, true]\n  |  18287 <-> [18287: mock_006, BIGINT, true]\n  |  18288 <-> [18288: mock_007, BIGINT, true]\n  |  18298 <-> [18298: mock_017, BOOLEAN, true]\n  |  18299 <-> [18299: mock_018, BOOLEAN, true]\n  |  18300 <-> [18300: mock_020, BOOLEAN, true]\n  |  18301 <-> [18301: mock_021, BOOLEAN, true]\n  |  18302 <-> [18302: mock_022, BOOLEAN, true]\n  |  18303 <-> [18303: mock_023, BOOLEAN, true]\n  |  18304 <-> [18304: mock_024, BOOLEAN, true]\n  |  18311 <-> xx_hash3_64[([18257: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  18312 <-> xx_hash3_64[([18281: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  18313 <-> xx_hash3_64[([18275: mock_002, VARCHAR(65535), true], [18277: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  18314 <-> xx_hash3_64[([18277: mock_039, VARCHAR(65535), true], [18276: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  653:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [18304: mock_024, BOOLEAN, true], [18301: mock_021, BOOLEAN, true], [18299: mock_018, BOOLEAN, true], [18303: mock_023, BOOLEAN, true], [18298: mock_017, BOOLEAN, true], [18302: mock_022, BOOLEAN, true], [18300: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=148.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 389(F453)\n\n  Input Partition: HASH_PARTITIONED: 29948: cast\n  OutPut Partition: HASH_PARTITIONED: 29935: cast\n  OutPut Exchange id: 651\n\n  650:Project\n  |  output columns:\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  17206 <-> [17206: expr, BOOLEAN, true]\n  |  17443 <-> [17443: expr, BOOLEAN, true]\n  |  17444 <-> [17444: expr, BOOLEAN, true]\n  |  17448 <-> [17448: case, DOUBLE, true]\n  |  17449 <-> [17449: case, DOUBLE, true]\n  |  18191 <-> if[([30079: case, DOUBLE, true] > [17205: expr, DOUBLE, true], [30079: case, DOUBLE, true] * cast(if[(CASE WHEN 30077: expr THEN 17446: case WHEN (30073: expr) AND (30074: coalesce != 1) THEN 0 ELSE 17447: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29935 <-> cast([17204: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30073 <-> [17818: sum, DOUBLE, true] > 0.0\n  |  30074 <-> coalesce[([17446: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30075 <-> [30074: coalesce, BIGINT, true] = 1\n  |  30076 <-> [30074: coalesce, BIGINT, true] = 0\n  |  30077 <-> (30073: expr) AND (30075: expr)\n  |  30078 <-> (30073: expr) AND (30076: expr)\n  |  30079 <-> CASE WHEN 30077: expr THEN 18187: sum WHEN 30078: expr THEN 0.0 ELSE 18188: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  649:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29947: cast, LARGEINT, true] = [17819: mock_193, LARGEINT, true]\n  |  output columns: 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17204, 17205, 17206, 17443, 17444, 17446, 17447, 17448, 17449, 17818, 18187, 18188\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----648:Project\n  |    |  output columns:\n  |    |  17819 <-> [17819: mock_193, LARGEINT, false]\n  |    |  18187 <-> [18187: sum, DOUBLE, true]\n  |    |  18188 <-> [18188: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    647:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29948: cast, LARGEINT, true] = [17819: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 58, build_expr = (17819: mock_193), remote = true\n  |    |  output columns: 17819, 18187, 18188\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----646:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [17819: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    644:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29948: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  606:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29947: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 390(F451)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17819: mock_193\n  OutPut Exchange id: 646\n\n  645:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 391(F449)\n\n  Input Partition: HASH_PARTITIONED: 17939: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29948: cast\n  OutPut Exchange id: 644\n\n  643:Project\n  |  output columns:\n  |  18187 <-> [18187: sum, DOUBLE, true]\n  |  18188 <-> [18188: sum, DOUBLE, true]\n  |  29948 <-> cast([17939: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  642:AGGREGATE (merge finalize)\n  |  aggregate: sum[([18187: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([18188: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [17939: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 58, probe_expr = (CAST(17939: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  641:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17939: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 392(F448)\n\n  Input Partition: HASH_PARTITIONED: 29949: cast, 17875: mock_034\n  OutPut Partition: HASH_PARTITIONED: 17939: xx_hash3_64\n  OutPut Exchange id: 641\n\n  640:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([18185: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([18186: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [17939: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  639:Project\n  |  output columns:\n  |  17939 <-> [17939: xx_hash3_64, BIGINT, true]\n  |  18185 <-> if[([30097: expr, BOOLEAN, true], if[(if[(if(18026: mock_133 = 18070: mock_133, 17902: mock_039, NULL) IS NULL, NULL, [17913: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [17894: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  18186 <-> if[([30097: expr, BOOLEAN, true], if[(if[(if(18026: mock_133 != 18070: mock_133, 17902: mock_039, NULL) IS NULL, NULL, [17912: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [17894: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30096 <-> (30093: expr) AND (30095: expr)\n  |  30097 <-> (30096: expr) AND (17925: mock_020)\n  |  30088 <-> (17929: mock_024) AND (17926: mock_021)\n  |  30089 <-> (17924: mock_018) AND (17928: mock_023)\n  |  30090 <-> (17923: mock_017) AND (17927: mock_022)\n  |  30091 <-> [17875: mock_034, DATETIME, true] = [18095: mock_157, DATETIME, true]\n  |  30092 <-> [17875: mock_034, DATETIME, true] = [18146: mock_157, DATETIME, true]\n  |  30093 <-> (30088: expr) AND (30089: expr)\n  |  30094 <-> (30091: expr) AND (30092: expr)\n  |  30095 <-> (30090: expr) AND (30094: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  638:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29949: cast, LARGEINT, true] = [18125: mock_189, LARGEINT, false]\n  |  equal join conjunct: [17875: mock_034, DATETIME, true] = [18146: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 56, build_expr = (18125: mock_189), remote = true\n  |  - filter_id = 57, build_expr = (18146: mock_157), remote = true\n  |  output columns: 17875, 17894, 17902, 17912, 17913, 17923, 17924, 17925, 17926, 17927, 17928, 17929, 17939, 18026, 18070, 18095, 18146\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----637:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18125: mock_189, LARGEINT, false], [18146: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  635:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29949: cast, LARGEINT, true], [17875: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 393(F446)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18125: mock_189, 18146: mock_157\n  OutPut Exchange id: 637\n\n  636:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 18146: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 394(F444)\n\n  Input Partition: HASH_PARTITIONED: 29950: cast, 17875: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29949: cast, 17875: mock_034\n  OutPut Exchange id: 635\n\n  634:Project\n  |  output columns:\n  |  17875 <-> [17875: mock_034, DATETIME, true]\n  |  17894 <-> [17894: mock_042, DOUBLE, true]\n  |  17902 <-> [17902: mock_039, VARCHAR(65535), true]\n  |  17912 <-> [17912: mock_006, BIGINT, true]\n  |  17913 <-> [17913: mock_007, BIGINT, true]\n  |  17923 <-> [17923: mock_017, BOOLEAN, true]\n  |  17924 <-> [17924: mock_018, BOOLEAN, true]\n  |  17925 <-> [17925: mock_020, BOOLEAN, true]\n  |  17926 <-> [17926: mock_021, BOOLEAN, true]\n  |  17927 <-> [17927: mock_022, BOOLEAN, true]\n  |  17928 <-> [17928: mock_023, BOOLEAN, true]\n  |  17929 <-> [17929: mock_024, BOOLEAN, true]\n  |  17939 <-> [17939: xx_hash3_64, BIGINT, true]\n  |  18026 <-> [18026: mock_133, VARCHAR(65535), true]\n  |  18070 <-> [18070: mock_133, VARCHAR(65535), true]\n  |  18095 <-> [18095: mock_157, DATETIME, true]\n  |  29949 <-> cast([17937: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  633:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29950: cast, LARGEINT, true] = [18074: mock_177, LARGEINT, false]\n  |  equal join conjunct: [17875: mock_034, DATETIME, true] = [18095: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 54, build_expr = (18074: mock_177), remote = true\n  |  - filter_id = 55, build_expr = (18095: mock_157), remote = true\n  |  output columns: 17875, 17894, 17902, 17912, 17913, 17923, 17924, 17925, 17926, 17927, 17928, 17929, 17937, 17939, 18026, 18070, 18095\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 57, probe_expr = (17875: mock_034), partition_exprs = (CAST(17937: xx_hash3_64 AS LARGEINT),17875: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----632:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18074: mock_177, LARGEINT, false], [18095: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  630:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29950: cast, LARGEINT, true], [17875: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 56, probe_expr = (CAST(17937: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(17937: xx_hash3_64 AS LARGEINT),17875: mock_034)\n\nPLAN FRAGMENT 395(F442)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18074: mock_177, 18095: mock_157\n  OutPut Exchange id: 632\n\n  631:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 18095: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 396(F440)\n\n  Input Partition: HASH_PARTITIONED: 17910: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29950: cast, 17875: mock_034\n  OutPut Exchange id: 630\n\n  629:Project\n  |  output columns:\n  |  17875 <-> [17875: mock_034, DATETIME, true]\n  |  17894 <-> [17894: mock_042, DOUBLE, true]\n  |  17902 <-> [17902: mock_039, VARCHAR(65535), true]\n  |  17912 <-> [17912: mock_006, BIGINT, true]\n  |  17913 <-> [17913: mock_007, BIGINT, true]\n  |  17923 <-> [17923: mock_017, BOOLEAN, true]\n  |  17924 <-> [17924: mock_018, BOOLEAN, true]\n  |  17925 <-> [17925: mock_020, BOOLEAN, true]\n  |  17926 <-> [17926: mock_021, BOOLEAN, true]\n  |  17927 <-> [17927: mock_022, BOOLEAN, true]\n  |  17928 <-> [17928: mock_023, BOOLEAN, true]\n  |  17929 <-> [17929: mock_024, BOOLEAN, true]\n  |  17937 <-> [17937: xx_hash3_64, BIGINT, true]\n  |  17939 <-> [17939: xx_hash3_64, BIGINT, true]\n  |  18026 <-> [18026: mock_133, VARCHAR(65535), true]\n  |  18070 <-> [18070: mock_133, VARCHAR(65535), true]\n  |  29950 <-> cast([17936: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  628:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17910: mock_030, LARGEINT, true] = [18073: mock_030, LARGEINT, true]\n  |  output columns: 17875, 17894, 17902, 17912, 17913, 17923, 17924, 17925, 17926, 17927, 17928, 17929, 17936, 17937, 17939, 18026, 18070\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----627:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18073: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  625:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17910: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 54, probe_expr = (CAST(17936: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(17936: xx_hash3_64 AS LARGEINT),17875: mock_034)\n     - filter_id = 55, probe_expr = (17875: mock_034), partition_exprs = (CAST(17936: xx_hash3_64 AS LARGEINT),17875: mock_034)\n\nPLAN FRAGMENT 397(F438)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18073: mock_030\n  OutPut Exchange id: 627\n\n  626:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 398(F436)\n\n  Input Partition: HASH_PARTITIONED: 17908: mock_028\n  OutPut Partition: HASH_PARTITIONED: 17910: mock_030\n  OutPut Exchange id: 625\n\n  624:Project\n  |  output columns:\n  |  17875 <-> [17875: mock_034, DATETIME, true]\n  |  17894 <-> [17894: mock_042, DOUBLE, true]\n  |  17902 <-> [17902: mock_039, VARCHAR(65535), true]\n  |  17910 <-> [17910: mock_030, LARGEINT, true]\n  |  17912 <-> [17912: mock_006, BIGINT, true]\n  |  17913 <-> [17913: mock_007, BIGINT, true]\n  |  17923 <-> [17923: mock_017, BOOLEAN, true]\n  |  17924 <-> [17924: mock_018, BOOLEAN, true]\n  |  17925 <-> [17925: mock_020, BOOLEAN, true]\n  |  17926 <-> [17926: mock_021, BOOLEAN, true]\n  |  17927 <-> [17927: mock_022, BOOLEAN, true]\n  |  17928 <-> [17928: mock_023, BOOLEAN, true]\n  |  17929 <-> [17929: mock_024, BOOLEAN, true]\n  |  17936 <-> [17936: xx_hash3_64, BIGINT, true]\n  |  17937 <-> [17937: xx_hash3_64, BIGINT, true]\n  |  17939 <-> [17939: xx_hash3_64, BIGINT, true]\n  |  18026 <-> [18026: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  623:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17908: mock_028, LARGEINT, true] = [18001: mock_071, LARGEINT, true]\n  |  output columns: 17875, 17894, 17902, 17910, 17912, 17913, 17923, 17924, 17925, 17926, 17927, 17928, 17929, 17936, 17937, 17939, 18026\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----622:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18001: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  610:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17908: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 399(F434)\n\n  Input Partition: HASH_PARTITIONED: 17994: mock_075\n  OutPut Partition: HASH_PARTITIONED: 18001: mock_071\n  OutPut Exchange id: 622\n\n  621:Project\n  |  output columns:\n  |  18001 <-> [18001: mock_071, LARGEINT, true]\n  |  18026 <-> [18026: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  620:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17994: mock_075, LARGEINT, true] = [18058: mock_075, LARGEINT, true]\n  |  output columns: 18001, 18026\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----619:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18058: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  617:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17994: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 400(F432)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18058: mock_075\n  OutPut Exchange id: 619\n\n  618:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 401(F430)\n\n  Input Partition: HASH_PARTITIONED: 17996: mock_077\n  OutPut Partition: HASH_PARTITIONED: 17994: mock_075\n  OutPut Exchange id: 617\n\n  616:Project\n  |  output columns:\n  |  17994 <-> [17994: mock_075, LARGEINT, true]\n  |  18001 <-> [18001: mock_071, LARGEINT, true]\n  |  18026 <-> [18026: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  615:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17996: mock_077, LARGEINT, true] = [18029: mock_077, LARGEINT, true]\n  |  output columns: 17994, 18001, 18026\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----614:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [18029: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  612:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17996: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 402(F428)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 18029: mock_077\n  OutPut Exchange id: 614\n\n  613:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 403(F426)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17996: mock_077\n  OutPut Exchange id: 612\n\n  611:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 404(F424)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17908: mock_028\n  OutPut Exchange id: 610\n\n  609:SELECT\n  |  predicates: 17939: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  608:Project\n  |  output columns:\n  |  17875 <-> [17875: mock_034, DATETIME, true]\n  |  17894 <-> [17894: mock_042, DOUBLE, true]\n  |  17902 <-> [17902: mock_039, VARCHAR(65535), true]\n  |  17908 <-> [17908: mock_028, LARGEINT, true]\n  |  17910 <-> [17910: mock_030, LARGEINT, true]\n  |  17912 <-> [17912: mock_006, BIGINT, true]\n  |  17913 <-> [17913: mock_007, BIGINT, true]\n  |  17923 <-> [17923: mock_017, BOOLEAN, true]\n  |  17924 <-> [17924: mock_018, BOOLEAN, true]\n  |  17925 <-> [17925: mock_020, BOOLEAN, true]\n  |  17926 <-> [17926: mock_021, BOOLEAN, true]\n  |  17927 <-> [17927: mock_022, BOOLEAN, true]\n  |  17928 <-> [17928: mock_023, BOOLEAN, true]\n  |  17929 <-> [17929: mock_024, BOOLEAN, true]\n  |  17936 <-> xx_hash3_64[([17882: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17937 <-> xx_hash3_64[([17906: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17939 <-> xx_hash3_64[([17902: mock_039, VARCHAR(65535), true], [17901: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  607:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [17929: mock_024, BOOLEAN, true], [17926: mock_021, BOOLEAN, true], [17924: mock_018, BOOLEAN, true], [17928: mock_023, BOOLEAN, true], [17923: mock_017, BOOLEAN, true], [17927: mock_022, BOOLEAN, true], [17925: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=134.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 405(F422)\n\n  Input Partition: HASH_PARTITIONED: 29951: cast\n  OutPut Partition: HASH_PARTITIONED: 29947: cast\n  OutPut Exchange id: 606\n\n  605:Project\n  |  output columns:\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  17205 <-> [17205: expr, DOUBLE, true]\n  |  17206 <-> [17206: expr, BOOLEAN, true]\n  |  17443 <-> [17443: expr, BOOLEAN, true]\n  |  17444 <-> [17444: expr, BOOLEAN, true]\n  |  17446 <-> [17446: case, BIGINT, true]\n  |  17447 <-> [17447: case, BIGINT, true]\n  |  17448 <-> [17448: case, DOUBLE, true]\n  |  17449 <-> [17449: case, DOUBLE, true]\n  |  17818 <-> [17818: sum, DOUBLE, true]\n  |  29947 <-> cast([17204: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  604:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29951: cast, LARGEINT, true] = [17450: mock_191, LARGEINT, true]\n  |  output columns: 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17204, 17205, 17206, 17443, 17444, 17446, 17447, 17448, 17449, 17818\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----603:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17450: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  561:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29951: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 406(F393)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17450: mock_191\n  OutPut Exchange id: 603\n\n  602:Project\n  |  output columns:\n  |  17450 <-> [17450: mock_191, LARGEINT, false]\n  |  17818 <-> [17818: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  601:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [17450: mock_191, LARGEINT, false] = [29952: cast, LARGEINT, true]\n  |  output columns: 17450, 17818\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----600:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29952: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  562:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 407(F419)\n\n  Input Partition: HASH_PARTITIONED: 17569: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29952: cast\n  OutPut Exchange id: 600\n\n  599:Project\n  |  output columns:\n  |  17818 <-> [17818: sum, DOUBLE, true]\n  |  29952 <-> cast([17569: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  598:AGGREGATE (merge finalize)\n  |  aggregate: sum[([17818: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [17569: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  597:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17569: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 408(F418)\n\n  Input Partition: HASH_PARTITIONED: 29953: cast, 17506: mock_034\n  OutPut Partition: HASH_PARTITIONED: 17569: xx_hash3_64\n  OutPut Exchange id: 597\n\n  596:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([17816: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [17569: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  595:Project\n  |  output columns:\n  |  17569 <-> [17569: xx_hash3_64, BIGINT, true]\n  |  17816 <-> if[(((((17560: mock_024) AND (17557: mock_021)) AND ((17555: mock_018) AND (17559: mock_023))) AND (((17554: mock_017) AND (17558: mock_022)) AND ((17506: mock_034 = 17726: mock_157) AND (17506: mock_034 = 17777: mock_157)))) AND (17556: mock_020), if[(if[(if(17657: mock_133 = 17701: mock_133, 17533: mock_039, NULL) IS NULL, NULL, [17544: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [17525: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  594:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29953: cast, LARGEINT, true] = [17756: mock_189, LARGEINT, false]\n  |  equal join conjunct: [17506: mock_034, DATETIME, true] = [17777: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 52, build_expr = (17756: mock_189), remote = true\n  |  - filter_id = 53, build_expr = (17777: mock_157), remote = true\n  |  output columns: 17506, 17525, 17533, 17544, 17554, 17555, 17556, 17557, 17558, 17559, 17560, 17569, 17657, 17701, 17726, 17777\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----593:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17756: mock_189, LARGEINT, false], [17777: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  591:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29953: cast, LARGEINT, true], [17506: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 409(F416)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17756: mock_189, 17777: mock_157\n  OutPut Exchange id: 593\n\n  592:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 17777: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 410(F414)\n\n  Input Partition: HASH_PARTITIONED: 29954: cast, 17506: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29953: cast, 17506: mock_034\n  OutPut Exchange id: 591\n\n  590:Project\n  |  output columns:\n  |  17506 <-> [17506: mock_034, DATETIME, true]\n  |  17525 <-> [17525: mock_042, DOUBLE, true]\n  |  17533 <-> [17533: mock_039, VARCHAR(65535), true]\n  |  17544 <-> [17544: mock_007, BIGINT, true]\n  |  17554 <-> [17554: mock_017, BOOLEAN, true]\n  |  17555 <-> [17555: mock_018, BOOLEAN, true]\n  |  17556 <-> [17556: mock_020, BOOLEAN, true]\n  |  17557 <-> [17557: mock_021, BOOLEAN, true]\n  |  17558 <-> [17558: mock_022, BOOLEAN, true]\n  |  17559 <-> [17559: mock_023, BOOLEAN, true]\n  |  17560 <-> [17560: mock_024, BOOLEAN, true]\n  |  17569 <-> [17569: xx_hash3_64, BIGINT, true]\n  |  17657 <-> [17657: mock_133, VARCHAR(65535), true]\n  |  17701 <-> [17701: mock_133, VARCHAR(65535), true]\n  |  17726 <-> [17726: mock_157, DATETIME, true]\n  |  29953 <-> cast([17568: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  589:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29954: cast, LARGEINT, true] = [17705: mock_177, LARGEINT, false]\n  |  equal join conjunct: [17506: mock_034, DATETIME, true] = [17726: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 50, build_expr = (17705: mock_177), remote = true\n  |  - filter_id = 51, build_expr = (17726: mock_157), remote = true\n  |  output columns: 17506, 17525, 17533, 17544, 17554, 17555, 17556, 17557, 17558, 17559, 17560, 17568, 17569, 17657, 17701, 17726\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 53, probe_expr = (17506: mock_034), partition_exprs = (CAST(17568: xx_hash3_64 AS LARGEINT),17506: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----588:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17705: mock_177, LARGEINT, false], [17726: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  586:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29954: cast, LARGEINT, true], [17506: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 52, probe_expr = (CAST(17568: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(17568: xx_hash3_64 AS LARGEINT),17506: mock_034)\n\nPLAN FRAGMENT 411(F412)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17705: mock_177, 17726: mock_157\n  OutPut Exchange id: 588\n\n  587:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 17726: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 412(F410)\n\n  Input Partition: HASH_PARTITIONED: 17541: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29954: cast, 17506: mock_034\n  OutPut Exchange id: 586\n\n  585:Project\n  |  output columns:\n  |  17506 <-> [17506: mock_034, DATETIME, true]\n  |  17525 <-> [17525: mock_042, DOUBLE, true]\n  |  17533 <-> [17533: mock_039, VARCHAR(65535), true]\n  |  17544 <-> [17544: mock_007, BIGINT, true]\n  |  17554 <-> [17554: mock_017, BOOLEAN, true]\n  |  17555 <-> [17555: mock_018, BOOLEAN, true]\n  |  17556 <-> [17556: mock_020, BOOLEAN, true]\n  |  17557 <-> [17557: mock_021, BOOLEAN, true]\n  |  17558 <-> [17558: mock_022, BOOLEAN, true]\n  |  17559 <-> [17559: mock_023, BOOLEAN, true]\n  |  17560 <-> [17560: mock_024, BOOLEAN, true]\n  |  17568 <-> [17568: xx_hash3_64, BIGINT, true]\n  |  17569 <-> [17569: xx_hash3_64, BIGINT, true]\n  |  17657 <-> [17657: mock_133, VARCHAR(65535), true]\n  |  17701 <-> [17701: mock_133, VARCHAR(65535), true]\n  |  29954 <-> cast([17567: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  584:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17541: mock_030, LARGEINT, true] = [17704: mock_030, LARGEINT, true]\n  |  output columns: 17506, 17525, 17533, 17544, 17554, 17555, 17556, 17557, 17558, 17559, 17560, 17567, 17568, 17569, 17657, 17701\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----583:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17704: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  581:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17541: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 50, probe_expr = (CAST(17567: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(17567: xx_hash3_64 AS LARGEINT),17506: mock_034)\n     - filter_id = 51, probe_expr = (17506: mock_034), partition_exprs = (CAST(17567: xx_hash3_64 AS LARGEINT),17506: mock_034)\n\nPLAN FRAGMENT 413(F408)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17704: mock_030\n  OutPut Exchange id: 583\n\n  582:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 414(F406)\n\n  Input Partition: HASH_PARTITIONED: 17539: mock_028\n  OutPut Partition: HASH_PARTITIONED: 17541: mock_030\n  OutPut Exchange id: 581\n\n  580:Project\n  |  output columns:\n  |  17506 <-> [17506: mock_034, DATETIME, true]\n  |  17525 <-> [17525: mock_042, DOUBLE, true]\n  |  17533 <-> [17533: mock_039, VARCHAR(65535), true]\n  |  17541 <-> [17541: mock_030, LARGEINT, true]\n  |  17544 <-> [17544: mock_007, BIGINT, true]\n  |  17554 <-> [17554: mock_017, BOOLEAN, true]\n  |  17555 <-> [17555: mock_018, BOOLEAN, true]\n  |  17556 <-> [17556: mock_020, BOOLEAN, true]\n  |  17557 <-> [17557: mock_021, BOOLEAN, true]\n  |  17558 <-> [17558: mock_022, BOOLEAN, true]\n  |  17559 <-> [17559: mock_023, BOOLEAN, true]\n  |  17560 <-> [17560: mock_024, BOOLEAN, true]\n  |  17567 <-> [17567: xx_hash3_64, BIGINT, true]\n  |  17568 <-> [17568: xx_hash3_64, BIGINT, true]\n  |  17569 <-> [17569: xx_hash3_64, BIGINT, true]\n  |  17657 <-> [17657: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  579:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17539: mock_028, LARGEINT, true] = [17632: mock_071, LARGEINT, true]\n  |  output columns: 17506, 17525, 17533, 17541, 17544, 17554, 17555, 17556, 17557, 17558, 17559, 17560, 17567, 17568, 17569, 17657\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----578:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17632: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  566:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17539: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 415(F404)\n\n  Input Partition: HASH_PARTITIONED: 17625: mock_075\n  OutPut Partition: HASH_PARTITIONED: 17632: mock_071\n  OutPut Exchange id: 578\n\n  577:Project\n  |  output columns:\n  |  17632 <-> [17632: mock_071, LARGEINT, true]\n  |  17657 <-> [17657: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  576:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17625: mock_075, LARGEINT, true] = [17689: mock_075, LARGEINT, true]\n  |  output columns: 17632, 17657\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----575:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17689: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  573:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17625: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 416(F402)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17689: mock_075\n  OutPut Exchange id: 575\n\n  574:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 417(F400)\n\n  Input Partition: HASH_PARTITIONED: 17627: mock_077\n  OutPut Partition: HASH_PARTITIONED: 17625: mock_075\n  OutPut Exchange id: 573\n\n  572:Project\n  |  output columns:\n  |  17625 <-> [17625: mock_075, LARGEINT, true]\n  |  17632 <-> [17632: mock_071, LARGEINT, true]\n  |  17657 <-> [17657: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  571:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17627: mock_077, LARGEINT, true] = [17660: mock_077, LARGEINT, true]\n  |  output columns: 17625, 17632, 17657\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----570:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17660: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  568:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17627: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 418(F398)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17660: mock_077\n  OutPut Exchange id: 570\n\n  569:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 419(F396)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17627: mock_077\n  OutPut Exchange id: 568\n\n  567:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 420(F394)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17539: mock_028\n  OutPut Exchange id: 566\n\n  565:SELECT\n  |  predicates: 17569: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  564:Project\n  |  output columns:\n  |  17506 <-> [17506: mock_034, DATETIME, true]\n  |  17525 <-> [17525: mock_042, DOUBLE, true]\n  |  17533 <-> [17533: mock_039, VARCHAR(65535), true]\n  |  17539 <-> [17539: mock_028, LARGEINT, true]\n  |  17541 <-> [17541: mock_030, LARGEINT, true]\n  |  17544 <-> [17544: mock_007, BIGINT, true]\n  |  17554 <-> [17554: mock_017, BOOLEAN, true]\n  |  17555 <-> [17555: mock_018, BOOLEAN, true]\n  |  17556 <-> [17556: mock_020, BOOLEAN, true]\n  |  17557 <-> [17557: mock_021, BOOLEAN, true]\n  |  17558 <-> [17558: mock_022, BOOLEAN, true]\n  |  17559 <-> [17559: mock_023, BOOLEAN, true]\n  |  17560 <-> [17560: mock_024, BOOLEAN, true]\n  |  17567 <-> xx_hash3_64[([17513: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17568 <-> xx_hash3_64[([17537: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17569 <-> xx_hash3_64[([17531: mock_002, VARCHAR(65535), true], [17533: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  563:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [17560: mock_024, BOOLEAN, true], [17557: mock_021, BOOLEAN, true], [17555: mock_018, BOOLEAN, true], [17559: mock_023, BOOLEAN, true], [17554: mock_017, BOOLEAN, true], [17558: mock_022, BOOLEAN, true], [17556: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 421(F391)\n\n  Input Partition: HASH_PARTITIONED: 29955: cast, 17140: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29951: cast\n  OutPut Exchange id: 561\n\n  560:Project\n  |  output columns:\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  17205 <-> [17205: expr, DOUBLE, true]\n  |  17206 <-> [17206: expr, BOOLEAN, true]\n  |  17443 <-> [17140: mock_034, DATETIME, true] = [17360: mock_157, DATETIME, true]\n  |  17444 <-> [17140: mock_034, DATETIME, true] = [17411: mock_157, DATETIME, true]\n  |  17446 <-> [30086: if, BIGINT, true]\n  |  17447 <-> [30087: if, BIGINT, true]\n  |  17448 <-> if[([30086: if, BIGINT, true] = 1, [17159: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  17449 <-> if[([30087: if, BIGINT, true] = 1, [17159: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29951 <-> cast([17203: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30080 <-> [17291: mock_133, VARCHAR(65535), true] = [17335: mock_133, VARCHAR(65535), true]\n  |  30081 <-> [17291: mock_133, VARCHAR(65535), true] != [17335: mock_133, VARCHAR(65535), true]\n  |  30082 <-> if[([30080: expr, BOOLEAN, true], [17167: mock_039, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  30083 <-> if[([30081: expr, BOOLEAN, true], [17167: mock_039, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  30084 <-> 30082: if IS NULL\n  |  30085 <-> 30083: if IS NULL\n  |  30086 <-> if[([30084: expr, BOOLEAN, false], NULL, [17178: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30087 <-> if[([30085: expr, BOOLEAN, false], NULL, [17177: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  559:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29955: cast, LARGEINT, true] = [17390: mock_189, LARGEINT, false]\n  |  equal join conjunct: [17140: mock_034, DATETIME, true] = [17411: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 48, build_expr = (17390: mock_189), remote = true\n  |  - filter_id = 49, build_expr = (17411: mock_157), remote = true\n  |  output columns: 17140, 17159, 17167, 17177, 17178, 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17203, 17204, 17205, 17206, 17291, 17335, 17360, 17411\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----558:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17390: mock_189, LARGEINT, false], [17411: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  556:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29955: cast, LARGEINT, true], [17140: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 422(F389)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17390: mock_189, 17411: mock_157\n  OutPut Exchange id: 558\n\n  557:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 17411: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 423(F387)\n\n  Input Partition: HASH_PARTITIONED: 29956: cast, 17140: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29955: cast, 17140: mock_034\n  OutPut Exchange id: 556\n\n  555:Project\n  |  output columns:\n  |  17140 <-> [17140: mock_034, DATETIME, true]\n  |  17159 <-> [17159: mock_042, DOUBLE, true]\n  |  17167 <-> [17167: mock_039, VARCHAR(65535), true]\n  |  17177 <-> [17177: mock_006, BIGINT, true]\n  |  17178 <-> [17178: mock_007, BIGINT, true]\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17203 <-> [17203: xx_hash3_64, BIGINT, true]\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  17205 <-> [17205: expr, DOUBLE, true]\n  |  17206 <-> [17206: expr, BOOLEAN, true]\n  |  17291 <-> [17291: mock_133, VARCHAR(65535), true]\n  |  17335 <-> [17335: mock_133, VARCHAR(65535), true]\n  |  17360 <-> [17360: mock_157, DATETIME, true]\n  |  29955 <-> cast([17202: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  554:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29956: cast, LARGEINT, true] = [17339: mock_177, LARGEINT, false]\n  |  equal join conjunct: [17140: mock_034, DATETIME, true] = [17360: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 46, build_expr = (17339: mock_177), remote = true\n  |  - filter_id = 47, build_expr = (17360: mock_157), remote = true\n  |  output columns: 17140, 17159, 17167, 17177, 17178, 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17202, 17203, 17204, 17205, 17206, 17291, 17335, 17360\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 49, probe_expr = (17140: mock_034), partition_exprs = (CAST(17202: xx_hash3_64 AS LARGEINT),17140: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----553:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17339: mock_177, LARGEINT, false], [17360: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  551:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29956: cast, LARGEINT, true], [17140: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 48, probe_expr = (CAST(17202: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(17202: xx_hash3_64 AS LARGEINT),17140: mock_034)\n\nPLAN FRAGMENT 424(F385)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17339: mock_177, 17360: mock_157\n  OutPut Exchange id: 553\n\n  552:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 17360: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 425(F383)\n\n  Input Partition: HASH_PARTITIONED: 17175: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29956: cast, 17140: mock_034\n  OutPut Exchange id: 551\n\n  550:Project\n  |  output columns:\n  |  17140 <-> [17140: mock_034, DATETIME, true]\n  |  17159 <-> [17159: mock_042, DOUBLE, true]\n  |  17167 <-> [17167: mock_039, VARCHAR(65535), true]\n  |  17177 <-> [17177: mock_006, BIGINT, true]\n  |  17178 <-> [17178: mock_007, BIGINT, true]\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17202 <-> [17202: xx_hash3_64, BIGINT, true]\n  |  17203 <-> [17203: xx_hash3_64, BIGINT, true]\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  17205 <-> [17205: expr, DOUBLE, true]\n  |  17206 <-> [17206: expr, BOOLEAN, true]\n  |  17291 <-> [17291: mock_133, VARCHAR(65535), true]\n  |  17335 <-> [17335: mock_133, VARCHAR(65535), true]\n  |  29956 <-> cast([17201: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  549:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17175: mock_030, LARGEINT, true] = [17338: mock_030, LARGEINT, true]\n  |  output columns: 17140, 17159, 17167, 17177, 17178, 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17201, 17202, 17203, 17204, 17205, 17206, 17291, 17335\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----548:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17338: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  546:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17175: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 46, probe_expr = (CAST(17201: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(17201: xx_hash3_64 AS LARGEINT),17140: mock_034)\n     - filter_id = 47, probe_expr = (17140: mock_034), partition_exprs = (CAST(17201: xx_hash3_64 AS LARGEINT),17140: mock_034)\n\nPLAN FRAGMENT 426(F381)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17338: mock_030\n  OutPut Exchange id: 548\n\n  547:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 427(F379)\n\n  Input Partition: HASH_PARTITIONED: 17173: mock_028\n  OutPut Partition: HASH_PARTITIONED: 17175: mock_030\n  OutPut Exchange id: 546\n\n  545:Project\n  |  output columns:\n  |  17140 <-> [17140: mock_034, DATETIME, true]\n  |  17159 <-> [17159: mock_042, DOUBLE, true]\n  |  17167 <-> [17167: mock_039, VARCHAR(65535), true]\n  |  17175 <-> [17175: mock_030, LARGEINT, true]\n  |  17177 <-> [17177: mock_006, BIGINT, true]\n  |  17178 <-> [17178: mock_007, BIGINT, true]\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17201 <-> [17201: xx_hash3_64, BIGINT, true]\n  |  17202 <-> [17202: xx_hash3_64, BIGINT, true]\n  |  17203 <-> [17203: xx_hash3_64, BIGINT, true]\n  |  17204 <-> [17204: xx_hash3_64, BIGINT, true]\n  |  17205 <-> [17205: expr, DOUBLE, true]\n  |  17206 <-> [17206: expr, BOOLEAN, true]\n  |  17291 <-> [17291: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  544:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17173: mock_028, LARGEINT, true] = [17266: mock_071, LARGEINT, true]\n  |  output columns: 17140, 17159, 17167, 17175, 17177, 17178, 17188, 17189, 17190, 17191, 17192, 17193, 17194, 17201, 17202, 17203, 17204, 17205, 17206, 17291\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----543:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17266: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  531:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17173: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 428(F377)\n\n  Input Partition: HASH_PARTITIONED: 17259: mock_075\n  OutPut Partition: HASH_PARTITIONED: 17266: mock_071\n  OutPut Exchange id: 543\n\n  542:Project\n  |  output columns:\n  |  17266 <-> [17266: mock_071, LARGEINT, true]\n  |  17291 <-> [17291: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  541:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17259: mock_075, LARGEINT, true] = [17323: mock_075, LARGEINT, true]\n  |  output columns: 17266, 17291\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----540:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17323: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  538:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17259: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 429(F375)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17323: mock_075\n  OutPut Exchange id: 540\n\n  539:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 430(F373)\n\n  Input Partition: HASH_PARTITIONED: 17261: mock_077\n  OutPut Partition: HASH_PARTITIONED: 17259: mock_075\n  OutPut Exchange id: 538\n\n  537:Project\n  |  output columns:\n  |  17259 <-> [17259: mock_075, LARGEINT, true]\n  |  17266 <-> [17266: mock_071, LARGEINT, true]\n  |  17291 <-> [17291: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  536:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [17261: mock_077, LARGEINT, true] = [17294: mock_077, LARGEINT, true]\n  |  output columns: 17259, 17266, 17291\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----535:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17294: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  533:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [17261: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 431(F371)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17294: mock_077\n  OutPut Exchange id: 535\n\n  534:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 432(F369)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17261: mock_077\n  OutPut Exchange id: 533\n\n  532:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 433(F367)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17173: mock_028\n  OutPut Exchange id: 531\n\n  530:SELECT\n  |  predicates: 17204: xx_hash3_64 IS NOT NULL, 17206: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  529:Project\n  |  output columns:\n  |  17140 <-> [17140: mock_034, DATETIME, true]\n  |  17159 <-> [17159: mock_042, DOUBLE, true]\n  |  17167 <-> [17167: mock_039, VARCHAR(65535), true]\n  |  17173 <-> [17173: mock_028, LARGEINT, true]\n  |  17175 <-> [17175: mock_030, LARGEINT, true]\n  |  17177 <-> [17177: mock_006, BIGINT, true]\n  |  17178 <-> [17178: mock_007, BIGINT, true]\n  |  17188 <-> [17188: mock_017, BOOLEAN, true]\n  |  17189 <-> [17189: mock_018, BOOLEAN, true]\n  |  17190 <-> [17190: mock_020, BOOLEAN, true]\n  |  17191 <-> [17191: mock_021, BOOLEAN, true]\n  |  17192 <-> [17192: mock_022, BOOLEAN, true]\n  |  17193 <-> [17193: mock_023, BOOLEAN, true]\n  |  17194 <-> [17194: mock_024, BOOLEAN, true]\n  |  17201 <-> xx_hash3_64[([17147: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17202 <-> xx_hash3_64[([17171: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17203 <-> xx_hash3_64[([17165: mock_002, VARCHAR(65535), true], [17167: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17204 <-> xx_hash3_64[([17167: mock_039, VARCHAR(65535), true], [17166: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  17205 <-> [17146: mock_035, DOUBLE, true] * 0.0 * 3.0\n  |  17206 <-> [17157: mock_055, DOUBLE, true] + [17159: mock_042, DOUBLE, true] + if[(17153: mock_046 IS NULL, 0.0, [17153: mock_046, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] * 365.0 / if[(((17155: mock_005 IS NULL) OR (17155: mock_005 < 0.0)) AND (17163: mock_054 != 'N'), NULL, [17155: mock_005, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] < 3.0416666666666668E10\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  528:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [17194: mock_024, BOOLEAN, true], [17191: mock_021, BOOLEAN, true], [17189: mock_018, BOOLEAN, true], [17193: mock_023, BOOLEAN, true], [17188: mock_017, BOOLEAN, true], [17192: mock_022, BOOLEAN, true], [17190: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=206.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n     * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 434(F365)\n\n  Input Partition: HASH_PARTITIONED: 29957: cast\n  OutPut Partition: HASH_PARTITIONED: 29933: cast\n  OutPut Exchange id: 527\n\n  526:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12989: expr, BOOLEAN, true]\n  |  12990 <-> [12990: expr, BOOLEAN, true]\n  |  12992 <-> [12992: case, BIGINT, true]\n  |  12993 <-> [12993: case, BIGINT, true]\n  |  12994 <-> [12994: case, DOUBLE, true]\n  |  12995 <-> [12995: case, DOUBLE, true]\n  |  14854 <-> [14854: expr, BOOLEAN, true]\n  |  17083 <-> [17083: sum, DOUBLE, true]\n  |  29933 <-> cast([12750: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  525:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29957: cast, LARGEINT, true] = [14855: mock_191, LARGEINT, true]\n  |  output columns: 12714, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12854, 12989, 12990, 12992, 12993, 12994, 12995, 14854, 17083\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----524:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14855: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  257:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29957: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 435(F181)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14855: mock_191\n  OutPut Exchange id: 524\n\n  523:Project\n  |  output columns:\n  |  14855 <-> [14855: mock_191, LARGEINT, false]\n  |  17083 <-> [17083: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  522:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [14855: mock_191, LARGEINT, false] = [29958: cast, LARGEINT, true]\n  |  output columns: 14855, 17083\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----521:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29958: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  258:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 436(F362)\n\n  Input Partition: HASH_PARTITIONED: 14974: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29958: cast\n  OutPut Exchange id: 521\n\n  520:Project\n  |  output columns:\n  |  17083 <-> [17083: sum, DOUBLE, true]\n  |  29958 <-> cast([14974: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  519:AGGREGATE (merge finalize)\n  |  aggregate: sum[([17083: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [14974: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  518:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14974: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 437(F361)\n\n  Input Partition: HASH_PARTITIONED: 29959: cast\n  OutPut Partition: HASH_PARTITIONED: 14974: xx_hash3_64\n  OutPut Exchange id: 518\n\n  517:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([17081: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [14974: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  516:Project\n  |  output columns:\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  17081 <-> if[(((((14965: mock_024) AND (14962: mock_021)) AND ((14960: mock_018) AND (14964: mock_023))) AND (((14959: mock_017) AND (14963: mock_022)) AND ((15214: expr) AND (15215: expr)))) AND (((14961: mock_020) AND (15962: case / CAST(17077: coalesce AS DOUBLE) IS NOT NULL)) AND (14977: expr)), [15219: case, DOUBLE, true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  515:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29959: cast, LARGEINT, true] = [15965: mock_193, LARGEINT, true]\n  |  other predicates: 15962: case / CAST(17077: coalesce AS DOUBLE) IS NOT NULL\n  |  output columns: 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14974, 14977, 15214, 15215, 15219, 15962, 17077\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----514:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15965: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  382:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29959: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 438(F270)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15965: mock_193\n  OutPut Exchange id: 514\n\n  513:Project\n  |  output columns:\n  |  15965 <-> [15965: mock_193, LARGEINT, false]\n  |  17077 <-> coalesce[([17076: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  512:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [15965: mock_193, LARGEINT, false] = [29960: cast, LARGEINT, true]\n  |  output columns: 15965, 17076\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----511:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29960: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  383:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 439(F358)\n\n  Input Partition: HASH_PARTITIONED: 16085: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29960: cast\n  OutPut Exchange id: 511\n\n  510:Project\n  |  output columns:\n  |  17076 <-> [17076: count, BIGINT, false]\n  |  29960 <-> cast([16085: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  509:AGGREGATE (merge finalize)\n  |  aggregate: count[([17076: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [16085: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  508:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16085: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 440(F357)\n\n  Input Partition: HASH_PARTITIONED: 29961: cast\n  OutPut Partition: HASH_PARTITIONED: 16085: xx_hash3_64\n  OutPut Exchange id: 508\n\n  507:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([17075: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [16085: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  506:Project\n  |  output columns:\n  |  16085 <-> [16085: xx_hash3_64, BIGINT, true]\n  |  17075 <-> if[(((((16075: mock_024) AND (16072: mock_021)) AND ((16070: mock_018) AND (16074: mock_023))) AND (((16069: mock_017) AND (16073: mock_022)) AND ((16324: expr) AND (16325: expr)))) AND (16071: mock_020), if[(if[(CASE WHEN (30058: expr) AND (30059: coalesce = 1) THEN 16327: case WHEN (30058: expr) AND (30059: coalesce != 1) THEN 0 ELSE 16328: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [16049: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30058 <-> [16699: sum, DOUBLE, true] > 0.0\n  |  30059 <-> coalesce[([16327: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  505:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29961: cast, LARGEINT, true] = [16700: mock_193, LARGEINT, true]\n  |  output columns: 16049, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16085, 16324, 16325, 16327, 16328, 16699\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----504:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16700: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  462:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29961: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 441(F328)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16700: mock_193\n  OutPut Exchange id: 504\n\n  503:Project\n  |  output columns:\n  |  16700 <-> [16700: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  502:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [16700: mock_193, LARGEINT, false] = [29962: cast, LARGEINT, true]\n  |  output columns: 16700\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----501:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29962: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  463:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 442(F354)\n\n  Input Partition: HASH_PARTITIONED: 16820: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29962: cast\n  OutPut Exchange id: 501\n\n  500:Project\n  |  output columns:\n  |  29962 <-> cast([16820: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  499:AGGREGATE (merge finalize)\n  |  group by: [16820: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  498:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16820: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 443(F353)\n\n  Input Partition: HASH_PARTITIONED: 29963: cast, 16756: mock_034\n  OutPut Partition: HASH_PARTITIONED: 16820: xx_hash3_64\n  OutPut Exchange id: 498\n\n  497:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [16820: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  496:Project\n  |  output columns:\n  |  16820 <-> [16820: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  495:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29963: cast, LARGEINT, true] = [17006: mock_189, LARGEINT, false]\n  |  equal join conjunct: [16756: mock_034, DATETIME, true] = [17027: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 44, build_expr = (17006: mock_189), remote = true\n  |  - filter_id = 45, build_expr = (17027: mock_157), remote = true\n  |  output columns: 16820\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----494:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [17006: mock_189, LARGEINT, false], [17027: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  492:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29963: cast, LARGEINT, true], [16756: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 444(F351)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 17006: mock_189, 17027: mock_157\n  OutPut Exchange id: 494\n\n  493:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 17027: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 445(F349)\n\n  Input Partition: HASH_PARTITIONED: 29964: cast, 16756: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29963: cast, 16756: mock_034\n  OutPut Exchange id: 492\n\n  491:Project\n  |  output columns:\n  |  16756 <-> [16756: mock_034, DATETIME, true]\n  |  16820 <-> [16820: xx_hash3_64, BIGINT, true]\n  |  29963 <-> cast([16818: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  490:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29964: cast, LARGEINT, true] = [16955: mock_177, LARGEINT, false]\n  |  equal join conjunct: [16756: mock_034, DATETIME, true] = [16976: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 42, build_expr = (16955: mock_177), remote = true\n  |  - filter_id = 43, build_expr = (16976: mock_157), remote = true\n  |  output columns: 16756, 16818, 16820\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 45, probe_expr = (16756: mock_034), partition_exprs = (CAST(16818: xx_hash3_64 AS LARGEINT),16756: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----489:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16955: mock_177, LARGEINT, false], [16976: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  487:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29964: cast, LARGEINT, true], [16756: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 44, probe_expr = (CAST(16818: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(16818: xx_hash3_64 AS LARGEINT),16756: mock_034)\n\nPLAN FRAGMENT 446(F347)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16955: mock_177, 16976: mock_157\n  OutPut Exchange id: 489\n\n  488:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 16976: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 447(F345)\n\n  Input Partition: HASH_PARTITIONED: 16791: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29964: cast, 16756: mock_034\n  OutPut Exchange id: 487\n\n  486:Project\n  |  output columns:\n  |  16756 <-> [16756: mock_034, DATETIME, true]\n  |  16818 <-> [16818: xx_hash3_64, BIGINT, true]\n  |  16820 <-> [16820: xx_hash3_64, BIGINT, true]\n  |  29964 <-> cast([16817: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  485:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16791: mock_030, LARGEINT, true] = [16954: mock_030, LARGEINT, true]\n  |  output columns: 16756, 16817, 16818, 16820\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----484:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16954: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  482:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16791: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 42, probe_expr = (CAST(16817: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(16817: xx_hash3_64 AS LARGEINT),16756: mock_034)\n     - filter_id = 43, probe_expr = (16756: mock_034), partition_exprs = (CAST(16817: xx_hash3_64 AS LARGEINT),16756: mock_034)\n\nPLAN FRAGMENT 448(F343)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16954: mock_030\n  OutPut Exchange id: 484\n\n  483:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 449(F341)\n\n  Input Partition: HASH_PARTITIONED: 16789: mock_028\n  OutPut Partition: HASH_PARTITIONED: 16791: mock_030\n  OutPut Exchange id: 482\n\n  481:Project\n  |  output columns:\n  |  16756 <-> [16756: mock_034, DATETIME, true]\n  |  16791 <-> [16791: mock_030, LARGEINT, true]\n  |  16817 <-> [16817: xx_hash3_64, BIGINT, true]\n  |  16818 <-> [16818: xx_hash3_64, BIGINT, true]\n  |  16820 <-> [16820: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  480:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16789: mock_028, LARGEINT, true] = [16882: mock_071, LARGEINT, true]\n  |  output columns: 16756, 16791, 16817, 16818, 16820\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----479:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16882: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  467:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16789: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 450(F339)\n\n  Input Partition: HASH_PARTITIONED: 16875: mock_075\n  OutPut Partition: HASH_PARTITIONED: 16882: mock_071\n  OutPut Exchange id: 479\n\n  478:Project\n  |  output columns:\n  |  16882 <-> [16882: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  477:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16875: mock_075, LARGEINT, true] = [16939: mock_075, LARGEINT, true]\n  |  output columns: 16882\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----476:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16939: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  474:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16875: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 451(F337)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16939: mock_075\n  OutPut Exchange id: 476\n\n  475:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 452(F335)\n\n  Input Partition: HASH_PARTITIONED: 16877: mock_077\n  OutPut Partition: HASH_PARTITIONED: 16875: mock_075\n  OutPut Exchange id: 474\n\n  473:Project\n  |  output columns:\n  |  16875 <-> [16875: mock_075, LARGEINT, true]\n  |  16882 <-> [16882: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  472:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16877: mock_077, LARGEINT, true] = [16910: mock_077, LARGEINT, true]\n  |  output columns: 16875, 16882\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----471:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16910: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  469:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16877: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 453(F333)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16910: mock_077\n  OutPut Exchange id: 471\n\n  470:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 454(F331)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16877: mock_077\n  OutPut Exchange id: 469\n\n  468:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 455(F329)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16789: mock_028\n  OutPut Exchange id: 467\n\n  466:SELECT\n  |  predicates: 16820: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  465:Project\n  |  output columns:\n  |  16756 <-> [16756: mock_034, DATETIME, true]\n  |  16789 <-> [16789: mock_028, LARGEINT, true]\n  |  16791 <-> [16791: mock_030, LARGEINT, true]\n  |  16817 <-> xx_hash3_64[([16763: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16818 <-> xx_hash3_64[([16787: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16820 <-> xx_hash3_64[([16783: mock_039, VARCHAR(65535), true], [16782: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  464:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [16810: mock_024, BOOLEAN, true], [16807: mock_021, BOOLEAN, true], [16805: mock_018, BOOLEAN, true], [16809: mock_023, BOOLEAN, true], [16804: mock_017, BOOLEAN, true], [16808: mock_022, BOOLEAN, true], [16806: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=110.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 456(F326)\n\n  Input Partition: HASH_PARTITIONED: 29965: cast\n  OutPut Partition: HASH_PARTITIONED: 29961: cast\n  OutPut Exchange id: 462\n\n  461:Project\n  |  output columns:\n  |  16049 <-> [16049: id, VARCHAR(65535), true]\n  |  16069 <-> [16069: mock_017, BOOLEAN, true]\n  |  16070 <-> [16070: mock_018, BOOLEAN, true]\n  |  16071 <-> [16071: mock_020, BOOLEAN, true]\n  |  16072 <-> [16072: mock_021, BOOLEAN, true]\n  |  16073 <-> [16073: mock_022, BOOLEAN, true]\n  |  16074 <-> [16074: mock_023, BOOLEAN, true]\n  |  16075 <-> [16075: mock_024, BOOLEAN, true]\n  |  16085 <-> [16085: xx_hash3_64, BIGINT, true]\n  |  16324 <-> [16324: expr, BOOLEAN, true]\n  |  16325 <-> [16325: expr, BOOLEAN, true]\n  |  16327 <-> [16327: case, BIGINT, true]\n  |  16328 <-> [16328: case, BIGINT, true]\n  |  16699 <-> [16699: sum, DOUBLE, true]\n  |  29961 <-> cast([16085: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  460:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29965: cast, LARGEINT, true] = [16331: mock_191, LARGEINT, true]\n  |  output columns: 16049, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16085, 16324, 16325, 16327, 16328, 16699\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----459:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16331: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  417:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29965: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 457(F297)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16331: mock_191\n  OutPut Exchange id: 459\n\n  458:Project\n  |  output columns:\n  |  16331 <-> [16331: mock_191, LARGEINT, false]\n  |  16699 <-> [16699: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  457:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [16331: mock_191, LARGEINT, false] = [29966: cast, LARGEINT, true]\n  |  output columns: 16331, 16699\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----456:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29966: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  418:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 458(F323)\n\n  Input Partition: HASH_PARTITIONED: 16450: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29966: cast\n  OutPut Exchange id: 456\n\n  455:Project\n  |  output columns:\n  |  16699 <-> [16699: sum, DOUBLE, true]\n  |  29966 <-> cast([16450: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  454:AGGREGATE (merge finalize)\n  |  aggregate: sum[([16699: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [16450: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  453:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16450: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 459(F322)\n\n  Input Partition: HASH_PARTITIONED: 29967: cast, 16387: mock_034\n  OutPut Partition: HASH_PARTITIONED: 16450: xx_hash3_64\n  OutPut Exchange id: 453\n\n  452:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([16697: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [16450: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  451:Project\n  |  output columns:\n  |  16450 <-> [16450: xx_hash3_64, BIGINT, true]\n  |  16697 <-> if[(((((16441: mock_024) AND (16438: mock_021)) AND ((16436: mock_018) AND (16440: mock_023))) AND (((16435: mock_017) AND (16439: mock_022)) AND ((16387: mock_034 = 16607: mock_157) AND (16387: mock_034 = 16658: mock_157)))) AND (16437: mock_020), if[(if[(if(16538: mock_133 = 16582: mock_133, 16414: mock_039, NULL) IS NULL, NULL, [16425: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [16406: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  450:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29967: cast, LARGEINT, true] = [16637: mock_189, LARGEINT, false]\n  |  equal join conjunct: [16387: mock_034, DATETIME, true] = [16658: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 40, build_expr = (16637: mock_189), remote = true\n  |  - filter_id = 41, build_expr = (16658: mock_157), remote = true\n  |  output columns: 16387, 16406, 16414, 16425, 16435, 16436, 16437, 16438, 16439, 16440, 16441, 16450, 16538, 16582, 16607, 16658\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----449:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16637: mock_189, LARGEINT, false], [16658: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  447:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29967: cast, LARGEINT, true], [16387: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 460(F320)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16637: mock_189, 16658: mock_157\n  OutPut Exchange id: 449\n\n  448:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 16658: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 461(F318)\n\n  Input Partition: HASH_PARTITIONED: 29968: cast, 16387: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29967: cast, 16387: mock_034\n  OutPut Exchange id: 447\n\n  446:Project\n  |  output columns:\n  |  16387 <-> [16387: mock_034, DATETIME, true]\n  |  16406 <-> [16406: mock_042, DOUBLE, true]\n  |  16414 <-> [16414: mock_039, VARCHAR(65535), true]\n  |  16425 <-> [16425: mock_007, BIGINT, true]\n  |  16435 <-> [16435: mock_017, BOOLEAN, true]\n  |  16436 <-> [16436: mock_018, BOOLEAN, true]\n  |  16437 <-> [16437: mock_020, BOOLEAN, true]\n  |  16438 <-> [16438: mock_021, BOOLEAN, true]\n  |  16439 <-> [16439: mock_022, BOOLEAN, true]\n  |  16440 <-> [16440: mock_023, BOOLEAN, true]\n  |  16441 <-> [16441: mock_024, BOOLEAN, true]\n  |  16450 <-> [16450: xx_hash3_64, BIGINT, true]\n  |  16538 <-> [16538: mock_133, VARCHAR(65535), true]\n  |  16582 <-> [16582: mock_133, VARCHAR(65535), true]\n  |  16607 <-> [16607: mock_157, DATETIME, true]\n  |  29967 <-> cast([16449: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  445:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29968: cast, LARGEINT, true] = [16586: mock_177, LARGEINT, false]\n  |  equal join conjunct: [16387: mock_034, DATETIME, true] = [16607: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 38, build_expr = (16586: mock_177), remote = true\n  |  - filter_id = 39, build_expr = (16607: mock_157), remote = true\n  |  output columns: 16387, 16406, 16414, 16425, 16435, 16436, 16437, 16438, 16439, 16440, 16441, 16449, 16450, 16538, 16582, 16607\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 41, probe_expr = (16387: mock_034), partition_exprs = (CAST(16449: xx_hash3_64 AS LARGEINT),16387: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----444:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16586: mock_177, LARGEINT, false], [16607: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  442:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29968: cast, LARGEINT, true], [16387: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 40, probe_expr = (CAST(16449: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(16449: xx_hash3_64 AS LARGEINT),16387: mock_034)\n\nPLAN FRAGMENT 462(F316)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16586: mock_177, 16607: mock_157\n  OutPut Exchange id: 444\n\n  443:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 16607: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 463(F314)\n\n  Input Partition: HASH_PARTITIONED: 16422: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29968: cast, 16387: mock_034\n  OutPut Exchange id: 442\n\n  441:Project\n  |  output columns:\n  |  16387 <-> [16387: mock_034, DATETIME, true]\n  |  16406 <-> [16406: mock_042, DOUBLE, true]\n  |  16414 <-> [16414: mock_039, VARCHAR(65535), true]\n  |  16425 <-> [16425: mock_007, BIGINT, true]\n  |  16435 <-> [16435: mock_017, BOOLEAN, true]\n  |  16436 <-> [16436: mock_018, BOOLEAN, true]\n  |  16437 <-> [16437: mock_020, BOOLEAN, true]\n  |  16438 <-> [16438: mock_021, BOOLEAN, true]\n  |  16439 <-> [16439: mock_022, BOOLEAN, true]\n  |  16440 <-> [16440: mock_023, BOOLEAN, true]\n  |  16441 <-> [16441: mock_024, BOOLEAN, true]\n  |  16449 <-> [16449: xx_hash3_64, BIGINT, true]\n  |  16450 <-> [16450: xx_hash3_64, BIGINT, true]\n  |  16538 <-> [16538: mock_133, VARCHAR(65535), true]\n  |  16582 <-> [16582: mock_133, VARCHAR(65535), true]\n  |  29968 <-> cast([16448: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  440:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16422: mock_030, LARGEINT, true] = [16585: mock_030, LARGEINT, true]\n  |  output columns: 16387, 16406, 16414, 16425, 16435, 16436, 16437, 16438, 16439, 16440, 16441, 16448, 16449, 16450, 16538, 16582\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----439:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16585: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  437:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16422: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 38, probe_expr = (CAST(16448: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(16448: xx_hash3_64 AS LARGEINT),16387: mock_034)\n     - filter_id = 39, probe_expr = (16387: mock_034), partition_exprs = (CAST(16448: xx_hash3_64 AS LARGEINT),16387: mock_034)\n\nPLAN FRAGMENT 464(F312)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16585: mock_030\n  OutPut Exchange id: 439\n\n  438:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 465(F310)\n\n  Input Partition: HASH_PARTITIONED: 16420: mock_028\n  OutPut Partition: HASH_PARTITIONED: 16422: mock_030\n  OutPut Exchange id: 437\n\n  436:Project\n  |  output columns:\n  |  16387 <-> [16387: mock_034, DATETIME, true]\n  |  16406 <-> [16406: mock_042, DOUBLE, true]\n  |  16414 <-> [16414: mock_039, VARCHAR(65535), true]\n  |  16422 <-> [16422: mock_030, LARGEINT, true]\n  |  16425 <-> [16425: mock_007, BIGINT, true]\n  |  16435 <-> [16435: mock_017, BOOLEAN, true]\n  |  16436 <-> [16436: mock_018, BOOLEAN, true]\n  |  16437 <-> [16437: mock_020, BOOLEAN, true]\n  |  16438 <-> [16438: mock_021, BOOLEAN, true]\n  |  16439 <-> [16439: mock_022, BOOLEAN, true]\n  |  16440 <-> [16440: mock_023, BOOLEAN, true]\n  |  16441 <-> [16441: mock_024, BOOLEAN, true]\n  |  16448 <-> [16448: xx_hash3_64, BIGINT, true]\n  |  16449 <-> [16449: xx_hash3_64, BIGINT, true]\n  |  16450 <-> [16450: xx_hash3_64, BIGINT, true]\n  |  16538 <-> [16538: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  435:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16420: mock_028, LARGEINT, true] = [16513: mock_071, LARGEINT, true]\n  |  output columns: 16387, 16406, 16414, 16422, 16425, 16435, 16436, 16437, 16438, 16439, 16440, 16441, 16448, 16449, 16450, 16538\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----434:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16513: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  422:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16420: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 466(F308)\n\n  Input Partition: HASH_PARTITIONED: 16506: mock_075\n  OutPut Partition: HASH_PARTITIONED: 16513: mock_071\n  OutPut Exchange id: 434\n\n  433:Project\n  |  output columns:\n  |  16513 <-> [16513: mock_071, LARGEINT, true]\n  |  16538 <-> [16538: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  432:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16506: mock_075, LARGEINT, true] = [16570: mock_075, LARGEINT, true]\n  |  output columns: 16513, 16538\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----431:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16570: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  429:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16506: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 467(F306)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16570: mock_075\n  OutPut Exchange id: 431\n\n  430:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 468(F304)\n\n  Input Partition: HASH_PARTITIONED: 16508: mock_077\n  OutPut Partition: HASH_PARTITIONED: 16506: mock_075\n  OutPut Exchange id: 429\n\n  428:Project\n  |  output columns:\n  |  16506 <-> [16506: mock_075, LARGEINT, true]\n  |  16513 <-> [16513: mock_071, LARGEINT, true]\n  |  16538 <-> [16538: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  427:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16508: mock_077, LARGEINT, true] = [16541: mock_077, LARGEINT, true]\n  |  output columns: 16506, 16513, 16538\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----426:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16541: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  424:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16508: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 469(F302)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16541: mock_077\n  OutPut Exchange id: 426\n\n  425:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 470(F300)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16508: mock_077\n  OutPut Exchange id: 424\n\n  423:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 471(F298)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16420: mock_028\n  OutPut Exchange id: 422\n\n  421:SELECT\n  |  predicates: 16450: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  420:Project\n  |  output columns:\n  |  16387 <-> [16387: mock_034, DATETIME, true]\n  |  16406 <-> [16406: mock_042, DOUBLE, true]\n  |  16414 <-> [16414: mock_039, VARCHAR(65535), true]\n  |  16420 <-> [16420: mock_028, LARGEINT, true]\n  |  16422 <-> [16422: mock_030, LARGEINT, true]\n  |  16425 <-> [16425: mock_007, BIGINT, true]\n  |  16435 <-> [16435: mock_017, BOOLEAN, true]\n  |  16436 <-> [16436: mock_018, BOOLEAN, true]\n  |  16437 <-> [16437: mock_020, BOOLEAN, true]\n  |  16438 <-> [16438: mock_021, BOOLEAN, true]\n  |  16439 <-> [16439: mock_022, BOOLEAN, true]\n  |  16440 <-> [16440: mock_023, BOOLEAN, true]\n  |  16441 <-> [16441: mock_024, BOOLEAN, true]\n  |  16448 <-> xx_hash3_64[([16394: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16449 <-> xx_hash3_64[([16418: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16450 <-> xx_hash3_64[([16412: mock_002, VARCHAR(65535), true], [16414: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  419:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [16441: mock_024, BOOLEAN, true], [16438: mock_021, BOOLEAN, true], [16436: mock_018, BOOLEAN, true], [16440: mock_023, BOOLEAN, true], [16435: mock_017, BOOLEAN, true], [16439: mock_022, BOOLEAN, true], [16437: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 472(F295)\n\n  Input Partition: HASH_PARTITIONED: 29969: cast, 16021: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29965: cast\n  OutPut Exchange id: 417\n\n  416:Project\n  |  output columns:\n  |  16049 <-> [16049: id, VARCHAR(65535), true]\n  |  16069 <-> [16069: mock_017, BOOLEAN, true]\n  |  16070 <-> [16070: mock_018, BOOLEAN, true]\n  |  16071 <-> [16071: mock_020, BOOLEAN, true]\n  |  16072 <-> [16072: mock_021, BOOLEAN, true]\n  |  16073 <-> [16073: mock_022, BOOLEAN, true]\n  |  16074 <-> [16074: mock_023, BOOLEAN, true]\n  |  16075 <-> [16075: mock_024, BOOLEAN, true]\n  |  16085 <-> [16085: xx_hash3_64, BIGINT, true]\n  |  16324 <-> [16021: mock_034, DATETIME, true] = [16241: mock_157, DATETIME, true]\n  |  16325 <-> [16021: mock_034, DATETIME, true] = [16292: mock_157, DATETIME, true]\n  |  16327 <-> if[(if(16172: mock_133 = 16216: mock_133, 16048: mock_039, NULL) IS NULL, NULL, [16059: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  16328 <-> if[(if(16172: mock_133 != 16216: mock_133, 16048: mock_039, NULL) IS NULL, NULL, [16058: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29965 <-> cast([16084: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  415:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29969: cast, LARGEINT, true] = [16271: mock_189, LARGEINT, false]\n  |  equal join conjunct: [16021: mock_034, DATETIME, true] = [16292: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 36, build_expr = (16271: mock_189), remote = true\n  |  - filter_id = 37, build_expr = (16292: mock_157), remote = true\n  |  output columns: 16021, 16048, 16049, 16058, 16059, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16084, 16085, 16172, 16216, 16241, 16292\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----414:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16271: mock_189, LARGEINT, false], [16292: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  412:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29969: cast, LARGEINT, true], [16021: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 473(F293)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16271: mock_189, 16292: mock_157\n  OutPut Exchange id: 414\n\n  413:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 16292: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 474(F291)\n\n  Input Partition: HASH_PARTITIONED: 29970: cast, 16021: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29969: cast, 16021: mock_034\n  OutPut Exchange id: 412\n\n  411:Project\n  |  output columns:\n  |  16021 <-> [16021: mock_034, DATETIME, true]\n  |  16048 <-> [16048: mock_039, VARCHAR(65535), true]\n  |  16049 <-> [16049: id, VARCHAR(65535), true]\n  |  16058 <-> [16058: mock_006, BIGINT, true]\n  |  16059 <-> [16059: mock_007, BIGINT, true]\n  |  16069 <-> [16069: mock_017, BOOLEAN, true]\n  |  16070 <-> [16070: mock_018, BOOLEAN, true]\n  |  16071 <-> [16071: mock_020, BOOLEAN, true]\n  |  16072 <-> [16072: mock_021, BOOLEAN, true]\n  |  16073 <-> [16073: mock_022, BOOLEAN, true]\n  |  16074 <-> [16074: mock_023, BOOLEAN, true]\n  |  16075 <-> [16075: mock_024, BOOLEAN, true]\n  |  16084 <-> [16084: xx_hash3_64, BIGINT, true]\n  |  16085 <-> [16085: xx_hash3_64, BIGINT, true]\n  |  16172 <-> [16172: mock_133, VARCHAR(65535), true]\n  |  16216 <-> [16216: mock_133, VARCHAR(65535), true]\n  |  16241 <-> [16241: mock_157, DATETIME, true]\n  |  29969 <-> cast([16083: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  410:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29970: cast, LARGEINT, true] = [16220: mock_177, LARGEINT, false]\n  |  equal join conjunct: [16021: mock_034, DATETIME, true] = [16241: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 34, build_expr = (16220: mock_177), remote = true\n  |  - filter_id = 35, build_expr = (16241: mock_157), remote = true\n  |  output columns: 16021, 16048, 16049, 16058, 16059, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16083, 16084, 16085, 16172, 16216, 16241\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 37, probe_expr = (16021: mock_034), partition_exprs = (CAST(16083: xx_hash3_64 AS LARGEINT),16021: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----409:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16220: mock_177, LARGEINT, false], [16241: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  407:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29970: cast, LARGEINT, true], [16021: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 36, probe_expr = (CAST(16083: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(16083: xx_hash3_64 AS LARGEINT),16021: mock_034)\n\nPLAN FRAGMENT 475(F289)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16220: mock_177, 16241: mock_157\n  OutPut Exchange id: 409\n\n  408:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 16241: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 476(F287)\n\n  Input Partition: HASH_PARTITIONED: 16056: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29970: cast, 16021: mock_034\n  OutPut Exchange id: 407\n\n  406:Project\n  |  output columns:\n  |  16021 <-> [16021: mock_034, DATETIME, true]\n  |  16048 <-> [16048: mock_039, VARCHAR(65535), true]\n  |  16049 <-> [16049: id, VARCHAR(65535), true]\n  |  16058 <-> [16058: mock_006, BIGINT, true]\n  |  16059 <-> [16059: mock_007, BIGINT, true]\n  |  16069 <-> [16069: mock_017, BOOLEAN, true]\n  |  16070 <-> [16070: mock_018, BOOLEAN, true]\n  |  16071 <-> [16071: mock_020, BOOLEAN, true]\n  |  16072 <-> [16072: mock_021, BOOLEAN, true]\n  |  16073 <-> [16073: mock_022, BOOLEAN, true]\n  |  16074 <-> [16074: mock_023, BOOLEAN, true]\n  |  16075 <-> [16075: mock_024, BOOLEAN, true]\n  |  16083 <-> [16083: xx_hash3_64, BIGINT, true]\n  |  16084 <-> [16084: xx_hash3_64, BIGINT, true]\n  |  16085 <-> [16085: xx_hash3_64, BIGINT, true]\n  |  16172 <-> [16172: mock_133, VARCHAR(65535), true]\n  |  16216 <-> [16216: mock_133, VARCHAR(65535), true]\n  |  29970 <-> cast([16082: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  405:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16056: mock_030, LARGEINT, true] = [16219: mock_030, LARGEINT, true]\n  |  output columns: 16021, 16048, 16049, 16058, 16059, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16082, 16083, 16084, 16085, 16172, 16216\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----404:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16219: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  402:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16056: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 34, probe_expr = (CAST(16082: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(16082: xx_hash3_64 AS LARGEINT),16021: mock_034)\n     - filter_id = 35, probe_expr = (16021: mock_034), partition_exprs = (CAST(16082: xx_hash3_64 AS LARGEINT),16021: mock_034)\n\nPLAN FRAGMENT 477(F285)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16219: mock_030\n  OutPut Exchange id: 404\n\n  403:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 478(F283)\n\n  Input Partition: HASH_PARTITIONED: 16054: mock_028\n  OutPut Partition: HASH_PARTITIONED: 16056: mock_030\n  OutPut Exchange id: 402\n\n  401:Project\n  |  output columns:\n  |  16021 <-> [16021: mock_034, DATETIME, true]\n  |  16048 <-> [16048: mock_039, VARCHAR(65535), true]\n  |  16049 <-> [16049: id, VARCHAR(65535), true]\n  |  16056 <-> [16056: mock_030, LARGEINT, true]\n  |  16058 <-> [16058: mock_006, BIGINT, true]\n  |  16059 <-> [16059: mock_007, BIGINT, true]\n  |  16069 <-> [16069: mock_017, BOOLEAN, true]\n  |  16070 <-> [16070: mock_018, BOOLEAN, true]\n  |  16071 <-> [16071: mock_020, BOOLEAN, true]\n  |  16072 <-> [16072: mock_021, BOOLEAN, true]\n  |  16073 <-> [16073: mock_022, BOOLEAN, true]\n  |  16074 <-> [16074: mock_023, BOOLEAN, true]\n  |  16075 <-> [16075: mock_024, BOOLEAN, true]\n  |  16082 <-> [16082: xx_hash3_64, BIGINT, true]\n  |  16083 <-> [16083: xx_hash3_64, BIGINT, true]\n  |  16084 <-> [16084: xx_hash3_64, BIGINT, true]\n  |  16085 <-> [16085: xx_hash3_64, BIGINT, true]\n  |  16172 <-> [16172: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  400:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16054: mock_028, LARGEINT, true] = [16147: mock_071, LARGEINT, true]\n  |  output columns: 16021, 16048, 16049, 16056, 16058, 16059, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16082, 16083, 16084, 16085, 16172\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----399:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16147: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  387:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16054: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 479(F281)\n\n  Input Partition: HASH_PARTITIONED: 16140: mock_075\n  OutPut Partition: HASH_PARTITIONED: 16147: mock_071\n  OutPut Exchange id: 399\n\n  398:Project\n  |  output columns:\n  |  16147 <-> [16147: mock_071, LARGEINT, true]\n  |  16172 <-> [16172: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  397:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16140: mock_075, LARGEINT, true] = [16204: mock_075, LARGEINT, true]\n  |  output columns: 16147, 16172\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----396:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16204: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  394:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16140: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 480(F279)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16204: mock_075\n  OutPut Exchange id: 396\n\n  395:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 481(F277)\n\n  Input Partition: HASH_PARTITIONED: 16142: mock_077\n  OutPut Partition: HASH_PARTITIONED: 16140: mock_075\n  OutPut Exchange id: 394\n\n  393:Project\n  |  output columns:\n  |  16140 <-> [16140: mock_075, LARGEINT, true]\n  |  16147 <-> [16147: mock_071, LARGEINT, true]\n  |  16172 <-> [16172: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  392:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [16142: mock_077, LARGEINT, true] = [16175: mock_077, LARGEINT, true]\n  |  output columns: 16140, 16147, 16172\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----391:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [16175: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  389:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [16142: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 482(F275)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16175: mock_077\n  OutPut Exchange id: 391\n\n  390:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 483(F273)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16142: mock_077\n  OutPut Exchange id: 389\n\n  388:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 484(F271)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 16054: mock_028\n  OutPut Exchange id: 387\n\n  386:SELECT\n  |  predicates: 16085: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  385:Project\n  |  output columns:\n  |  16021 <-> [16021: mock_034, DATETIME, true]\n  |  16048 <-> [16048: mock_039, VARCHAR(65535), true]\n  |  16049 <-> [16049: id, VARCHAR(65535), true]\n  |  16054 <-> [16054: mock_028, LARGEINT, true]\n  |  16056 <-> [16056: mock_030, LARGEINT, true]\n  |  16058 <-> [16058: mock_006, BIGINT, true]\n  |  16059 <-> [16059: mock_007, BIGINT, true]\n  |  16069 <-> [16069: mock_017, BOOLEAN, true]\n  |  16070 <-> [16070: mock_018, BOOLEAN, true]\n  |  16071 <-> [16071: mock_020, BOOLEAN, true]\n  |  16072 <-> [16072: mock_021, BOOLEAN, true]\n  |  16073 <-> [16073: mock_022, BOOLEAN, true]\n  |  16074 <-> [16074: mock_023, BOOLEAN, true]\n  |  16075 <-> [16075: mock_024, BOOLEAN, true]\n  |  16082 <-> xx_hash3_64[([16028: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16083 <-> xx_hash3_64[([16052: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16084 <-> xx_hash3_64[([16046: mock_002, VARCHAR(65535), true], [16048: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  16085 <-> xx_hash3_64[([16048: mock_039, VARCHAR(65535), true], [16047: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  384:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [16075: mock_024, BOOLEAN, true], [16072: mock_021, BOOLEAN, true], [16070: mock_018, BOOLEAN, true], [16074: mock_023, BOOLEAN, true], [16069: mock_017, BOOLEAN, true], [16073: mock_022, BOOLEAN, true], [16071: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=148.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 485(F268)\n\n  Input Partition: HASH_PARTITIONED: 29972: cast\n  OutPut Partition: HASH_PARTITIONED: 29959: cast\n  OutPut Exchange id: 382\n\n  381:Project\n  |  output columns:\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  14977 <-> [14977: expr, BOOLEAN, true]\n  |  15214 <-> [15214: expr, BOOLEAN, true]\n  |  15215 <-> [15215: expr, BOOLEAN, true]\n  |  15219 <-> [15219: case, DOUBLE, true]\n  |  15962 <-> if[([30043: case, DOUBLE, true] > [14976: expr, DOUBLE, true], [30043: case, DOUBLE, true] * cast(if[(CASE WHEN 30041: expr THEN 15217: case WHEN (30037: expr) AND (30038: coalesce != 1) THEN 0 ELSE 15218: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29959 <-> cast([14975: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30037 <-> [15589: sum, DOUBLE, true] > 0.0\n  |  30038 <-> coalesce[([15217: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30039 <-> [30038: coalesce, BIGINT, true] = 1\n  |  30040 <-> [30038: coalesce, BIGINT, true] = 0\n  |  30041 <-> (30037: expr) AND (30039: expr)\n  |  30042 <-> (30037: expr) AND (30040: expr)\n  |  30043 <-> CASE WHEN 30041: expr THEN 15958: sum WHEN 30042: expr THEN 0.0 ELSE 15959: sum END\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  380:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29971: cast, LARGEINT, true] = [15590: mock_193, LARGEINT, true]\n  |  output columns: 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14974, 14975, 14976, 14977, 15214, 15215, 15217, 15218, 15219, 15589, 15958, 15959\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----379:Project\n  |    |  output columns:\n  |    |  15590 <-> [15590: mock_193, LARGEINT, false]\n  |    |  15958 <-> [15958: sum, DOUBLE, true]\n  |    |  15959 <-> [15959: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    378:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29972: cast, LARGEINT, true] = [15590: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 33, build_expr = (15590: mock_193), remote = true\n  |    |  output columns: 15590, 15958, 15959\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----377:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [15590: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    375:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29972: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  337:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29971: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 486(F266)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15590: mock_193\n  OutPut Exchange id: 377\n\n  376:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 487(F264)\n\n  Input Partition: HASH_PARTITIONED: 15710: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29972: cast\n  OutPut Exchange id: 375\n\n  374:Project\n  |  output columns:\n  |  15958 <-> [15958: sum, DOUBLE, true]\n  |  15959 <-> [15959: sum, DOUBLE, true]\n  |  29972 <-> cast([15710: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  373:AGGREGATE (merge finalize)\n  |  aggregate: sum[([15958: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([15959: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [15710: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 33, probe_expr = (CAST(15710: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  372:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15710: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 488(F263)\n\n  Input Partition: HASH_PARTITIONED: 29973: cast, 15646: mock_034\n  OutPut Partition: HASH_PARTITIONED: 15710: xx_hash3_64\n  OutPut Exchange id: 372\n\n  371:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([15956: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([15957: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [15710: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  370:Project\n  |  output columns:\n  |  15710 <-> [15710: xx_hash3_64, BIGINT, true]\n  |  15956 <-> if[([30057: expr, BOOLEAN, true], if[(if[(if(15797: mock_133 = 15841: mock_133, 15673: mock_039, NULL) IS NULL, NULL, [15684: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [15665: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  15957 <-> if[([30057: expr, BOOLEAN, true], if[(if[(if(15797: mock_133 != 15841: mock_133, 15673: mock_039, NULL) IS NULL, NULL, [15683: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [15665: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30048 <-> (15700: mock_024) AND (15697: mock_021)\n  |  30049 <-> (15695: mock_018) AND (15699: mock_023)\n  |  30050 <-> (15694: mock_017) AND (15698: mock_022)\n  |  30051 <-> [15646: mock_034, DATETIME, true] = [15866: mock_157, DATETIME, true]\n  |  30052 <-> [15646: mock_034, DATETIME, true] = [15917: mock_157, DATETIME, true]\n  |  30053 <-> (30048: expr) AND (30049: expr)\n  |  30054 <-> (30051: expr) AND (30052: expr)\n  |  30055 <-> (30050: expr) AND (30054: expr)\n  |  30056 <-> (30053: expr) AND (30055: expr)\n  |  30057 <-> (30056: expr) AND (15696: mock_020)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  369:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29973: cast, LARGEINT, true] = [15896: mock_189, LARGEINT, false]\n  |  equal join conjunct: [15646: mock_034, DATETIME, true] = [15917: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 31, build_expr = (15896: mock_189), remote = true\n  |  - filter_id = 32, build_expr = (15917: mock_157), remote = true\n  |  output columns: 15646, 15665, 15673, 15683, 15684, 15694, 15695, 15696, 15697, 15698, 15699, 15700, 15710, 15797, 15841, 15866, 15917\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----368:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15896: mock_189, LARGEINT, false], [15917: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  366:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29973: cast, LARGEINT, true], [15646: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 489(F261)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15896: mock_189, 15917: mock_157\n  OutPut Exchange id: 368\n\n  367:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 15917: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 490(F259)\n\n  Input Partition: HASH_PARTITIONED: 29974: cast, 15646: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29973: cast, 15646: mock_034\n  OutPut Exchange id: 366\n\n  365:Project\n  |  output columns:\n  |  15646 <-> [15646: mock_034, DATETIME, true]\n  |  15665 <-> [15665: mock_042, DOUBLE, true]\n  |  15673 <-> [15673: mock_039, VARCHAR(65535), true]\n  |  15683 <-> [15683: mock_006, BIGINT, true]\n  |  15684 <-> [15684: mock_007, BIGINT, true]\n  |  15694 <-> [15694: mock_017, BOOLEAN, true]\n  |  15695 <-> [15695: mock_018, BOOLEAN, true]\n  |  15696 <-> [15696: mock_020, BOOLEAN, true]\n  |  15697 <-> [15697: mock_021, BOOLEAN, true]\n  |  15698 <-> [15698: mock_022, BOOLEAN, true]\n  |  15699 <-> [15699: mock_023, BOOLEAN, true]\n  |  15700 <-> [15700: mock_024, BOOLEAN, true]\n  |  15710 <-> [15710: xx_hash3_64, BIGINT, true]\n  |  15797 <-> [15797: mock_133, VARCHAR(65535), true]\n  |  15841 <-> [15841: mock_133, VARCHAR(65535), true]\n  |  15866 <-> [15866: mock_157, DATETIME, true]\n  |  29973 <-> cast([15708: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  364:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29974: cast, LARGEINT, true] = [15845: mock_177, LARGEINT, false]\n  |  equal join conjunct: [15646: mock_034, DATETIME, true] = [15866: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 29, build_expr = (15845: mock_177), remote = true\n  |  - filter_id = 30, build_expr = (15866: mock_157), remote = true\n  |  output columns: 15646, 15665, 15673, 15683, 15684, 15694, 15695, 15696, 15697, 15698, 15699, 15700, 15708, 15710, 15797, 15841, 15866\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 32, probe_expr = (15646: mock_034), partition_exprs = (CAST(15708: xx_hash3_64 AS LARGEINT),15646: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----363:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15845: mock_177, LARGEINT, false], [15866: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  361:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29974: cast, LARGEINT, true], [15646: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 31, probe_expr = (CAST(15708: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(15708: xx_hash3_64 AS LARGEINT),15646: mock_034)\n\nPLAN FRAGMENT 491(F257)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15845: mock_177, 15866: mock_157\n  OutPut Exchange id: 363\n\n  362:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 15866: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 492(F255)\n\n  Input Partition: HASH_PARTITIONED: 15681: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29974: cast, 15646: mock_034\n  OutPut Exchange id: 361\n\n  360:Project\n  |  output columns:\n  |  15646 <-> [15646: mock_034, DATETIME, true]\n  |  15665 <-> [15665: mock_042, DOUBLE, true]\n  |  15673 <-> [15673: mock_039, VARCHAR(65535), true]\n  |  15683 <-> [15683: mock_006, BIGINT, true]\n  |  15684 <-> [15684: mock_007, BIGINT, true]\n  |  15694 <-> [15694: mock_017, BOOLEAN, true]\n  |  15695 <-> [15695: mock_018, BOOLEAN, true]\n  |  15696 <-> [15696: mock_020, BOOLEAN, true]\n  |  15697 <-> [15697: mock_021, BOOLEAN, true]\n  |  15698 <-> [15698: mock_022, BOOLEAN, true]\n  |  15699 <-> [15699: mock_023, BOOLEAN, true]\n  |  15700 <-> [15700: mock_024, BOOLEAN, true]\n  |  15708 <-> [15708: xx_hash3_64, BIGINT, true]\n  |  15710 <-> [15710: xx_hash3_64, BIGINT, true]\n  |  15797 <-> [15797: mock_133, VARCHAR(65535), true]\n  |  15841 <-> [15841: mock_133, VARCHAR(65535), true]\n  |  29974 <-> cast([15707: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  359:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15681: mock_030, LARGEINT, true] = [15844: mock_030, LARGEINT, true]\n  |  output columns: 15646, 15665, 15673, 15683, 15684, 15694, 15695, 15696, 15697, 15698, 15699, 15700, 15707, 15708, 15710, 15797, 15841\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----358:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15844: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  356:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15681: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 29, probe_expr = (CAST(15707: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(15707: xx_hash3_64 AS LARGEINT),15646: mock_034)\n     - filter_id = 30, probe_expr = (15646: mock_034), partition_exprs = (CAST(15707: xx_hash3_64 AS LARGEINT),15646: mock_034)\n\nPLAN FRAGMENT 493(F253)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15844: mock_030\n  OutPut Exchange id: 358\n\n  357:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 494(F251)\n\n  Input Partition: HASH_PARTITIONED: 15679: mock_028\n  OutPut Partition: HASH_PARTITIONED: 15681: mock_030\n  OutPut Exchange id: 356\n\n  355:Project\n  |  output columns:\n  |  15646 <-> [15646: mock_034, DATETIME, true]\n  |  15665 <-> [15665: mock_042, DOUBLE, true]\n  |  15673 <-> [15673: mock_039, VARCHAR(65535), true]\n  |  15681 <-> [15681: mock_030, LARGEINT, true]\n  |  15683 <-> [15683: mock_006, BIGINT, true]\n  |  15684 <-> [15684: mock_007, BIGINT, true]\n  |  15694 <-> [15694: mock_017, BOOLEAN, true]\n  |  15695 <-> [15695: mock_018, BOOLEAN, true]\n  |  15696 <-> [15696: mock_020, BOOLEAN, true]\n  |  15697 <-> [15697: mock_021, BOOLEAN, true]\n  |  15698 <-> [15698: mock_022, BOOLEAN, true]\n  |  15699 <-> [15699: mock_023, BOOLEAN, true]\n  |  15700 <-> [15700: mock_024, BOOLEAN, true]\n  |  15707 <-> [15707: xx_hash3_64, BIGINT, true]\n  |  15708 <-> [15708: xx_hash3_64, BIGINT, true]\n  |  15710 <-> [15710: xx_hash3_64, BIGINT, true]\n  |  15797 <-> [15797: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  354:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15679: mock_028, LARGEINT, true] = [15772: mock_071, LARGEINT, true]\n  |  output columns: 15646, 15665, 15673, 15681, 15683, 15684, 15694, 15695, 15696, 15697, 15698, 15699, 15700, 15707, 15708, 15710, 15797\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----353:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15772: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  341:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15679: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 495(F249)\n\n  Input Partition: HASH_PARTITIONED: 15765: mock_075\n  OutPut Partition: HASH_PARTITIONED: 15772: mock_071\n  OutPut Exchange id: 353\n\n  352:Project\n  |  output columns:\n  |  15772 <-> [15772: mock_071, LARGEINT, true]\n  |  15797 <-> [15797: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  351:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15765: mock_075, LARGEINT, true] = [15829: mock_075, LARGEINT, true]\n  |  output columns: 15772, 15797\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----350:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15829: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  348:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15765: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 496(F247)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15829: mock_075\n  OutPut Exchange id: 350\n\n  349:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 497(F245)\n\n  Input Partition: HASH_PARTITIONED: 15767: mock_077\n  OutPut Partition: HASH_PARTITIONED: 15765: mock_075\n  OutPut Exchange id: 348\n\n  347:Project\n  |  output columns:\n  |  15765 <-> [15765: mock_075, LARGEINT, true]\n  |  15772 <-> [15772: mock_071, LARGEINT, true]\n  |  15797 <-> [15797: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  346:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15767: mock_077, LARGEINT, true] = [15800: mock_077, LARGEINT, true]\n  |  output columns: 15765, 15772, 15797\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----345:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15800: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  343:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15767: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 498(F243)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15800: mock_077\n  OutPut Exchange id: 345\n\n  344:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 499(F241)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15767: mock_077\n  OutPut Exchange id: 343\n\n  342:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 500(F239)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15679: mock_028\n  OutPut Exchange id: 341\n\n  340:SELECT\n  |  predicates: 15710: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  339:Project\n  |  output columns:\n  |  15646 <-> [15646: mock_034, DATETIME, true]\n  |  15665 <-> [15665: mock_042, DOUBLE, true]\n  |  15673 <-> [15673: mock_039, VARCHAR(65535), true]\n  |  15679 <-> [15679: mock_028, LARGEINT, true]\n  |  15681 <-> [15681: mock_030, LARGEINT, true]\n  |  15683 <-> [15683: mock_006, BIGINT, true]\n  |  15684 <-> [15684: mock_007, BIGINT, true]\n  |  15694 <-> [15694: mock_017, BOOLEAN, true]\n  |  15695 <-> [15695: mock_018, BOOLEAN, true]\n  |  15696 <-> [15696: mock_020, BOOLEAN, true]\n  |  15697 <-> [15697: mock_021, BOOLEAN, true]\n  |  15698 <-> [15698: mock_022, BOOLEAN, true]\n  |  15699 <-> [15699: mock_023, BOOLEAN, true]\n  |  15700 <-> [15700: mock_024, BOOLEAN, true]\n  |  15707 <-> xx_hash3_64[([15653: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  15708 <-> xx_hash3_64[([15677: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  15710 <-> xx_hash3_64[([15673: mock_039, VARCHAR(65535), true], [15672: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  338:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [15700: mock_024, BOOLEAN, true], [15697: mock_021, BOOLEAN, true], [15695: mock_018, BOOLEAN, true], [15699: mock_023, BOOLEAN, true], [15694: mock_017, BOOLEAN, true], [15698: mock_022, BOOLEAN, true], [15696: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=134.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 501(F237)\n\n  Input Partition: HASH_PARTITIONED: 29975: cast\n  OutPut Partition: HASH_PARTITIONED: 29971: cast\n  OutPut Exchange id: 337\n\n  336:Project\n  |  output columns:\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  14975 <-> [14975: xx_hash3_64, BIGINT, true]\n  |  14976 <-> [14976: expr, DOUBLE, true]\n  |  14977 <-> [14977: expr, BOOLEAN, true]\n  |  15214 <-> [15214: expr, BOOLEAN, true]\n  |  15215 <-> [15215: expr, BOOLEAN, true]\n  |  15217 <-> [15217: case, BIGINT, true]\n  |  15218 <-> [15218: case, BIGINT, true]\n  |  15219 <-> [15219: case, DOUBLE, true]\n  |  15589 <-> [15589: sum, DOUBLE, true]\n  |  29971 <-> cast([14975: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  335:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29975: cast, LARGEINT, true] = [15221: mock_191, LARGEINT, true]\n  |  output columns: 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14974, 14975, 14976, 14977, 15214, 15215, 15217, 15218, 15219, 15589\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----334:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15221: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  292:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29975: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 502(F208)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15221: mock_191\n  OutPut Exchange id: 334\n\n  333:Project\n  |  output columns:\n  |  15221 <-> [15221: mock_191, LARGEINT, false]\n  |  15589 <-> [15589: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  332:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [15221: mock_191, LARGEINT, false] = [29976: cast, LARGEINT, true]\n  |  output columns: 15221, 15589\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----331:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29976: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  293:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 503(F234)\n\n  Input Partition: HASH_PARTITIONED: 15340: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29976: cast\n  OutPut Exchange id: 331\n\n  330:Project\n  |  output columns:\n  |  15589 <-> [15589: sum, DOUBLE, true]\n  |  29976 <-> cast([15340: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  329:AGGREGATE (merge finalize)\n  |  aggregate: sum[([15589: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [15340: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  328:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15340: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 504(F233)\n\n  Input Partition: HASH_PARTITIONED: 29977: cast, 15277: mock_034\n  OutPut Partition: HASH_PARTITIONED: 15340: xx_hash3_64\n  OutPut Exchange id: 328\n\n  327:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([15587: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [15340: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  326:Project\n  |  output columns:\n  |  15340 <-> [15340: xx_hash3_64, BIGINT, true]\n  |  15587 <-> if[(((((15331: mock_024) AND (15328: mock_021)) AND ((15326: mock_018) AND (15330: mock_023))) AND (((15325: mock_017) AND (15329: mock_022)) AND ((15277: mock_034 = 15497: mock_157) AND (15277: mock_034 = 15548: mock_157)))) AND (15327: mock_020), if[(if[(if(15428: mock_133 = 15472: mock_133, 15304: mock_039, NULL) IS NULL, NULL, [15315: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [15296: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  325:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29977: cast, LARGEINT, true] = [15527: mock_189, LARGEINT, false]\n  |  equal join conjunct: [15277: mock_034, DATETIME, true] = [15548: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 27, build_expr = (15527: mock_189), remote = true\n  |  - filter_id = 28, build_expr = (15548: mock_157), remote = true\n  |  output columns: 15277, 15296, 15304, 15315, 15325, 15326, 15327, 15328, 15329, 15330, 15331, 15340, 15428, 15472, 15497, 15548\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----324:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15527: mock_189, LARGEINT, false], [15548: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  322:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29977: cast, LARGEINT, true], [15277: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 505(F231)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15527: mock_189, 15548: mock_157\n  OutPut Exchange id: 324\n\n  323:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 15548: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 506(F229)\n\n  Input Partition: HASH_PARTITIONED: 29978: cast, 15277: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29977: cast, 15277: mock_034\n  OutPut Exchange id: 322\n\n  321:Project\n  |  output columns:\n  |  15277 <-> [15277: mock_034, DATETIME, true]\n  |  15296 <-> [15296: mock_042, DOUBLE, true]\n  |  15304 <-> [15304: mock_039, VARCHAR(65535), true]\n  |  15315 <-> [15315: mock_007, BIGINT, true]\n  |  15325 <-> [15325: mock_017, BOOLEAN, true]\n  |  15326 <-> [15326: mock_018, BOOLEAN, true]\n  |  15327 <-> [15327: mock_020, BOOLEAN, true]\n  |  15328 <-> [15328: mock_021, BOOLEAN, true]\n  |  15329 <-> [15329: mock_022, BOOLEAN, true]\n  |  15330 <-> [15330: mock_023, BOOLEAN, true]\n  |  15331 <-> [15331: mock_024, BOOLEAN, true]\n  |  15340 <-> [15340: xx_hash3_64, BIGINT, true]\n  |  15428 <-> [15428: mock_133, VARCHAR(65535), true]\n  |  15472 <-> [15472: mock_133, VARCHAR(65535), true]\n  |  15497 <-> [15497: mock_157, DATETIME, true]\n  |  29977 <-> cast([15339: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  320:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29978: cast, LARGEINT, true] = [15476: mock_177, LARGEINT, false]\n  |  equal join conjunct: [15277: mock_034, DATETIME, true] = [15497: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 25, build_expr = (15476: mock_177), remote = true\n  |  - filter_id = 26, build_expr = (15497: mock_157), remote = true\n  |  output columns: 15277, 15296, 15304, 15315, 15325, 15326, 15327, 15328, 15329, 15330, 15331, 15339, 15340, 15428, 15472, 15497\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 28, probe_expr = (15277: mock_034), partition_exprs = (CAST(15339: xx_hash3_64 AS LARGEINT),15277: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----319:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15476: mock_177, LARGEINT, false], [15497: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  317:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29978: cast, LARGEINT, true], [15277: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 27, probe_expr = (CAST(15339: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(15339: xx_hash3_64 AS LARGEINT),15277: mock_034)\n\nPLAN FRAGMENT 507(F227)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15476: mock_177, 15497: mock_157\n  OutPut Exchange id: 319\n\n  318:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 15497: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 508(F225)\n\n  Input Partition: HASH_PARTITIONED: 15312: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29978: cast, 15277: mock_034\n  OutPut Exchange id: 317\n\n  316:Project\n  |  output columns:\n  |  15277 <-> [15277: mock_034, DATETIME, true]\n  |  15296 <-> [15296: mock_042, DOUBLE, true]\n  |  15304 <-> [15304: mock_039, VARCHAR(65535), true]\n  |  15315 <-> [15315: mock_007, BIGINT, true]\n  |  15325 <-> [15325: mock_017, BOOLEAN, true]\n  |  15326 <-> [15326: mock_018, BOOLEAN, true]\n  |  15327 <-> [15327: mock_020, BOOLEAN, true]\n  |  15328 <-> [15328: mock_021, BOOLEAN, true]\n  |  15329 <-> [15329: mock_022, BOOLEAN, true]\n  |  15330 <-> [15330: mock_023, BOOLEAN, true]\n  |  15331 <-> [15331: mock_024, BOOLEAN, true]\n  |  15339 <-> [15339: xx_hash3_64, BIGINT, true]\n  |  15340 <-> [15340: xx_hash3_64, BIGINT, true]\n  |  15428 <-> [15428: mock_133, VARCHAR(65535), true]\n  |  15472 <-> [15472: mock_133, VARCHAR(65535), true]\n  |  29978 <-> cast([15338: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  315:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15312: mock_030, LARGEINT, true] = [15475: mock_030, LARGEINT, true]\n  |  output columns: 15277, 15296, 15304, 15315, 15325, 15326, 15327, 15328, 15329, 15330, 15331, 15338, 15339, 15340, 15428, 15472\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----314:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15475: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  312:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15312: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 25, probe_expr = (CAST(15338: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(15338: xx_hash3_64 AS LARGEINT),15277: mock_034)\n     - filter_id = 26, probe_expr = (15277: mock_034), partition_exprs = (CAST(15338: xx_hash3_64 AS LARGEINT),15277: mock_034)\n\nPLAN FRAGMENT 509(F223)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15475: mock_030\n  OutPut Exchange id: 314\n\n  313:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 510(F221)\n\n  Input Partition: HASH_PARTITIONED: 15310: mock_028\n  OutPut Partition: HASH_PARTITIONED: 15312: mock_030\n  OutPut Exchange id: 312\n\n  311:Project\n  |  output columns:\n  |  15277 <-> [15277: mock_034, DATETIME, true]\n  |  15296 <-> [15296: mock_042, DOUBLE, true]\n  |  15304 <-> [15304: mock_039, VARCHAR(65535), true]\n  |  15312 <-> [15312: mock_030, LARGEINT, true]\n  |  15315 <-> [15315: mock_007, BIGINT, true]\n  |  15325 <-> [15325: mock_017, BOOLEAN, true]\n  |  15326 <-> [15326: mock_018, BOOLEAN, true]\n  |  15327 <-> [15327: mock_020, BOOLEAN, true]\n  |  15328 <-> [15328: mock_021, BOOLEAN, true]\n  |  15329 <-> [15329: mock_022, BOOLEAN, true]\n  |  15330 <-> [15330: mock_023, BOOLEAN, true]\n  |  15331 <-> [15331: mock_024, BOOLEAN, true]\n  |  15338 <-> [15338: xx_hash3_64, BIGINT, true]\n  |  15339 <-> [15339: xx_hash3_64, BIGINT, true]\n  |  15340 <-> [15340: xx_hash3_64, BIGINT, true]\n  |  15428 <-> [15428: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  310:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15310: mock_028, LARGEINT, true] = [15403: mock_071, LARGEINT, true]\n  |  output columns: 15277, 15296, 15304, 15312, 15315, 15325, 15326, 15327, 15328, 15329, 15330, 15331, 15338, 15339, 15340, 15428\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----309:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15403: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  297:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15310: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 511(F219)\n\n  Input Partition: HASH_PARTITIONED: 15396: mock_075\n  OutPut Partition: HASH_PARTITIONED: 15403: mock_071\n  OutPut Exchange id: 309\n\n  308:Project\n  |  output columns:\n  |  15403 <-> [15403: mock_071, LARGEINT, true]\n  |  15428 <-> [15428: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  307:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15396: mock_075, LARGEINT, true] = [15460: mock_075, LARGEINT, true]\n  |  output columns: 15403, 15428\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----306:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15460: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  304:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15396: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 512(F217)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15460: mock_075\n  OutPut Exchange id: 306\n\n  305:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 513(F215)\n\n  Input Partition: HASH_PARTITIONED: 15398: mock_077\n  OutPut Partition: HASH_PARTITIONED: 15396: mock_075\n  OutPut Exchange id: 304\n\n  303:Project\n  |  output columns:\n  |  15396 <-> [15396: mock_075, LARGEINT, true]\n  |  15403 <-> [15403: mock_071, LARGEINT, true]\n  |  15428 <-> [15428: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  302:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15398: mock_077, LARGEINT, true] = [15431: mock_077, LARGEINT, true]\n  |  output columns: 15396, 15403, 15428\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----301:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15431: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  299:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15398: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 514(F213)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15431: mock_077\n  OutPut Exchange id: 301\n\n  300:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 515(F211)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15398: mock_077\n  OutPut Exchange id: 299\n\n  298:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 516(F209)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15310: mock_028\n  OutPut Exchange id: 297\n\n  296:SELECT\n  |  predicates: 15340: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  295:Project\n  |  output columns:\n  |  15277 <-> [15277: mock_034, DATETIME, true]\n  |  15296 <-> [15296: mock_042, DOUBLE, true]\n  |  15304 <-> [15304: mock_039, VARCHAR(65535), true]\n  |  15310 <-> [15310: mock_028, LARGEINT, true]\n  |  15312 <-> [15312: mock_030, LARGEINT, true]\n  |  15315 <-> [15315: mock_007, BIGINT, true]\n  |  15325 <-> [15325: mock_017, BOOLEAN, true]\n  |  15326 <-> [15326: mock_018, BOOLEAN, true]\n  |  15327 <-> [15327: mock_020, BOOLEAN, true]\n  |  15328 <-> [15328: mock_021, BOOLEAN, true]\n  |  15329 <-> [15329: mock_022, BOOLEAN, true]\n  |  15330 <-> [15330: mock_023, BOOLEAN, true]\n  |  15331 <-> [15331: mock_024, BOOLEAN, true]\n  |  15338 <-> xx_hash3_64[([15284: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  15339 <-> xx_hash3_64[([15308: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  15340 <-> xx_hash3_64[([15302: mock_002, VARCHAR(65535), true], [15304: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  294:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [15331: mock_024, BOOLEAN, true], [15328: mock_021, BOOLEAN, true], [15326: mock_018, BOOLEAN, true], [15330: mock_023, BOOLEAN, true], [15325: mock_017, BOOLEAN, true], [15329: mock_022, BOOLEAN, true], [15327: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 517(F206)\n\n  Input Partition: HASH_PARTITIONED: 29979: cast, 14911: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29975: cast\n  OutPut Exchange id: 292\n\n  291:Project\n  |  output columns:\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  14975 <-> [14975: xx_hash3_64, BIGINT, true]\n  |  14976 <-> [14976: expr, DOUBLE, true]\n  |  14977 <-> [14977: expr, BOOLEAN, true]\n  |  15214 <-> [14911: mock_034, DATETIME, true] = [15131: mock_157, DATETIME, true]\n  |  15215 <-> [14911: mock_034, DATETIME, true] = [15182: mock_157, DATETIME, true]\n  |  15217 <-> [30047: if, BIGINT, true]\n  |  15218 <-> if[(if(15062: mock_133 != 15106: mock_133, 14938: mock_039, NULL) IS NULL, NULL, [14948: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  15219 <-> if[([30047: if, BIGINT, true] = 1, [14930: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29975 <-> cast([14974: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30044 <-> [15062: mock_133, VARCHAR(65535), true] = [15106: mock_133, VARCHAR(65535), true]\n  |  30045 <-> if[([30044: expr, BOOLEAN, true], [14938: mock_039, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  30046 <-> 30045: if IS NULL\n  |  30047 <-> if[([30046: expr, BOOLEAN, false], NULL, [14949: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  290:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29979: cast, LARGEINT, true] = [15161: mock_189, LARGEINT, false]\n  |  equal join conjunct: [14911: mock_034, DATETIME, true] = [15182: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 23, build_expr = (15161: mock_189), remote = true\n  |  - filter_id = 24, build_expr = (15182: mock_157), remote = true\n  |  output columns: 14911, 14930, 14938, 14948, 14949, 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14974, 14975, 14976, 14977, 15062, 15106, 15131, 15182\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----289:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15161: mock_189, LARGEINT, false], [15182: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  287:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29979: cast, LARGEINT, true], [14911: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 518(F204)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15161: mock_189, 15182: mock_157\n  OutPut Exchange id: 289\n\n  288:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 15182: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 519(F202)\n\n  Input Partition: HASH_PARTITIONED: 29980: cast, 14911: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29979: cast, 14911: mock_034\n  OutPut Exchange id: 287\n\n  286:Project\n  |  output columns:\n  |  14911 <-> [14911: mock_034, DATETIME, true]\n  |  14930 <-> [14930: mock_042, DOUBLE, true]\n  |  14938 <-> [14938: mock_039, VARCHAR(65535), true]\n  |  14948 <-> [14948: mock_006, BIGINT, true]\n  |  14949 <-> [14949: mock_007, BIGINT, true]\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  14975 <-> [14975: xx_hash3_64, BIGINT, true]\n  |  14976 <-> [14976: expr, DOUBLE, true]\n  |  14977 <-> [14977: expr, BOOLEAN, true]\n  |  15062 <-> [15062: mock_133, VARCHAR(65535), true]\n  |  15106 <-> [15106: mock_133, VARCHAR(65535), true]\n  |  15131 <-> [15131: mock_157, DATETIME, true]\n  |  29979 <-> cast([14973: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  285:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29980: cast, LARGEINT, true] = [15110: mock_177, LARGEINT, false]\n  |  equal join conjunct: [14911: mock_034, DATETIME, true] = [15131: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 21, build_expr = (15110: mock_177), remote = true\n  |  - filter_id = 22, build_expr = (15131: mock_157), remote = true\n  |  output columns: 14911, 14930, 14938, 14948, 14949, 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14973, 14974, 14975, 14976, 14977, 15062, 15106, 15131\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 24, probe_expr = (14911: mock_034), partition_exprs = (CAST(14973: xx_hash3_64 AS LARGEINT),14911: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----284:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15110: mock_177, LARGEINT, false], [15131: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  282:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29980: cast, LARGEINT, true], [14911: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 23, probe_expr = (CAST(14973: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(14973: xx_hash3_64 AS LARGEINT),14911: mock_034)\n\nPLAN FRAGMENT 520(F200)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15110: mock_177, 15131: mock_157\n  OutPut Exchange id: 284\n\n  283:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 15131: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 521(F198)\n\n  Input Partition: HASH_PARTITIONED: 14946: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29980: cast, 14911: mock_034\n  OutPut Exchange id: 282\n\n  281:Project\n  |  output columns:\n  |  14911 <-> [14911: mock_034, DATETIME, true]\n  |  14930 <-> [14930: mock_042, DOUBLE, true]\n  |  14938 <-> [14938: mock_039, VARCHAR(65535), true]\n  |  14948 <-> [14948: mock_006, BIGINT, true]\n  |  14949 <-> [14949: mock_007, BIGINT, true]\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14973 <-> [14973: xx_hash3_64, BIGINT, true]\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  14975 <-> [14975: xx_hash3_64, BIGINT, true]\n  |  14976 <-> [14976: expr, DOUBLE, true]\n  |  14977 <-> [14977: expr, BOOLEAN, true]\n  |  15062 <-> [15062: mock_133, VARCHAR(65535), true]\n  |  15106 <-> [15106: mock_133, VARCHAR(65535), true]\n  |  29980 <-> cast([14972: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  280:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14946: mock_030, LARGEINT, true] = [15109: mock_030, LARGEINT, true]\n  |  output columns: 14911, 14930, 14938, 14948, 14949, 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14972, 14973, 14974, 14975, 14976, 14977, 15062, 15106\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----279:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15109: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  277:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14946: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 21, probe_expr = (CAST(14972: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(14972: xx_hash3_64 AS LARGEINT),14911: mock_034)\n     - filter_id = 22, probe_expr = (14911: mock_034), partition_exprs = (CAST(14972: xx_hash3_64 AS LARGEINT),14911: mock_034)\n\nPLAN FRAGMENT 522(F196)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15109: mock_030\n  OutPut Exchange id: 279\n\n  278:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 523(F194)\n\n  Input Partition: HASH_PARTITIONED: 14944: mock_028\n  OutPut Partition: HASH_PARTITIONED: 14946: mock_030\n  OutPut Exchange id: 277\n\n  276:Project\n  |  output columns:\n  |  14911 <-> [14911: mock_034, DATETIME, true]\n  |  14930 <-> [14930: mock_042, DOUBLE, true]\n  |  14938 <-> [14938: mock_039, VARCHAR(65535), true]\n  |  14946 <-> [14946: mock_030, LARGEINT, true]\n  |  14948 <-> [14948: mock_006, BIGINT, true]\n  |  14949 <-> [14949: mock_007, BIGINT, true]\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14972 <-> [14972: xx_hash3_64, BIGINT, true]\n  |  14973 <-> [14973: xx_hash3_64, BIGINT, true]\n  |  14974 <-> [14974: xx_hash3_64, BIGINT, true]\n  |  14975 <-> [14975: xx_hash3_64, BIGINT, true]\n  |  14976 <-> [14976: expr, DOUBLE, true]\n  |  14977 <-> [14977: expr, BOOLEAN, true]\n  |  15062 <-> [15062: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  275:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14944: mock_028, LARGEINT, true] = [15037: mock_071, LARGEINT, true]\n  |  output columns: 14911, 14930, 14938, 14946, 14948, 14949, 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14972, 14973, 14974, 14975, 14976, 14977, 15062\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----274:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15037: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  262:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14944: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 524(F192)\n\n  Input Partition: HASH_PARTITIONED: 15030: mock_075\n  OutPut Partition: HASH_PARTITIONED: 15037: mock_071\n  OutPut Exchange id: 274\n\n  273:Project\n  |  output columns:\n  |  15037 <-> [15037: mock_071, LARGEINT, true]\n  |  15062 <-> [15062: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  272:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15030: mock_075, LARGEINT, true] = [15094: mock_075, LARGEINT, true]\n  |  output columns: 15037, 15062\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----271:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15094: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  269:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15030: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 525(F190)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15094: mock_075\n  OutPut Exchange id: 271\n\n  270:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 526(F188)\n\n  Input Partition: HASH_PARTITIONED: 15032: mock_077\n  OutPut Partition: HASH_PARTITIONED: 15030: mock_075\n  OutPut Exchange id: 269\n\n  268:Project\n  |  output columns:\n  |  15030 <-> [15030: mock_075, LARGEINT, true]\n  |  15037 <-> [15037: mock_071, LARGEINT, true]\n  |  15062 <-> [15062: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  267:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [15032: mock_077, LARGEINT, true] = [15065: mock_077, LARGEINT, true]\n  |  output columns: 15030, 15037, 15062\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----266:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [15065: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  264:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [15032: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 527(F186)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15065: mock_077\n  OutPut Exchange id: 266\n\n  265:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 528(F184)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 15032: mock_077\n  OutPut Exchange id: 264\n\n  263:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 529(F182)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14944: mock_028\n  OutPut Exchange id: 262\n\n  261:SELECT\n  |  predicates: 14974: xx_hash3_64 IS NOT NULL, 14977: expr\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.0, 1.0, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  260:Project\n  |  output columns:\n  |  14911 <-> [14911: mock_034, DATETIME, true]\n  |  14930 <-> [14930: mock_042, DOUBLE, true]\n  |  14938 <-> [14938: mock_039, VARCHAR(65535), true]\n  |  14944 <-> [14944: mock_028, LARGEINT, true]\n  |  14946 <-> [14946: mock_030, LARGEINT, true]\n  |  14948 <-> [14948: mock_006, BIGINT, true]\n  |  14949 <-> [14949: mock_007, BIGINT, true]\n  |  14959 <-> [14959: mock_017, BOOLEAN, true]\n  |  14960 <-> [14960: mock_018, BOOLEAN, true]\n  |  14961 <-> [14961: mock_020, BOOLEAN, true]\n  |  14962 <-> [14962: mock_021, BOOLEAN, true]\n  |  14963 <-> [14963: mock_022, BOOLEAN, true]\n  |  14964 <-> [14964: mock_023, BOOLEAN, true]\n  |  14965 <-> [14965: mock_024, BOOLEAN, true]\n  |  14972 <-> xx_hash3_64[([14918: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14973 <-> xx_hash3_64[([14942: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14974 <-> xx_hash3_64[([14936: mock_002, VARCHAR(65535), true], [14938: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14975 <-> xx_hash3_64[([14938: mock_039, VARCHAR(65535), true], [14937: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14976 <-> [14917: mock_035, DOUBLE, true] * 0.0 * 3.0\n  |  14977 <-> [14928: mock_055, DOUBLE, true] + [14930: mock_042, DOUBLE, true] + if[(14924: mock_046 IS NULL, 0.0, [14924: mock_046, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] * 365.0 / if[(((14926: mock_005 IS NULL) OR (14926: mock_005 < 0.0)) AND (14934: mock_054 != 'N'), NULL, [14926: mock_005, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] < 3.0416666666666668E10\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  259:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [14965: mock_024, BOOLEAN, true], [14962: mock_021, BOOLEAN, true], [14960: mock_018, BOOLEAN, true], [14964: mock_023, BOOLEAN, true], [14959: mock_017, BOOLEAN, true], [14963: mock_022, BOOLEAN, true], [14961: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=206.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n     * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 530(F179)\n\n  Input Partition: HASH_PARTITIONED: 29981: cast\n  OutPut Partition: HASH_PARTITIONED: 29957: cast\n  OutPut Exchange id: 257\n\n  256:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12989: expr, BOOLEAN, true]\n  |  12990 <-> [12990: expr, BOOLEAN, true]\n  |  12992 <-> [12992: case, BIGINT, true]\n  |  12993 <-> [12993: case, BIGINT, true]\n  |  12994 <-> [12994: case, DOUBLE, true]\n  |  12995 <-> [12995: case, DOUBLE, true]\n  |  14854 <-> 13737: case / CAST(14852: coalesce AS DOUBLE) IS NOT NULL\n  |  29957 <-> cast([12749: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  255:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29981: cast, LARGEINT, true] = [13740: mock_193, LARGEINT, true]\n  |  output columns: 12714, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12854, 12989, 12990, 12992, 12993, 12994, 12995, 13737, 14852\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----254:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13740: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  122:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29981: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 531(F88)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13740: mock_193\n  OutPut Exchange id: 254\n\n  253:Project\n  |  output columns:\n  |  13740 <-> [13740: mock_193, LARGEINT, false]\n  |  14852 <-> coalesce[([14851: count, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  252:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [13740: mock_193, LARGEINT, false] = [29982: cast, LARGEINT, true]\n  |  output columns: 13740, 14851\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * coalesce-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----251:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29982: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  123:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 532(F176)\n\n  Input Partition: HASH_PARTITIONED: 13860: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29982: cast\n  OutPut Exchange id: 251\n\n  250:Project\n  |  output columns:\n  |  14851 <-> [14851: count, BIGINT, false]\n  |  29982 <-> cast([13860: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  249:AGGREGATE (merge finalize)\n  |  aggregate: count[([14851: count, BIGINT, false]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [13860: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  248:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13860: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 533(F175)\n\n  Input Partition: HASH_PARTITIONED: 29983: cast\n  OutPut Partition: HASH_PARTITIONED: 13860: xx_hash3_64\n  OutPut Exchange id: 248\n\n  247:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: count[([14850: case, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: false]\n  |  group by: [13860: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * count-->[0.0, 1.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  \n  246:Project\n  |  output columns:\n  |  13860 <-> [13860: xx_hash3_64, BIGINT, true]\n  |  14850 <-> if[(((((13850: mock_024) AND (13847: mock_021)) AND ((13845: mock_018) AND (13849: mock_023))) AND (((13844: mock_017) AND (13848: mock_022)) AND ((14099: expr) AND (14100: expr)))) AND (13846: mock_020), if[(if[(CASE WHEN (30035: expr) AND (30036: coalesce = 1) THEN 14102: case WHEN (30035: expr) AND (30036: coalesce != 1) THEN 0 ELSE 14103: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [13824: id, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30035 <-> [14474: sum, DOUBLE, true] > 0.0\n  |  30036 <-> coalesce[([14102: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  \n  245:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29983: cast, LARGEINT, true] = [14475: mock_193, LARGEINT, true]\n  |  output columns: 13824, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13860, 14099, 14100, 14102, 14103, 14474\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 16.0, 3.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----244:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14475: mock_193, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  202:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29983: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 534(F146)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14475: mock_193\n  OutPut Exchange id: 244\n\n  243:Project\n  |  output columns:\n  |  14475 <-> [14475: mock_193, LARGEINT, false]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  242:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [14475: mock_193, LARGEINT, false] = [29984: cast, LARGEINT, true]\n  |  output columns: 14475\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----241:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29984: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  203:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 535(F172)\n\n  Input Partition: HASH_PARTITIONED: 14595: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29984: cast\n  OutPut Exchange id: 241\n\n  240:Project\n  |  output columns:\n  |  29984 <-> cast([14595: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  239:AGGREGATE (merge finalize)\n  |  group by: [14595: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  238:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14595: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 536(F171)\n\n  Input Partition: HASH_PARTITIONED: 29985: cast, 14531: mock_034\n  OutPut Partition: HASH_PARTITIONED: 14595: xx_hash3_64\n  OutPut Exchange id: 238\n\n  237:AGGREGATE (update serialize)\n  |  STREAMING\n  |  group by: [14595: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  236:Project\n  |  output columns:\n  |  14595 <-> [14595: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  235:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29985: cast, LARGEINT, true] = [14781: mock_189, LARGEINT, false]\n  |  equal join conjunct: [14531: mock_034, DATETIME, true] = [14802: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 19, build_expr = (14781: mock_189), remote = true\n  |  - filter_id = 20, build_expr = (14802: mock_157), remote = true\n  |  output columns: 14595\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----234:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14781: mock_189, LARGEINT, false], [14802: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  232:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29985: cast, LARGEINT, true], [14531: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 537(F169)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14781: mock_189, 14802: mock_157\n  OutPut Exchange id: 234\n\n  233:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 14802: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 538(F167)\n\n  Input Partition: HASH_PARTITIONED: 29986: cast, 14531: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29985: cast, 14531: mock_034\n  OutPut Exchange id: 232\n\n  231:Project\n  |  output columns:\n  |  14531 <-> [14531: mock_034, DATETIME, true]\n  |  14595 <-> [14595: xx_hash3_64, BIGINT, true]\n  |  29985 <-> cast([14593: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  230:HASH JOIN\n  |  join op: LEFT SEMI JOIN (PARTITIONED)\n  |  equal join conjunct: [29986: cast, LARGEINT, true] = [14730: mock_177, LARGEINT, false]\n  |  equal join conjunct: [14531: mock_034, DATETIME, true] = [14751: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 17, build_expr = (14730: mock_177), remote = true\n  |  - filter_id = 18, build_expr = (14751: mock_157), remote = true\n  |  output columns: 14531, 14593, 14595\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 20, probe_expr = (14531: mock_034), partition_exprs = (CAST(14593: xx_hash3_64 AS LARGEINT),14531: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----229:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14730: mock_177, LARGEINT, false], [14751: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  227:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29986: cast, LARGEINT, true], [14531: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 19, probe_expr = (CAST(14593: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(14593: xx_hash3_64 AS LARGEINT),14531: mock_034)\n\nPLAN FRAGMENT 539(F165)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14730: mock_177, 14751: mock_157\n  OutPut Exchange id: 229\n\n  228:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 14751: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 540(F163)\n\n  Input Partition: HASH_PARTITIONED: 14566: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29986: cast, 14531: mock_034\n  OutPut Exchange id: 227\n\n  226:Project\n  |  output columns:\n  |  14531 <-> [14531: mock_034, DATETIME, true]\n  |  14593 <-> [14593: xx_hash3_64, BIGINT, true]\n  |  14595 <-> [14595: xx_hash3_64, BIGINT, true]\n  |  29986 <-> cast([14592: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  225:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14566: mock_030, LARGEINT, true] = [14729: mock_030, LARGEINT, true]\n  |  output columns: 14531, 14592, 14593, 14595\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----224:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14729: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  222:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14566: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 17, probe_expr = (CAST(14592: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(14592: xx_hash3_64 AS LARGEINT),14531: mock_034)\n     - filter_id = 18, probe_expr = (14531: mock_034), partition_exprs = (CAST(14592: xx_hash3_64 AS LARGEINT),14531: mock_034)\n\nPLAN FRAGMENT 541(F161)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14729: mock_030\n  OutPut Exchange id: 224\n\n  223:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 542(F159)\n\n  Input Partition: HASH_PARTITIONED: 14564: mock_028\n  OutPut Partition: HASH_PARTITIONED: 14566: mock_030\n  OutPut Exchange id: 222\n\n  221:Project\n  |  output columns:\n  |  14531 <-> [14531: mock_034, DATETIME, true]\n  |  14566 <-> [14566: mock_030, LARGEINT, true]\n  |  14592 <-> [14592: xx_hash3_64, BIGINT, true]\n  |  14593 <-> [14593: xx_hash3_64, BIGINT, true]\n  |  14595 <-> [14595: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  220:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14564: mock_028, LARGEINT, true] = [14657: mock_071, LARGEINT, true]\n  |  output columns: 14531, 14566, 14592, 14593, 14595\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----219:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14657: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  207:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14564: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 543(F157)\n\n  Input Partition: HASH_PARTITIONED: 14650: mock_075\n  OutPut Partition: HASH_PARTITIONED: 14657: mock_071\n  OutPut Exchange id: 219\n\n  218:Project\n  |  output columns:\n  |  14657 <-> [14657: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  217:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14650: mock_075, LARGEINT, true] = [14714: mock_075, LARGEINT, true]\n  |  output columns: 14657\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----216:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14714: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  214:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14650: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 544(F155)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14714: mock_075\n  OutPut Exchange id: 216\n\n  215:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 545(F153)\n\n  Input Partition: HASH_PARTITIONED: 14652: mock_077\n  OutPut Partition: HASH_PARTITIONED: 14650: mock_075\n  OutPut Exchange id: 214\n\n  213:Project\n  |  output columns:\n  |  14650 <-> [14650: mock_075, LARGEINT, true]\n  |  14657 <-> [14657: mock_071, LARGEINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  212:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14652: mock_077, LARGEINT, true] = [14685: mock_077, LARGEINT, true]\n  |  output columns: 14650, 14657\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----211:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14685: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  209:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14652: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 546(F151)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14685: mock_077\n  OutPut Exchange id: 211\n\n  210:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 547(F149)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14652: mock_077\n  OutPut Exchange id: 209\n\n  208:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 548(F147)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14564: mock_028\n  OutPut Exchange id: 207\n\n  206:SELECT\n  |  predicates: 14595: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  205:Project\n  |  output columns:\n  |  14531 <-> [14531: mock_034, DATETIME, true]\n  |  14564 <-> [14564: mock_028, LARGEINT, true]\n  |  14566 <-> [14566: mock_030, LARGEINT, true]\n  |  14592 <-> xx_hash3_64[([14538: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14593 <-> xx_hash3_64[([14562: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14595 <-> xx_hash3_64[([14558: mock_039, VARCHAR(65535), true], [14557: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  204:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [14585: mock_024, BOOLEAN, true], [14582: mock_021, BOOLEAN, true], [14580: mock_018, BOOLEAN, true], [14584: mock_023, BOOLEAN, true], [14579: mock_017, BOOLEAN, true], [14583: mock_022, BOOLEAN, true], [14581: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=110.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 549(F144)\n\n  Input Partition: HASH_PARTITIONED: 29987: cast\n  OutPut Partition: HASH_PARTITIONED: 29983: cast\n  OutPut Exchange id: 202\n\n  201:Project\n  |  output columns:\n  |  13824 <-> [13824: id, VARCHAR(65535), true]\n  |  13844 <-> [13844: mock_017, BOOLEAN, true]\n  |  13845 <-> [13845: mock_018, BOOLEAN, true]\n  |  13846 <-> [13846: mock_020, BOOLEAN, true]\n  |  13847 <-> [13847: mock_021, BOOLEAN, true]\n  |  13848 <-> [13848: mock_022, BOOLEAN, true]\n  |  13849 <-> [13849: mock_023, BOOLEAN, true]\n  |  13850 <-> [13850: mock_024, BOOLEAN, true]\n  |  13860 <-> [13860: xx_hash3_64, BIGINT, true]\n  |  14099 <-> [14099: expr, BOOLEAN, true]\n  |  14100 <-> [14100: expr, BOOLEAN, true]\n  |  14102 <-> [14102: case, BIGINT, true]\n  |  14103 <-> [14103: case, BIGINT, true]\n  |  14474 <-> [14474: sum, DOUBLE, true]\n  |  29983 <-> cast([13860: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  200:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29987: cast, LARGEINT, true] = [14106: mock_191, LARGEINT, true]\n  |  output columns: 13824, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13860, 14099, 14100, 14102, 14103, 14474\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----199:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14106: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  157:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29987: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 550(F115)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14106: mock_191\n  OutPut Exchange id: 199\n\n  198:Project\n  |  output columns:\n  |  14106 <-> [14106: mock_191, LARGEINT, false]\n  |  14474 <-> [14474: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  197:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [14106: mock_191, LARGEINT, false] = [29988: cast, LARGEINT, true]\n  |  output columns: 14106, 14474\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----196:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29988: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  158:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 551(F141)\n\n  Input Partition: HASH_PARTITIONED: 14225: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29988: cast\n  OutPut Exchange id: 196\n\n  195:Project\n  |  output columns:\n  |  14474 <-> [14474: sum, DOUBLE, true]\n  |  29988 <-> cast([14225: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  194:AGGREGATE (merge finalize)\n  |  aggregate: sum[([14474: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [14225: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  193:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14225: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 552(F140)\n\n  Input Partition: HASH_PARTITIONED: 29989: cast, 14162: mock_034\n  OutPut Partition: HASH_PARTITIONED: 14225: xx_hash3_64\n  OutPut Exchange id: 193\n\n  192:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([14472: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [14225: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  191:Project\n  |  output columns:\n  |  14225 <-> [14225: xx_hash3_64, BIGINT, true]\n  |  14472 <-> if[(((((14216: mock_024) AND (14213: mock_021)) AND ((14211: mock_018) AND (14215: mock_023))) AND (((14210: mock_017) AND (14214: mock_022)) AND ((14162: mock_034 = 14382: mock_157) AND (14162: mock_034 = 14433: mock_157)))) AND (14212: mock_020), if[(if[(if(14313: mock_133 = 14357: mock_133, 14189: mock_039, NULL) IS NULL, NULL, [14200: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [14181: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  190:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29989: cast, LARGEINT, true] = [14412: mock_189, LARGEINT, false]\n  |  equal join conjunct: [14162: mock_034, DATETIME, true] = [14433: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 15, build_expr = (14412: mock_189), remote = true\n  |  - filter_id = 16, build_expr = (14433: mock_157), remote = true\n  |  output columns: 14162, 14181, 14189, 14200, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14225, 14313, 14357, 14382, 14433\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----189:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14412: mock_189, LARGEINT, false], [14433: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  187:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29989: cast, LARGEINT, true], [14162: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 553(F138)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14412: mock_189, 14433: mock_157\n  OutPut Exchange id: 189\n\n  188:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 14433: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 554(F136)\n\n  Input Partition: HASH_PARTITIONED: 29990: cast, 14162: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29989: cast, 14162: mock_034\n  OutPut Exchange id: 187\n\n  186:Project\n  |  output columns:\n  |  14162 <-> [14162: mock_034, DATETIME, true]\n  |  14181 <-> [14181: mock_042, DOUBLE, true]\n  |  14189 <-> [14189: mock_039, VARCHAR(65535), true]\n  |  14200 <-> [14200: mock_007, BIGINT, true]\n  |  14210 <-> [14210: mock_017, BOOLEAN, true]\n  |  14211 <-> [14211: mock_018, BOOLEAN, true]\n  |  14212 <-> [14212: mock_020, BOOLEAN, true]\n  |  14213 <-> [14213: mock_021, BOOLEAN, true]\n  |  14214 <-> [14214: mock_022, BOOLEAN, true]\n  |  14215 <-> [14215: mock_023, BOOLEAN, true]\n  |  14216 <-> [14216: mock_024, BOOLEAN, true]\n  |  14225 <-> [14225: xx_hash3_64, BIGINT, true]\n  |  14313 <-> [14313: mock_133, VARCHAR(65535), true]\n  |  14357 <-> [14357: mock_133, VARCHAR(65535), true]\n  |  14382 <-> [14382: mock_157, DATETIME, true]\n  |  29989 <-> cast([14224: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  185:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29990: cast, LARGEINT, true] = [14361: mock_177, LARGEINT, false]\n  |  equal join conjunct: [14162: mock_034, DATETIME, true] = [14382: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 13, build_expr = (14361: mock_177), remote = true\n  |  - filter_id = 14, build_expr = (14382: mock_157), remote = true\n  |  output columns: 14162, 14181, 14189, 14200, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14224, 14225, 14313, 14357, 14382\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 16, probe_expr = (14162: mock_034), partition_exprs = (CAST(14224: xx_hash3_64 AS LARGEINT),14162: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----184:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14361: mock_177, LARGEINT, false], [14382: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  182:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29990: cast, LARGEINT, true], [14162: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 15, probe_expr = (CAST(14224: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(14224: xx_hash3_64 AS LARGEINT),14162: mock_034)\n\nPLAN FRAGMENT 555(F134)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14361: mock_177, 14382: mock_157\n  OutPut Exchange id: 184\n\n  183:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 14382: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 556(F132)\n\n  Input Partition: HASH_PARTITIONED: 14197: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29990: cast, 14162: mock_034\n  OutPut Exchange id: 182\n\n  181:Project\n  |  output columns:\n  |  14162 <-> [14162: mock_034, DATETIME, true]\n  |  14181 <-> [14181: mock_042, DOUBLE, true]\n  |  14189 <-> [14189: mock_039, VARCHAR(65535), true]\n  |  14200 <-> [14200: mock_007, BIGINT, true]\n  |  14210 <-> [14210: mock_017, BOOLEAN, true]\n  |  14211 <-> [14211: mock_018, BOOLEAN, true]\n  |  14212 <-> [14212: mock_020, BOOLEAN, true]\n  |  14213 <-> [14213: mock_021, BOOLEAN, true]\n  |  14214 <-> [14214: mock_022, BOOLEAN, true]\n  |  14215 <-> [14215: mock_023, BOOLEAN, true]\n  |  14216 <-> [14216: mock_024, BOOLEAN, true]\n  |  14224 <-> [14224: xx_hash3_64, BIGINT, true]\n  |  14225 <-> [14225: xx_hash3_64, BIGINT, true]\n  |  14313 <-> [14313: mock_133, VARCHAR(65535), true]\n  |  14357 <-> [14357: mock_133, VARCHAR(65535), true]\n  |  29990 <-> cast([14223: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  180:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14197: mock_030, LARGEINT, true] = [14360: mock_030, LARGEINT, true]\n  |  output columns: 14162, 14181, 14189, 14200, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14223, 14224, 14225, 14313, 14357\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----179:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14360: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  177:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14197: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 13, probe_expr = (CAST(14223: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(14223: xx_hash3_64 AS LARGEINT),14162: mock_034)\n     - filter_id = 14, probe_expr = (14162: mock_034), partition_exprs = (CAST(14223: xx_hash3_64 AS LARGEINT),14162: mock_034)\n\nPLAN FRAGMENT 557(F130)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14360: mock_030\n  OutPut Exchange id: 179\n\n  178:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 558(F128)\n\n  Input Partition: HASH_PARTITIONED: 14195: mock_028\n  OutPut Partition: HASH_PARTITIONED: 14197: mock_030\n  OutPut Exchange id: 177\n\n  176:Project\n  |  output columns:\n  |  14162 <-> [14162: mock_034, DATETIME, true]\n  |  14181 <-> [14181: mock_042, DOUBLE, true]\n  |  14189 <-> [14189: mock_039, VARCHAR(65535), true]\n  |  14197 <-> [14197: mock_030, LARGEINT, true]\n  |  14200 <-> [14200: mock_007, BIGINT, true]\n  |  14210 <-> [14210: mock_017, BOOLEAN, true]\n  |  14211 <-> [14211: mock_018, BOOLEAN, true]\n  |  14212 <-> [14212: mock_020, BOOLEAN, true]\n  |  14213 <-> [14213: mock_021, BOOLEAN, true]\n  |  14214 <-> [14214: mock_022, BOOLEAN, true]\n  |  14215 <-> [14215: mock_023, BOOLEAN, true]\n  |  14216 <-> [14216: mock_024, BOOLEAN, true]\n  |  14223 <-> [14223: xx_hash3_64, BIGINT, true]\n  |  14224 <-> [14224: xx_hash3_64, BIGINT, true]\n  |  14225 <-> [14225: xx_hash3_64, BIGINT, true]\n  |  14313 <-> [14313: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  175:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14195: mock_028, LARGEINT, true] = [14288: mock_071, LARGEINT, true]\n  |  output columns: 14162, 14181, 14189, 14197, 14200, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14223, 14224, 14225, 14313\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----174:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14288: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  162:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14195: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 559(F126)\n\n  Input Partition: HASH_PARTITIONED: 14281: mock_075\n  OutPut Partition: HASH_PARTITIONED: 14288: mock_071\n  OutPut Exchange id: 174\n\n  173:Project\n  |  output columns:\n  |  14288 <-> [14288: mock_071, LARGEINT, true]\n  |  14313 <-> [14313: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  172:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14281: mock_075, LARGEINT, true] = [14345: mock_075, LARGEINT, true]\n  |  output columns: 14288, 14313\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----171:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14345: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  169:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14281: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 560(F124)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14345: mock_075\n  OutPut Exchange id: 171\n\n  170:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 561(F122)\n\n  Input Partition: HASH_PARTITIONED: 14283: mock_077\n  OutPut Partition: HASH_PARTITIONED: 14281: mock_075\n  OutPut Exchange id: 169\n\n  168:Project\n  |  output columns:\n  |  14281 <-> [14281: mock_075, LARGEINT, true]\n  |  14288 <-> [14288: mock_071, LARGEINT, true]\n  |  14313 <-> [14313: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  167:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [14283: mock_077, LARGEINT, true] = [14316: mock_077, LARGEINT, true]\n  |  output columns: 14281, 14288, 14313\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----166:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14316: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  164:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [14283: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 562(F120)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14316: mock_077\n  OutPut Exchange id: 166\n\n  165:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 563(F118)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14283: mock_077\n  OutPut Exchange id: 164\n\n  163:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 564(F116)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14195: mock_028\n  OutPut Exchange id: 162\n\n  161:SELECT\n  |  predicates: 14225: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  160:Project\n  |  output columns:\n  |  14162 <-> [14162: mock_034, DATETIME, true]\n  |  14181 <-> [14181: mock_042, DOUBLE, true]\n  |  14189 <-> [14189: mock_039, VARCHAR(65535), true]\n  |  14195 <-> [14195: mock_028, LARGEINT, true]\n  |  14197 <-> [14197: mock_030, LARGEINT, true]\n  |  14200 <-> [14200: mock_007, BIGINT, true]\n  |  14210 <-> [14210: mock_017, BOOLEAN, true]\n  |  14211 <-> [14211: mock_018, BOOLEAN, true]\n  |  14212 <-> [14212: mock_020, BOOLEAN, true]\n  |  14213 <-> [14213: mock_021, BOOLEAN, true]\n  |  14214 <-> [14214: mock_022, BOOLEAN, true]\n  |  14215 <-> [14215: mock_023, BOOLEAN, true]\n  |  14216 <-> [14216: mock_024, BOOLEAN, true]\n  |  14223 <-> xx_hash3_64[([14169: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14224 <-> xx_hash3_64[([14193: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  14225 <-> xx_hash3_64[([14187: mock_002, VARCHAR(65535), true], [14189: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  159:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [14216: mock_024, BOOLEAN, true], [14213: mock_021, BOOLEAN, true], [14211: mock_018, BOOLEAN, true], [14215: mock_023, BOOLEAN, true], [14210: mock_017, BOOLEAN, true], [14214: mock_022, BOOLEAN, true], [14212: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 565(F113)\n\n  Input Partition: HASH_PARTITIONED: 29991: cast, 13796: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29987: cast\n  OutPut Exchange id: 157\n\n  156:Project\n  |  output columns:\n  |  13824 <-> [13824: id, VARCHAR(65535), true]\n  |  13844 <-> [13844: mock_017, BOOLEAN, true]\n  |  13845 <-> [13845: mock_018, BOOLEAN, true]\n  |  13846 <-> [13846: mock_020, BOOLEAN, true]\n  |  13847 <-> [13847: mock_021, BOOLEAN, true]\n  |  13848 <-> [13848: mock_022, BOOLEAN, true]\n  |  13849 <-> [13849: mock_023, BOOLEAN, true]\n  |  13850 <-> [13850: mock_024, BOOLEAN, true]\n  |  13860 <-> [13860: xx_hash3_64, BIGINT, true]\n  |  14099 <-> [13796: mock_034, DATETIME, true] = [14016: mock_157, DATETIME, true]\n  |  14100 <-> [13796: mock_034, DATETIME, true] = [14067: mock_157, DATETIME, true]\n  |  14102 <-> if[(if(13947: mock_133 = 13991: mock_133, 13823: mock_039, NULL) IS NULL, NULL, [13834: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  14103 <-> if[(if(13947: mock_133 != 13991: mock_133, 13823: mock_039, NULL) IS NULL, NULL, [13833: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  29987 <-> cast([13859: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  155:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29991: cast, LARGEINT, true] = [14046: mock_189, LARGEINT, false]\n  |  equal join conjunct: [13796: mock_034, DATETIME, true] = [14067: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 11, build_expr = (14046: mock_189), remote = true\n  |  - filter_id = 12, build_expr = (14067: mock_157), remote = true\n  |  output columns: 13796, 13823, 13824, 13833, 13834, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13859, 13860, 13947, 13991, 14016, 14067\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----154:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [14046: mock_189, LARGEINT, false], [14067: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  152:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29991: cast, LARGEINT, true], [13796: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 566(F111)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 14046: mock_189, 14067: mock_157\n  OutPut Exchange id: 154\n\n  153:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 14067: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 567(F109)\n\n  Input Partition: HASH_PARTITIONED: 29992: cast, 13796: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29991: cast, 13796: mock_034\n  OutPut Exchange id: 152\n\n  151:Project\n  |  output columns:\n  |  13796 <-> [13796: mock_034, DATETIME, true]\n  |  13823 <-> [13823: mock_039, VARCHAR(65535), true]\n  |  13824 <-> [13824: id, VARCHAR(65535), true]\n  |  13833 <-> [13833: mock_006, BIGINT, true]\n  |  13834 <-> [13834: mock_007, BIGINT, true]\n  |  13844 <-> [13844: mock_017, BOOLEAN, true]\n  |  13845 <-> [13845: mock_018, BOOLEAN, true]\n  |  13846 <-> [13846: mock_020, BOOLEAN, true]\n  |  13847 <-> [13847: mock_021, BOOLEAN, true]\n  |  13848 <-> [13848: mock_022, BOOLEAN, true]\n  |  13849 <-> [13849: mock_023, BOOLEAN, true]\n  |  13850 <-> [13850: mock_024, BOOLEAN, true]\n  |  13859 <-> [13859: xx_hash3_64, BIGINT, true]\n  |  13860 <-> [13860: xx_hash3_64, BIGINT, true]\n  |  13947 <-> [13947: mock_133, VARCHAR(65535), true]\n  |  13991 <-> [13991: mock_133, VARCHAR(65535), true]\n  |  14016 <-> [14016: mock_157, DATETIME, true]\n  |  29991 <-> cast([13858: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  150:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29992: cast, LARGEINT, true] = [13995: mock_177, LARGEINT, false]\n  |  equal join conjunct: [13796: mock_034, DATETIME, true] = [14016: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 9, build_expr = (13995: mock_177), remote = true\n  |  - filter_id = 10, build_expr = (14016: mock_157), remote = true\n  |  output columns: 13796, 13823, 13824, 13833, 13834, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13858, 13859, 13860, 13947, 13991, 14016\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 12, probe_expr = (13796: mock_034), partition_exprs = (CAST(13858: xx_hash3_64 AS LARGEINT),13796: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----149:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13995: mock_177, LARGEINT, false], [14016: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  147:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29992: cast, LARGEINT, true], [13796: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 11, probe_expr = (CAST(13858: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(13858: xx_hash3_64 AS LARGEINT),13796: mock_034)\n\nPLAN FRAGMENT 568(F107)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13995: mock_177, 14016: mock_157\n  OutPut Exchange id: 149\n\n  148:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 14016: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 569(F105)\n\n  Input Partition: HASH_PARTITIONED: 13831: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29992: cast, 13796: mock_034\n  OutPut Exchange id: 147\n\n  146:Project\n  |  output columns:\n  |  13796 <-> [13796: mock_034, DATETIME, true]\n  |  13823 <-> [13823: mock_039, VARCHAR(65535), true]\n  |  13824 <-> [13824: id, VARCHAR(65535), true]\n  |  13833 <-> [13833: mock_006, BIGINT, true]\n  |  13834 <-> [13834: mock_007, BIGINT, true]\n  |  13844 <-> [13844: mock_017, BOOLEAN, true]\n  |  13845 <-> [13845: mock_018, BOOLEAN, true]\n  |  13846 <-> [13846: mock_020, BOOLEAN, true]\n  |  13847 <-> [13847: mock_021, BOOLEAN, true]\n  |  13848 <-> [13848: mock_022, BOOLEAN, true]\n  |  13849 <-> [13849: mock_023, BOOLEAN, true]\n  |  13850 <-> [13850: mock_024, BOOLEAN, true]\n  |  13858 <-> [13858: xx_hash3_64, BIGINT, true]\n  |  13859 <-> [13859: xx_hash3_64, BIGINT, true]\n  |  13860 <-> [13860: xx_hash3_64, BIGINT, true]\n  |  13947 <-> [13947: mock_133, VARCHAR(65535), true]\n  |  13991 <-> [13991: mock_133, VARCHAR(65535), true]\n  |  29992 <-> cast([13857: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  145:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13831: mock_030, LARGEINT, true] = [13994: mock_030, LARGEINT, true]\n  |  output columns: 13796, 13823, 13824, 13833, 13834, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13857, 13858, 13859, 13860, 13947, 13991\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----144:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13994: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  142:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13831: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 9, probe_expr = (CAST(13857: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(13857: xx_hash3_64 AS LARGEINT),13796: mock_034)\n     - filter_id = 10, probe_expr = (13796: mock_034), partition_exprs = (CAST(13857: xx_hash3_64 AS LARGEINT),13796: mock_034)\n\nPLAN FRAGMENT 570(F103)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13994: mock_030\n  OutPut Exchange id: 144\n\n  143:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 571(F101)\n\n  Input Partition: HASH_PARTITIONED: 13829: mock_028\n  OutPut Partition: HASH_PARTITIONED: 13831: mock_030\n  OutPut Exchange id: 142\n\n  141:Project\n  |  output columns:\n  |  13796 <-> [13796: mock_034, DATETIME, true]\n  |  13823 <-> [13823: mock_039, VARCHAR(65535), true]\n  |  13824 <-> [13824: id, VARCHAR(65535), true]\n  |  13831 <-> [13831: mock_030, LARGEINT, true]\n  |  13833 <-> [13833: mock_006, BIGINT, true]\n  |  13834 <-> [13834: mock_007, BIGINT, true]\n  |  13844 <-> [13844: mock_017, BOOLEAN, true]\n  |  13845 <-> [13845: mock_018, BOOLEAN, true]\n  |  13846 <-> [13846: mock_020, BOOLEAN, true]\n  |  13847 <-> [13847: mock_021, BOOLEAN, true]\n  |  13848 <-> [13848: mock_022, BOOLEAN, true]\n  |  13849 <-> [13849: mock_023, BOOLEAN, true]\n  |  13850 <-> [13850: mock_024, BOOLEAN, true]\n  |  13857 <-> [13857: xx_hash3_64, BIGINT, true]\n  |  13858 <-> [13858: xx_hash3_64, BIGINT, true]\n  |  13859 <-> [13859: xx_hash3_64, BIGINT, true]\n  |  13860 <-> [13860: xx_hash3_64, BIGINT, true]\n  |  13947 <-> [13947: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  140:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13829: mock_028, LARGEINT, true] = [13922: mock_071, LARGEINT, true]\n  |  output columns: 13796, 13823, 13824, 13831, 13833, 13834, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13857, 13858, 13859, 13860, 13947\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----139:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13922: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  127:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13829: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 572(F99)\n\n  Input Partition: HASH_PARTITIONED: 13915: mock_075\n  OutPut Partition: HASH_PARTITIONED: 13922: mock_071\n  OutPut Exchange id: 139\n\n  138:Project\n  |  output columns:\n  |  13922 <-> [13922: mock_071, LARGEINT, true]\n  |  13947 <-> [13947: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  137:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13915: mock_075, LARGEINT, true] = [13979: mock_075, LARGEINT, true]\n  |  output columns: 13922, 13947\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----136:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13979: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  134:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13915: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 573(F97)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13979: mock_075\n  OutPut Exchange id: 136\n\n  135:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 574(F95)\n\n  Input Partition: HASH_PARTITIONED: 13917: mock_077\n  OutPut Partition: HASH_PARTITIONED: 13915: mock_075\n  OutPut Exchange id: 134\n\n  133:Project\n  |  output columns:\n  |  13915 <-> [13915: mock_075, LARGEINT, true]\n  |  13922 <-> [13922: mock_071, LARGEINT, true]\n  |  13947 <-> [13947: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  132:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13917: mock_077, LARGEINT, true] = [13950: mock_077, LARGEINT, true]\n  |  output columns: 13915, 13922, 13947\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----131:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13950: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  129:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13917: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 575(F93)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13950: mock_077\n  OutPut Exchange id: 131\n\n  130:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 576(F91)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13917: mock_077\n  OutPut Exchange id: 129\n\n  128:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 577(F89)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13829: mock_028\n  OutPut Exchange id: 127\n\n  126:SELECT\n  |  predicates: 13860: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  125:Project\n  |  output columns:\n  |  13796 <-> [13796: mock_034, DATETIME, true]\n  |  13823 <-> [13823: mock_039, VARCHAR(65535), true]\n  |  13824 <-> [13824: id, VARCHAR(65535), true]\n  |  13829 <-> [13829: mock_028, LARGEINT, true]\n  |  13831 <-> [13831: mock_030, LARGEINT, true]\n  |  13833 <-> [13833: mock_006, BIGINT, true]\n  |  13834 <-> [13834: mock_007, BIGINT, true]\n  |  13844 <-> [13844: mock_017, BOOLEAN, true]\n  |  13845 <-> [13845: mock_018, BOOLEAN, true]\n  |  13846 <-> [13846: mock_020, BOOLEAN, true]\n  |  13847 <-> [13847: mock_021, BOOLEAN, true]\n  |  13848 <-> [13848: mock_022, BOOLEAN, true]\n  |  13849 <-> [13849: mock_023, BOOLEAN, true]\n  |  13850 <-> [13850: mock_024, BOOLEAN, true]\n  |  13857 <-> xx_hash3_64[([13803: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13858 <-> xx_hash3_64[([13827: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13859 <-> xx_hash3_64[([13821: mock_002, VARCHAR(65535), true], [13823: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13860 <-> xx_hash3_64[([13823: mock_039, VARCHAR(65535), true], [13822: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  124:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [13850: mock_024, BOOLEAN, true], [13847: mock_021, BOOLEAN, true], [13845: mock_018, BOOLEAN, true], [13849: mock_023, BOOLEAN, true], [13844: mock_017, BOOLEAN, true], [13848: mock_022, BOOLEAN, true], [13846: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=148.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 578(F86)\n\n  Input Partition: HASH_PARTITIONED: 29994: cast\n  OutPut Partition: HASH_PARTITIONED: 29981: cast\n  OutPut Exchange id: 122\n\n  121:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12989: expr, BOOLEAN, true]\n  |  12990 <-> [12990: expr, BOOLEAN, true]\n  |  12992 <-> [12992: case, BIGINT, true]\n  |  12993 <-> [12993: case, BIGINT, true]\n  |  12994 <-> [12994: case, DOUBLE, true]\n  |  12995 <-> [12995: case, DOUBLE, true]\n  |  13737 <-> if[([30016: case, DOUBLE, true] > [12751: expr, DOUBLE, true], [30016: case, DOUBLE, true] * cast(if[(CASE WHEN 30014: expr THEN 12992: case WHEN (30010: expr) AND (30011: coalesce != 1) THEN 0 ELSE 12993: case END = 1, 1, 0); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] as DOUBLE), 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29981 <-> cast([12750: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30016 <-> CASE WHEN 30014: expr THEN 13733: sum WHEN 30015: expr THEN 0.0 ELSE 13734: sum END\n  |  30010 <-> [13364: sum, DOUBLE, true] > 0.0\n  |  30011 <-> coalesce[([12992: case, BIGINT, true], 0); args: BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30012 <-> [30011: coalesce, BIGINT, true] = 1\n  |  30013 <-> [30011: coalesce, BIGINT, true] = 0\n  |  30014 <-> (30010: expr) AND (30012: expr)\n  |  30015 <-> (30010: expr) AND (30013: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  120:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE(S))\n  |  equal join conjunct: [29993: cast, LARGEINT, true] = [13365: mock_193, LARGEINT, true]\n  |  output columns: 12714, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12854, 12989, 12990, 12992, 12993, 12994, 12995, 13364, 13733, 13734\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[NaN, NaN, 0.0, 8.0, 4.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----119:Project\n  |    |  output columns:\n  |    |  13365 <-> [13365: mock_193, LARGEINT, false]\n  |    |  13733 <-> [13733: sum, DOUBLE, true]\n  |    |  13734 <-> [13734: sum, DOUBLE, true]\n  |    |  hasNullableGenerateChild: true\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    118:HASH JOIN\n  |    |  join op: RIGHT OUTER JOIN (PARTITIONED)\n  |    |  equal join conjunct: [29994: cast, LARGEINT, true] = [13365: mock_193, LARGEINT, false]\n  |    |  build runtime filters:\n  |    |  - filter_id = 8, build_expr = (13365: mock_193), remote = true\n  |    |  output columns: 13365, 13733, 13734\n  |    |  can local shuffle: false\n  |    |  cardinality: 1\n  |    |  column statistics: \n  |    |  * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |    |  \n  |    |----117:EXCHANGE\n  |    |       distribution type: SHUFFLE\n  |    |       partition exprs: [13365: mock_193, LARGEINT, false]\n  |    |       cardinality: 1\n  |    |    \n  |    115:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29994: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  77:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29993: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 579(F84)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13365: mock_193\n  OutPut Exchange id: 117\n\n  116:OlapScanNode\n     table: mock_192, rollup: mock_192\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=123032,123034,123036,123038,123040,123042,123044,123046,123048,123050 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_193-->[9.0, 9.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 580(F82)\n\n  Input Partition: HASH_PARTITIONED: 13485: xx_hash3_64\n  OutPut Partition: HASH_PARTITIONED: 29994: cast\n  OutPut Exchange id: 115\n\n  114:Project\n  |  output columns:\n  |  13733 <-> [13733: sum, DOUBLE, true]\n  |  13734 <-> [13734: sum, DOUBLE, true]\n  |  29994 <-> cast([13485: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  113:AGGREGATE (merge finalize)\n  |  aggregate: sum[([13733: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([13734: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [13485: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 8, probe_expr = (CAST(13485: xx_hash3_64 AS LARGEINT))\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  112:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13485: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 581(F81)\n\n  Input Partition: HASH_PARTITIONED: 29995: cast, 13421: mock_034\n  OutPut Partition: HASH_PARTITIONED: 13485: xx_hash3_64\n  OutPut Exchange id: 112\n\n  111:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([13731: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], sum[([13732: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [13485: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  110:Project\n  |  output columns:\n  |  13485 <-> [13485: xx_hash3_64, BIGINT, true]\n  |  13731 <-> if[([30034: expr, BOOLEAN, true], if[(if[(if(13572: mock_133 = 13616: mock_133, 13448: mock_039, NULL) IS NULL, NULL, [13459: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [13440: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  13732 <-> if[([30034: expr, BOOLEAN, true], if[(if[(if(13572: mock_133 != 13616: mock_133, 13448: mock_039, NULL) IS NULL, NULL, [13458: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [13440: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  common expressions:\n  |  30032 <-> (30027: expr) AND (30031: expr)\n  |  30033 <-> (30030: expr) AND (30032: expr)\n  |  30034 <-> (30033: expr) AND (13471: mock_020)\n  |  30025 <-> (13475: mock_024) AND (13472: mock_021)\n  |  30026 <-> (13470: mock_018) AND (13474: mock_023)\n  |  30027 <-> (13469: mock_017) AND (13473: mock_022)\n  |  30028 <-> [13421: mock_034, DATETIME, true] = [13641: mock_157, DATETIME, true]\n  |  30029 <-> [13421: mock_034, DATETIME, true] = [13692: mock_157, DATETIME, true]\n  |  30030 <-> (30025: expr) AND (30026: expr)\n  |  30031 <-> (30028: expr) AND (30029: expr)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  109:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29995: cast, LARGEINT, true] = [13671: mock_189, LARGEINT, false]\n  |  equal join conjunct: [13421: mock_034, DATETIME, true] = [13692: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 6, build_expr = (13671: mock_189), remote = true\n  |  - filter_id = 7, build_expr = (13692: mock_157), remote = true\n  |  output columns: 13421, 13440, 13448, 13458, 13459, 13469, 13470, 13471, 13472, 13473, 13474, 13475, 13485, 13572, 13616, 13641, 13692\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----108:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13671: mock_189, LARGEINT, false], [13692: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  106:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29995: cast, LARGEINT, true], [13421: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 582(F79)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13671: mock_189, 13692: mock_157\n  OutPut Exchange id: 108\n\n  107:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 13692: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 583(F77)\n\n  Input Partition: HASH_PARTITIONED: 29996: cast, 13421: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29995: cast, 13421: mock_034\n  OutPut Exchange id: 106\n\n  105:Project\n  |  output columns:\n  |  13421 <-> [13421: mock_034, DATETIME, true]\n  |  13440 <-> [13440: mock_042, DOUBLE, true]\n  |  13448 <-> [13448: mock_039, VARCHAR(65535), true]\n  |  13458 <-> [13458: mock_006, BIGINT, true]\n  |  13459 <-> [13459: mock_007, BIGINT, true]\n  |  13469 <-> [13469: mock_017, BOOLEAN, true]\n  |  13470 <-> [13470: mock_018, BOOLEAN, true]\n  |  13471 <-> [13471: mock_020, BOOLEAN, true]\n  |  13472 <-> [13472: mock_021, BOOLEAN, true]\n  |  13473 <-> [13473: mock_022, BOOLEAN, true]\n  |  13474 <-> [13474: mock_023, BOOLEAN, true]\n  |  13475 <-> [13475: mock_024, BOOLEAN, true]\n  |  13485 <-> [13485: xx_hash3_64, BIGINT, true]\n  |  13572 <-> [13572: mock_133, VARCHAR(65535), true]\n  |  13616 <-> [13616: mock_133, VARCHAR(65535), true]\n  |  13641 <-> [13641: mock_157, DATETIME, true]\n  |  29995 <-> cast([13483: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  104:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29996: cast, LARGEINT, true] = [13620: mock_177, LARGEINT, false]\n  |  equal join conjunct: [13421: mock_034, DATETIME, true] = [13641: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 4, build_expr = (13620: mock_177), remote = true\n  |  - filter_id = 5, build_expr = (13641: mock_157), remote = true\n  |  output columns: 13421, 13440, 13448, 13458, 13459, 13469, 13470, 13471, 13472, 13473, 13474, 13475, 13483, 13485, 13572, 13616, 13641\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 7, probe_expr = (13421: mock_034), partition_exprs = (CAST(13483: xx_hash3_64 AS LARGEINT),13421: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----103:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13620: mock_177, LARGEINT, false], [13641: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  101:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29996: cast, LARGEINT, true], [13421: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 6, probe_expr = (CAST(13483: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(13483: xx_hash3_64 AS LARGEINT),13421: mock_034)\n\nPLAN FRAGMENT 584(F75)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13620: mock_177, 13641: mock_157\n  OutPut Exchange id: 103\n\n  102:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 13641: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 585(F73)\n\n  Input Partition: HASH_PARTITIONED: 13456: mock_030\n  OutPut Partition: HASH_PARTITIONED: 29996: cast, 13421: mock_034\n  OutPut Exchange id: 101\n\n  100:Project\n  |  output columns:\n  |  13421 <-> [13421: mock_034, DATETIME, true]\n  |  13440 <-> [13440: mock_042, DOUBLE, true]\n  |  13448 <-> [13448: mock_039, VARCHAR(65535), true]\n  |  13458 <-> [13458: mock_006, BIGINT, true]\n  |  13459 <-> [13459: mock_007, BIGINT, true]\n  |  13469 <-> [13469: mock_017, BOOLEAN, true]\n  |  13470 <-> [13470: mock_018, BOOLEAN, true]\n  |  13471 <-> [13471: mock_020, BOOLEAN, true]\n  |  13472 <-> [13472: mock_021, BOOLEAN, true]\n  |  13473 <-> [13473: mock_022, BOOLEAN, true]\n  |  13474 <-> [13474: mock_023, BOOLEAN, true]\n  |  13475 <-> [13475: mock_024, BOOLEAN, true]\n  |  13483 <-> [13483: xx_hash3_64, BIGINT, true]\n  |  13485 <-> [13485: xx_hash3_64, BIGINT, true]\n  |  13572 <-> [13572: mock_133, VARCHAR(65535), true]\n  |  13616 <-> [13616: mock_133, VARCHAR(65535), true]\n  |  29996 <-> cast([13482: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  99:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13456: mock_030, LARGEINT, true] = [13619: mock_030, LARGEINT, true]\n  |  output columns: 13421, 13440, 13448, 13458, 13459, 13469, 13470, 13471, 13472, 13473, 13474, 13475, 13482, 13483, 13485, 13572, 13616\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----98:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13619: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  96:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13456: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 4, probe_expr = (CAST(13482: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(13482: xx_hash3_64 AS LARGEINT),13421: mock_034)\n     - filter_id = 5, probe_expr = (13421: mock_034), partition_exprs = (CAST(13482: xx_hash3_64 AS LARGEINT),13421: mock_034)\n\nPLAN FRAGMENT 586(F71)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13619: mock_030\n  OutPut Exchange id: 98\n\n  97:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 587(F69)\n\n  Input Partition: HASH_PARTITIONED: 13454: mock_028\n  OutPut Partition: HASH_PARTITIONED: 13456: mock_030\n  OutPut Exchange id: 96\n\n  95:Project\n  |  output columns:\n  |  13421 <-> [13421: mock_034, DATETIME, true]\n  |  13440 <-> [13440: mock_042, DOUBLE, true]\n  |  13448 <-> [13448: mock_039, VARCHAR(65535), true]\n  |  13456 <-> [13456: mock_030, LARGEINT, true]\n  |  13458 <-> [13458: mock_006, BIGINT, true]\n  |  13459 <-> [13459: mock_007, BIGINT, true]\n  |  13469 <-> [13469: mock_017, BOOLEAN, true]\n  |  13470 <-> [13470: mock_018, BOOLEAN, true]\n  |  13471 <-> [13471: mock_020, BOOLEAN, true]\n  |  13472 <-> [13472: mock_021, BOOLEAN, true]\n  |  13473 <-> [13473: mock_022, BOOLEAN, true]\n  |  13474 <-> [13474: mock_023, BOOLEAN, true]\n  |  13475 <-> [13475: mock_024, BOOLEAN, true]\n  |  13482 <-> [13482: xx_hash3_64, BIGINT, true]\n  |  13483 <-> [13483: xx_hash3_64, BIGINT, true]\n  |  13485 <-> [13485: xx_hash3_64, BIGINT, true]\n  |  13572 <-> [13572: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  94:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13454: mock_028, LARGEINT, true] = [13547: mock_071, LARGEINT, true]\n  |  output columns: 13421, 13440, 13448, 13456, 13458, 13459, 13469, 13470, 13471, 13472, 13473, 13474, 13475, 13482, 13483, 13485, 13572\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----93:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13547: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  81:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13454: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 588(F67)\n\n  Input Partition: HASH_PARTITIONED: 13540: mock_075\n  OutPut Partition: HASH_PARTITIONED: 13547: mock_071\n  OutPut Exchange id: 93\n\n  92:Project\n  |  output columns:\n  |  13547 <-> [13547: mock_071, LARGEINT, true]\n  |  13572 <-> [13572: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  91:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13540: mock_075, LARGEINT, true] = [13604: mock_075, LARGEINT, true]\n  |  output columns: 13547, 13572\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----90:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13604: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  88:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13540: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 589(F65)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13604: mock_075\n  OutPut Exchange id: 90\n\n  89:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 590(F63)\n\n  Input Partition: HASH_PARTITIONED: 13542: mock_077\n  OutPut Partition: HASH_PARTITIONED: 13540: mock_075\n  OutPut Exchange id: 88\n\n  87:Project\n  |  output columns:\n  |  13540 <-> [13540: mock_075, LARGEINT, true]\n  |  13547 <-> [13547: mock_071, LARGEINT, true]\n  |  13572 <-> [13572: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  86:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13542: mock_077, LARGEINT, true] = [13575: mock_077, LARGEINT, true]\n  |  output columns: 13540, 13547, 13572\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----85:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13575: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  83:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13542: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 591(F61)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13575: mock_077\n  OutPut Exchange id: 85\n\n  84:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 592(F59)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13542: mock_077\n  OutPut Exchange id: 83\n\n  82:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 593(F57)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13454: mock_028\n  OutPut Exchange id: 81\n\n  80:SELECT\n  |  predicates: 13485: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  79:Project\n  |  output columns:\n  |  13421 <-> [13421: mock_034, DATETIME, true]\n  |  13440 <-> [13440: mock_042, DOUBLE, true]\n  |  13448 <-> [13448: mock_039, VARCHAR(65535), true]\n  |  13454 <-> [13454: mock_028, LARGEINT, true]\n  |  13456 <-> [13456: mock_030, LARGEINT, true]\n  |  13458 <-> [13458: mock_006, BIGINT, true]\n  |  13459 <-> [13459: mock_007, BIGINT, true]\n  |  13469 <-> [13469: mock_017, BOOLEAN, true]\n  |  13470 <-> [13470: mock_018, BOOLEAN, true]\n  |  13471 <-> [13471: mock_020, BOOLEAN, true]\n  |  13472 <-> [13472: mock_021, BOOLEAN, true]\n  |  13473 <-> [13473: mock_022, BOOLEAN, true]\n  |  13474 <-> [13474: mock_023, BOOLEAN, true]\n  |  13475 <-> [13475: mock_024, BOOLEAN, true]\n  |  13482 <-> xx_hash3_64[([13428: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13483 <-> xx_hash3_64[([13452: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13485 <-> xx_hash3_64[([13448: mock_039, VARCHAR(65535), true], [13447: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  78:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [13475: mock_024, BOOLEAN, true], [13472: mock_021, BOOLEAN, true], [13470: mock_018, BOOLEAN, true], [13474: mock_023, BOOLEAN, true], [13469: mock_017, BOOLEAN, true], [13473: mock_022, BOOLEAN, true], [13471: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=134.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 594(F55)\n\n  Input Partition: HASH_PARTITIONED: 29997: cast\n  OutPut Partition: HASH_PARTITIONED: 29993: cast\n  OutPut Exchange id: 77\n\n  76:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12989: expr, BOOLEAN, true]\n  |  12990 <-> [12990: expr, BOOLEAN, true]\n  |  12992 <-> [12992: case, BIGINT, true]\n  |  12993 <-> [12993: case, BIGINT, true]\n  |  12994 <-> [12994: case, DOUBLE, true]\n  |  12995 <-> [12995: case, DOUBLE, true]\n  |  13364 <-> [13364: sum, DOUBLE, true]\n  |  29993 <-> cast([12750: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  75:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [29997: cast, LARGEINT, true] = [12996: mock_191, LARGEINT, true]\n  |  output columns: 12714, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12854, 12989, 12990, 12992, 12993, 12994, 12995, 13364\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----74:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12996: mock_191, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  32:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29997: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 595(F26)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12996: mock_191\n  OutPut Exchange id: 74\n\n  73:Project\n  |  output columns:\n  |  12996 <-> [12996: mock_191, LARGEINT, false]\n  |  13364 <-> [13364: sum, DOUBLE, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  72:HASH JOIN\n  |  join op: LEFT OUTER JOIN (BUCKET_SHUFFLE)\n  |  equal join conjunct: [12996: mock_191, LARGEINT, false] = [29998: cast, LARGEINT, true]\n  |  output columns: 12996, 13364\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----71:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [29998: cast, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  33:OlapScanNode\n     table: mock_190, rollup: mock_190\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122768,122770,122772,122774,122776,122778,122780,122782,122784,122786 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_191-->[8.0, 8.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 596(F52)\n\n  Input Partition: HASH_PARTITIONED: 13115: xx_hash3_64\n  OutPut Partition: BUCKET_SHUFFLE_HASH_PARTITIONED: 29998: cast\n  OutPut Exchange id: 71\n\n  70:Project\n  |  output columns:\n  |  13364 <-> [13364: sum, DOUBLE, true]\n  |  29998 <-> cast([13115: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  69:AGGREGATE (merge finalize)\n  |  aggregate: sum[([13364: sum, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [13115: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  68:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13115: xx_hash3_64, BIGINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 597(F51)\n\n  Input Partition: HASH_PARTITIONED: 29999: cast, 13052: mock_034\n  OutPut Partition: HASH_PARTITIONED: 13115: xx_hash3_64\n  OutPut Exchange id: 68\n\n  67:AGGREGATE (update serialize)\n  |  STREAMING\n  |  aggregate: sum[([13362: case, DOUBLE, true]); args: DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  group by: [13115: xx_hash3_64, BIGINT, true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * sum-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  66:Project\n  |  output columns:\n  |  13115 <-> [13115: xx_hash3_64, BIGINT, true]\n  |  13362 <-> if[(((((13106: mock_024) AND (13103: mock_021)) AND ((13101: mock_018) AND (13105: mock_023))) AND (((13100: mock_017) AND (13104: mock_022)) AND ((13052: mock_034 = 13272: mock_157) AND (13052: mock_034 = 13323: mock_157)))) AND (13102: mock_020), if[(if[(if(13203: mock_133 = 13247: mock_133, 13079: mock_039, NULL) IS NULL, NULL, [13090: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true] = 1, [13071: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true], NULL); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  65:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [29999: cast, LARGEINT, true] = [13302: mock_189, LARGEINT, false]\n  |  equal join conjunct: [13052: mock_034, DATETIME, true] = [13323: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 2, build_expr = (13302: mock_189), remote = true\n  |  - filter_id = 3, build_expr = (13323: mock_157), remote = true\n  |  output columns: 13052, 13071, 13079, 13090, 13100, 13101, 13102, 13103, 13104, 13105, 13106, 13115, 13203, 13247, 13272, 13323\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----64:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13302: mock_189, LARGEINT, false], [13323: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  62:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [29999: cast, LARGEINT, true], [13052: mock_034, DATETIME, true]\n     cardinality: 1\n\nPLAN FRAGMENT 598(F49)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13302: mock_189, 13323: mock_157\n  OutPut Exchange id: 64\n\n  63:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     Predicates: 13323: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 599(F47)\n\n  Input Partition: HASH_PARTITIONED: 30000: cast, 13052: mock_034\n  OutPut Partition: HASH_PARTITIONED: 29999: cast, 13052: mock_034\n  OutPut Exchange id: 62\n\n  61:Project\n  |  output columns:\n  |  13052 <-> [13052: mock_034, DATETIME, true]\n  |  13071 <-> [13071: mock_042, DOUBLE, true]\n  |  13079 <-> [13079: mock_039, VARCHAR(65535), true]\n  |  13090 <-> [13090: mock_007, BIGINT, true]\n  |  13100 <-> [13100: mock_017, BOOLEAN, true]\n  |  13101 <-> [13101: mock_018, BOOLEAN, true]\n  |  13102 <-> [13102: mock_020, BOOLEAN, true]\n  |  13103 <-> [13103: mock_021, BOOLEAN, true]\n  |  13104 <-> [13104: mock_022, BOOLEAN, true]\n  |  13105 <-> [13105: mock_023, BOOLEAN, true]\n  |  13106 <-> [13106: mock_024, BOOLEAN, true]\n  |  13115 <-> [13115: xx_hash3_64, BIGINT, true]\n  |  13203 <-> [13203: mock_133, VARCHAR(65535), true]\n  |  13247 <-> [13247: mock_133, VARCHAR(65535), true]\n  |  13272 <-> [13272: mock_157, DATETIME, true]\n  |  29999 <-> cast([13114: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  60:HASH JOIN\n  |  join op: INNER JOIN (PARTITIONED)\n  |  equal join conjunct: [30000: cast, LARGEINT, true] = [13251: mock_177, LARGEINT, false]\n  |  equal join conjunct: [13052: mock_034, DATETIME, true] = [13272: mock_157, DATETIME, true]\n  |  build runtime filters:\n  |  - filter_id = 0, build_expr = (13251: mock_177), remote = true\n  |  - filter_id = 1, build_expr = (13272: mock_157), remote = true\n  |  output columns: 13052, 13071, 13079, 13090, 13100, 13101, 13102, 13103, 13104, 13105, 13106, 13114, 13115, 13203, 13247, 13272\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  probe runtime filters:\n  |  - filter_id = 3, probe_expr = (13052: mock_034), partition_exprs = (CAST(13114: xx_hash3_64 AS LARGEINT),13052: mock_034)\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----59:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13251: mock_177, LARGEINT, false], [13272: mock_157, DATETIME, true]\n  |       cardinality: 1\n  |    \n  57:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [30000: cast, LARGEINT, true], [13052: mock_034, DATETIME, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 2, probe_expr = (CAST(13114: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(13114: xx_hash3_64 AS LARGEINT),13052: mock_034)\n\nPLAN FRAGMENT 600(F45)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13251: mock_177, 13272: mock_157\n  OutPut Exchange id: 59\n\n  58:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     Predicates: 13272: mock_157 IS NOT NULL\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 601(F43)\n\n  Input Partition: HASH_PARTITIONED: 13087: mock_030\n  OutPut Partition: HASH_PARTITIONED: 30000: cast, 13052: mock_034\n  OutPut Exchange id: 57\n\n  56:Project\n  |  output columns:\n  |  13052 <-> [13052: mock_034, DATETIME, true]\n  |  13071 <-> [13071: mock_042, DOUBLE, true]\n  |  13079 <-> [13079: mock_039, VARCHAR(65535), true]\n  |  13090 <-> [13090: mock_007, BIGINT, true]\n  |  13100 <-> [13100: mock_017, BOOLEAN, true]\n  |  13101 <-> [13101: mock_018, BOOLEAN, true]\n  |  13102 <-> [13102: mock_020, BOOLEAN, true]\n  |  13103 <-> [13103: mock_021, BOOLEAN, true]\n  |  13104 <-> [13104: mock_022, BOOLEAN, true]\n  |  13105 <-> [13105: mock_023, BOOLEAN, true]\n  |  13106 <-> [13106: mock_024, BOOLEAN, true]\n  |  13114 <-> [13114: xx_hash3_64, BIGINT, true]\n  |  13115 <-> [13115: xx_hash3_64, BIGINT, true]\n  |  13203 <-> [13203: mock_133, VARCHAR(65535), true]\n  |  13247 <-> [13247: mock_133, VARCHAR(65535), true]\n  |  30000 <-> cast([13113: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  55:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13087: mock_030, LARGEINT, true] = [13250: mock_030, LARGEINT, true]\n  |  output columns: 13052, 13071, 13079, 13090, 13100, 13101, 13102, 13103, 13104, 13105, 13106, 13113, 13114, 13115, 13203, 13247\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----54:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13250: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  52:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13087: mock_030, LARGEINT, true]\n     cardinality: 1\n     probe runtime filters:\n     - filter_id = 0, probe_expr = (CAST(13113: xx_hash3_64 AS LARGEINT)), partition_exprs = (CAST(13113: xx_hash3_64 AS LARGEINT),13052: mock_034)\n     - filter_id = 1, probe_expr = (13052: mock_034), partition_exprs = (CAST(13113: xx_hash3_64 AS LARGEINT),13052: mock_034)\n\nPLAN FRAGMENT 602(F41)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13250: mock_030\n  OutPut Exchange id: 54\n\n  53:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 603(F39)\n\n  Input Partition: HASH_PARTITIONED: 13085: mock_028\n  OutPut Partition: HASH_PARTITIONED: 13087: mock_030\n  OutPut Exchange id: 52\n\n  51:Project\n  |  output columns:\n  |  13052 <-> [13052: mock_034, DATETIME, true]\n  |  13071 <-> [13071: mock_042, DOUBLE, true]\n  |  13079 <-> [13079: mock_039, VARCHAR(65535), true]\n  |  13087 <-> [13087: mock_030, LARGEINT, true]\n  |  13090 <-> [13090: mock_007, BIGINT, true]\n  |  13100 <-> [13100: mock_017, BOOLEAN, true]\n  |  13101 <-> [13101: mock_018, BOOLEAN, true]\n  |  13102 <-> [13102: mock_020, BOOLEAN, true]\n  |  13103 <-> [13103: mock_021, BOOLEAN, true]\n  |  13104 <-> [13104: mock_022, BOOLEAN, true]\n  |  13105 <-> [13105: mock_023, BOOLEAN, true]\n  |  13106 <-> [13106: mock_024, BOOLEAN, true]\n  |  13113 <-> [13113: xx_hash3_64, BIGINT, true]\n  |  13114 <-> [13114: xx_hash3_64, BIGINT, true]\n  |  13115 <-> [13115: xx_hash3_64, BIGINT, true]\n  |  13203 <-> [13203: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  50:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13085: mock_028, LARGEINT, true] = [13178: mock_071, LARGEINT, true]\n  |  output columns: 13052, 13071, 13079, 13087, 13090, 13100, 13101, 13102, 13103, 13104, 13105, 13106, 13113, 13114, 13115, 13203\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----49:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13178: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  37:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13085: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 604(F37)\n\n  Input Partition: HASH_PARTITIONED: 13171: mock_075\n  OutPut Partition: HASH_PARTITIONED: 13178: mock_071\n  OutPut Exchange id: 49\n\n  48:Project\n  |  output columns:\n  |  13178 <-> [13178: mock_071, LARGEINT, true]\n  |  13203 <-> [13203: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  47:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13171: mock_075, LARGEINT, true] = [13235: mock_075, LARGEINT, true]\n  |  output columns: 13178, 13203\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----46:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13235: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  44:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13171: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 605(F35)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13235: mock_075\n  OutPut Exchange id: 46\n\n  45:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=16.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 606(F33)\n\n  Input Partition: HASH_PARTITIONED: 13173: mock_077\n  OutPut Partition: HASH_PARTITIONED: 13171: mock_075\n  OutPut Exchange id: 44\n\n  43:Project\n  |  output columns:\n  |  13171 <-> [13171: mock_075, LARGEINT, true]\n  |  13178 <-> [13178: mock_071, LARGEINT, true]\n  |  13203 <-> [13203: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  42:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [13173: mock_077, LARGEINT, true] = [13206: mock_077, LARGEINT, true]\n  |  output columns: 13171, 13178, 13203\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----41:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [13206: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  39:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [13173: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 607(F31)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13206: mock_077\n  OutPut Exchange id: 41\n\n  40:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 608(F29)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13173: mock_077\n  OutPut Exchange id: 39\n\n  38:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 609(F27)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 13085: mock_028\n  OutPut Exchange id: 37\n\n  36:SELECT\n  |  predicates: 13115: xx_hash3_64 IS NOT NULL\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  35:Project\n  |  output columns:\n  |  13052 <-> [13052: mock_034, DATETIME, true]\n  |  13071 <-> [13071: mock_042, DOUBLE, true]\n  |  13079 <-> [13079: mock_039, VARCHAR(65535), true]\n  |  13085 <-> [13085: mock_028, LARGEINT, true]\n  |  13087 <-> [13087: mock_030, LARGEINT, true]\n  |  13090 <-> [13090: mock_007, BIGINT, true]\n  |  13100 <-> [13100: mock_017, BOOLEAN, true]\n  |  13101 <-> [13101: mock_018, BOOLEAN, true]\n  |  13102 <-> [13102: mock_020, BOOLEAN, true]\n  |  13103 <-> [13103: mock_021, BOOLEAN, true]\n  |  13104 <-> [13104: mock_022, BOOLEAN, true]\n  |  13105 <-> [13105: mock_023, BOOLEAN, true]\n  |  13106 <-> [13106: mock_024, BOOLEAN, true]\n  |  13113 <-> xx_hash3_64[([13059: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13114 <-> xx_hash3_64[([13083: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  13115 <-> xx_hash3_64[([13077: mock_002, VARCHAR(65535), true], [13079: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  34:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     Predicates: [13106: mock_024, BOOLEAN, true], [13103: mock_021, BOOLEAN, true], [13101: mock_018, BOOLEAN, true], [13105: mock_023, BOOLEAN, true], [13100: mock_017, BOOLEAN, true], [13104: mock_022, BOOLEAN, true], [13102: mock_020, BOOLEAN, true]\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=126.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[NaN, NaN, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n\nPLAN FRAGMENT 610(F24)\n\n  Input Partition: HASH_PARTITIONED: 30001: cast\n  OutPut Partition: HASH_PARTITIONED: 29997: cast\n  OutPut Exchange id: 32\n\n  31:Project\n  |  output columns:\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12989 <-> [12686: mock_034, DATETIME, true] = [12906: mock_157, DATETIME, true]\n  |  12990 <-> [12686: mock_034, DATETIME, true] = [12957: mock_157, DATETIME, true]\n  |  12992 <-> [30024: if, BIGINT, true]\n  |  12993 <-> [30023: if, BIGINT, true]\n  |  12994 <-> if[([30024: if, BIGINT, true] = 1, [12705: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  12995 <-> if[([30023: if, BIGINT, true] = 1, [12705: mock_042, DOUBLE, true], 0.0); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true]\n  |  29997 <-> cast([12749: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  common expressions:\n  |  30017 <-> [12837: mock_133, VARCHAR(65535), true] != [12881: mock_133, VARCHAR(65535), true]\n  |  30018 <-> [12837: mock_133, VARCHAR(65535), true] = [12881: mock_133, VARCHAR(65535), true]\n  |  30019 <-> if[([30017: expr, BOOLEAN, true], [12713: mock_039, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  30020 <-> if[([30018: expr, BOOLEAN, true], [12713: mock_039, VARCHAR(65535), true], NULL); args: BOOLEAN,VARCHAR,VARCHAR; result: VARCHAR(65535); args nullable: true; result nullable: true]\n  |  30021 <-> 30019: if IS NULL\n  |  30022 <-> 30020: if IS NULL\n  |  30023 <-> if[([30021: expr, BOOLEAN, false], NULL, [12723: mock_006, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  30024 <-> if[([30022: expr, BOOLEAN, false], NULL, [12724: mock_007, BIGINT, true]); args: BOOLEAN,BIGINT,BIGINT; result: BIGINT; args nullable: true; result nullable: true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  30:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [30001: cast, LARGEINT, true] = [12936: mock_189, LARGEINT, true]\n  |  output columns: 12686, 12705, 12713, 12714, 12723, 12724, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12749, 12750, 12751, 12752, 12837, 12854, 12881, 12906, 12957\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * case-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----29:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12936: mock_189, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  27:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [30001: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 611(F22)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12936: mock_189\n  OutPut Exchange id: 29\n\n  28:OlapScanNode\n     table: mock_188, rollup: mock_188\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122504,122506,122508,122510,122512,122514,122516,122518,122520,122522 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_189-->[7.0, 7.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.70442E9, 1.70442E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 612(F20)\n\n  Input Partition: HASH_PARTITIONED: 30002: cast\n  OutPut Partition: HASH_PARTITIONED: 30001: cast\n  OutPut Exchange id: 27\n\n  26:Project\n  |  output columns:\n  |  12686 <-> [12686: mock_034, DATETIME, true]\n  |  12705 <-> [12705: mock_042, DOUBLE, true]\n  |  12713 <-> [12713: mock_039, VARCHAR(65535), true]\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12723 <-> [12723: mock_006, BIGINT, true]\n  |  12724 <-> [12724: mock_007, BIGINT, true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12837 <-> [12837: mock_133, VARCHAR(65535), true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12881 <-> [12881: mock_133, VARCHAR(65535), true]\n  |  12906 <-> [12906: mock_157, DATETIME, true]\n  |  30001 <-> cast([12748: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  25:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [30002: cast, LARGEINT, true] = [12885: mock_177, LARGEINT, true]\n  |  output columns: 12686, 12705, 12713, 12714, 12723, 12724, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12748, 12749, 12750, 12751, 12752, 12837, 12854, 12881, 12906\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----24:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12885: mock_177, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  22:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [30002: cast, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 613(F18)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12885: mock_177\n  OutPut Exchange id: 24\n\n  23:OlapScanNode\n     table: mock_156, rollup: mock_156\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=122240,122242,122244,122246,122248,122250,122252,122254,122256,122258 ...\n     actualRows=1, avgRowSize=24.0\n     cardinality: 1\n     column statistics: \n     * mock_177-->[6.0, 6.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_157-->[1.7043336E9, 1.7043336E9, 0.0, 8.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 614(F16)\n\n  Input Partition: HASH_PARTITIONED: 12721: mock_030\n  OutPut Partition: HASH_PARTITIONED: 30002: cast\n  OutPut Exchange id: 22\n\n  21:Project\n  |  output columns:\n  |  12686 <-> [12686: mock_034, DATETIME, true]\n  |  12705 <-> [12705: mock_042, DOUBLE, true]\n  |  12713 <-> [12713: mock_039, VARCHAR(65535), true]\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12723 <-> [12723: mock_006, BIGINT, true]\n  |  12724 <-> [12724: mock_007, BIGINT, true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12748 <-> [12748: xx_hash3_64, BIGINT, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12837 <-> [12837: mock_133, VARCHAR(65535), true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  12881 <-> [12881: mock_133, VARCHAR(65535), true]\n  |  30002 <-> cast([12747: xx_hash3_64, BIGINT, true] as LARGEINT)\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  20:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [12721: mock_030, LARGEINT, true] = [12884: mock_030, LARGEINT, true]\n  |  output columns: 12686, 12705, 12713, 12714, 12723, 12724, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12747, 12748, 12749, 12750, 12751, 12752, 12837, 12854, 12881\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * cast-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  |----19:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12884: mock_030, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  17:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [12721: mock_030, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 615(F14)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12884: mock_030\n  OutPut Exchange id: 19\n\n  18:OlapScanNode\n     table: mock_154, rollup: mock_154\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=20/20\n     tabletList=122196,122198,122200,122202,122204,122206,122208,122210,122212,122214 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_030-->[500.0, 500.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 616(F12)\n\n  Input Partition: HASH_PARTITIONED: 12719: mock_028\n  OutPut Partition: HASH_PARTITIONED: 12721: mock_030\n  OutPut Exchange id: 17\n\n  16:Project\n  |  output columns:\n  |  12686 <-> [12686: mock_034, DATETIME, true]\n  |  12705 <-> [12705: mock_042, DOUBLE, true]\n  |  12713 <-> [12713: mock_039, VARCHAR(65535), true]\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12721 <-> [12721: mock_030, LARGEINT, true]\n  |  12723 <-> [12723: mock_006, BIGINT, true]\n  |  12724 <-> [12724: mock_007, BIGINT, true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12747 <-> [12747: xx_hash3_64, BIGINT, true]\n  |  12748 <-> [12748: xx_hash3_64, BIGINT, true]\n  |  12749 <-> [12749: xx_hash3_64, BIGINT, true]\n  |  12750 <-> [12750: xx_hash3_64, BIGINT, true]\n  |  12751 <-> [12751: expr, DOUBLE, true]\n  |  12752 <-> [12752: expr, BOOLEAN, true]\n  |  12837 <-> [12837: mock_133, VARCHAR(65535), true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  15:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [12719: mock_028, LARGEINT, true] = [12812: mock_071, LARGEINT, true]\n  |  output columns: 12686, 12705, 12713, 12714, 12721, 12723, 12724, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12747, 12748, 12749, 12750, 12751, 12752, 12837, 12854\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  |----14:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12812: mock_071, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  2:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [12719: mock_028, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 617(F10)\n\n  Input Partition: HASH_PARTITIONED: 12805: mock_075\n  OutPut Partition: HASH_PARTITIONED: 12812: mock_071\n  OutPut Exchange id: 14\n\n  13:Project\n  |  output columns:\n  |  12812 <-> [12812: mock_071, LARGEINT, true]\n  |  12837 <-> [12837: mock_133, VARCHAR(65535), true]\n  |  12854 <-> [12854: mock_148, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  12:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [12805: mock_075, LARGEINT, true] = [12869: mock_075, LARGEINT, true]\n  |  output columns: 12812, 12837, 12854\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----11:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12869: mock_075, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  9:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [12805: mock_075, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 618(F08)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12869: mock_075\n  OutPut Exchange id: 11\n\n  10:OlapScanNode\n     table: mock_136, rollup: mock_136\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121932,121934,121936,121938,121940,121942,121944,121946,121948,121950 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_148-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_075-->[400.0, 400.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 619(F06)\n\n  Input Partition: HASH_PARTITIONED: 12807: mock_077\n  OutPut Partition: HASH_PARTITIONED: 12805: mock_075\n  OutPut Exchange id: 09\n\n  8:Project\n  |  output columns:\n  |  12805 <-> [12805: mock_075, LARGEINT, true]\n  |  12812 <-> [12812: mock_071, LARGEINT, true]\n  |  12837 <-> [12837: mock_133, VARCHAR(65535), true]\n  |  hasNullableGenerateChild: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  \n  7:HASH JOIN\n  |  join op: LEFT OUTER JOIN (PARTITIONED)\n  |  equal join conjunct: [12807: mock_077, LARGEINT, true] = [12840: mock_077, LARGEINT, true]\n  |  output columns: 12805, 12812, 12837\n  |  can local shuffle: true\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  \n  |----6:EXCHANGE\n  |       distribution type: SHUFFLE\n  |       partition exprs: [12840: mock_077, LARGEINT, true]\n  |       cardinality: 1\n  |    \n  4:EXCHANGE\n     distribution type: SHUFFLE\n     partition exprs: [12807: mock_077, LARGEINT, true]\n     cardinality: 1\n\nPLAN FRAGMENT 620(F04)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12840: mock_077\n  OutPut Exchange id: 06\n\n  5:OlapScanNode\n     table: mock_125, rollup: mock_125\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=121668,121670,121672,121674,121676,121678,121680,121682,121684,121686 ...\n     actualRows=1, avgRowSize=31.0\n     cardinality: 1\n     column statistics: \n     * mock_133-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_077-->[300.0, 300.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 621(F02)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12807: mock_077\n  OutPut Exchange id: 04\n\n  3:OlapScanNode\n     table: mock_065, rollup: mock_065\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=366/366\n     tabletList=120932,120934,120936,120938,120940,120942,120944,120946,120948,120950 ...\n     actualRows=1, avgRowSize=48.0\n     cardinality: 1\n     column statistics: \n     * mock_075-->[200.0, 200.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_077-->[202.0, 202.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_071-->[207.0, 207.0, 0.0, 16.0, 1.0] ESTIMATE\n\nPLAN FRAGMENT 622(F00)\n\n  Input Partition: RANDOM\n  OutPut Partition: HASH_PARTITIONED: 12719: mock_028\n  OutPut Exchange id: 02\n\n  1:Project\n  |  output columns:\n  |  12686 <-> [12686: mock_034, DATETIME, true]\n  |  12705 <-> [12705: mock_042, DOUBLE, true]\n  |  12713 <-> [12713: mock_039, VARCHAR(65535), true]\n  |  12714 <-> [12714: id, VARCHAR(65535), true]\n  |  12719 <-> [12719: mock_028, LARGEINT, true]\n  |  12721 <-> [12721: mock_030, LARGEINT, true]\n  |  12723 <-> [12723: mock_006, BIGINT, true]\n  |  12724 <-> [12724: mock_007, BIGINT, true]\n  |  12734 <-> [12734: mock_017, BOOLEAN, true]\n  |  12735 <-> [12735: mock_018, BOOLEAN, true]\n  |  12736 <-> [12736: mock_020, BOOLEAN, true]\n  |  12737 <-> [12737: mock_021, BOOLEAN, true]\n  |  12738 <-> [12738: mock_022, BOOLEAN, true]\n  |  12739 <-> [12739: mock_023, BOOLEAN, true]\n  |  12740 <-> [12740: mock_024, BOOLEAN, true]\n  |  12747 <-> xx_hash3_64[([12693: mock_058, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  12748 <-> xx_hash3_64[([12717: mock_043, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  12749 <-> xx_hash3_64[([12711: mock_002, VARCHAR(65535), true], [12713: mock_039, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  12750 <-> xx_hash3_64[([12713: mock_039, VARCHAR(65535), true], [12712: mock_052, VARCHAR(65535), true]); args: VARCHAR; result: BIGINT; args nullable: true; result nullable: true]\n  |  12751 <-> [12692: mock_035, DOUBLE, true] * 0.0 * 3.0\n  |  12752 <-> [12703: mock_055, DOUBLE, true] + [12705: mock_042, DOUBLE, true] + if[(12699: mock_046 IS NULL, 0.0, [12699: mock_046, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] * 365.0 / if[(((12701: mock_005 IS NULL) OR (12701: mock_005 < 0.0)) AND (12709: mock_054 != 'N'), NULL, [12701: mock_005, DOUBLE, true]); args: BOOLEAN,DOUBLE,DOUBLE; result: DOUBLE; args nullable: true; result nullable: true] < 3.0416666666666668E10\n  |  cardinality: 1\n  |  column statistics: \n  |  * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n  |  * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n  |  * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n  |  * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n  |  * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n  |  \n  0:OlapScanNode\n     table: mock_001, rollup: mock_001\n     preAggregation: on\n     partitionsRatio=1/1, tabletsRatio=130/130\n     tabletList=120668,120670,120672,120674,120676,120678,120680,120682,120684,120686 ...\n     actualRows=1, avgRowSize=212.0\n     cardinality: 1\n     column statistics: \n     * mock_034-->[1.7040744E9, 1.7040744E9, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_035-->[20.5, 20.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_058-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_046-->[80.5, 80.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_005-->[100.5, 100.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_055-->[120.5, 120.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_042-->[140.5, 140.5, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_054-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_002-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_052-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_039-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * id-->[-Infinity, Infinity, 0.0, 6.0, 1.0] ESTIMATE\n     * mock_043-->[-Infinity, Infinity, 0.0, 15.0, 1.0] ESTIMATE\n     * mock_028-->[100.0, 100.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_030-->[102.0, 102.0, 0.0, 16.0, 1.0] ESTIMATE\n     * mock_006-->[2001.0, 2001.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_007-->[2002.0, 2002.0, 0.0, 8.0, 1.0] ESTIMATE\n     * mock_017-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_018-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_020-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_021-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_022-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_023-->[0.0, 0.0, 0.0, 1.0, 1.0] ESTIMATE\n     * mock_024-->[1.0, 1.0, 0.0, 1.0, 1.0] ESTIMATE\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * xx_hash3_64-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n     * expr-->[0.0, 0.0, 0.0, 8.0, 1.0] ESTIMATE\n     * expr-->[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN\n","session_variables":"{\"character_set_connection\":\"utf8\",\"tx_isolation\":\"REPEATABLE-READ\",\"hive_temp_staging_dir\":\"/tmp/starrocks\",\"cbo_cte_reuse_rate_v2\":1.15,\"character_set_results\":\"utf8\",\"materialized_view_union_rewrite_mode\":0,\"cbo_enable_histogram_join_estimation\":true,\"thrift_plan_protocol\":\"binary\",\"enable_plan_serialize_concurrently\":true,\"connector_remote_file_async_task_size\":4,\"enable_rewrite_partition_column_minmax\":true,\"enable_iceberg_identity_column_optimize\":true,\"enable_rewrite_simple_agg_to_meta_scan\":false,\"cbo_max_reorder_node_use_greedy\":16,\"statistic_meta_collect_parallel\":10,\"enable_profile\":true,\"cbo_eq_base_type\":\"decimal\",\"enable_materialized_view_for_insert\":false,\"large_decimal_underlying_type\":\"panic\",\"sql_safe_updates\":0,\"enable_predicate_move_around\":true,\"max_or_to_union_all_join_predicates\":3,\"enable_cbo_view_based_mv_rewrite\":false,\"select_ratio_threshold\":0.15,\"query_delivery_timeout\":300,\"enable_partition_hash_join\":true,\"join_reorder_driving_table_max_element\":5,\"spill_enable_compaction\":true,\"new_planner_agg_stage\":0,\"pq_refine_factor\":1,\"hash_join_interpolate_passthrough\":false,\"connector_remote_file_async_queue_size\":1000,\"use_compute_nodes\":-1,\"collation_connection\":\"utf8_general_ci\",\"enable_force_rule_based_mv_rewrite\":true,\"group_execution_max_groups\":128,\"scan_hive_partition_num_limit\":0,\"always_collect_low_card_dict\":false,\"enable_materialized_view_plan_cache\":true,\"spill_operator_max_bytes\":1048576000,\"enable_materialized_view_agg_pushdown_rewrite\":false,\"cbo_prepare_metadata_thread_pool_size\":16,\"enable_async_profile\":true,\"enable_groupby_use_output_alias\":false,\"global_runtime_filter_wait_timeout\":20,\"forward_to_leader\":false,\"enable_prune_column_after_index_filter\":true,\"query_cache_agg_cardinality_limit\":5000000,\"cboPushDownAggregateMode_v1\":0,\"enable_query_trigger_analyze\":true,\"enable_spm_rewrite\":false,\"enable_push_down_pre_agg_with_rank\":true,\"interpolate_passthrough\":true,\"analyze_mv_v2\":\"\",\"SQL_AUTO_IS_NULL\":false,\"event_scheduler\":\"OFF\",\"enable_read_iceberg_puffin_ndv\":true,\"enable_aggregation_pipeline_share_limit\":true,\"runtime_join_filter_push_down_limit\":1024000,\"trace_log_mode\":\"command\",\"enable_scan_datacache\":true,\"big_query_log_cpu_second_threshold\":480,\"runtime_adaptive_dop_max_block_rows_per_driver_seq\":16384,\"log_rejected_record_num\":0,\"populate_datacache_mode\":\"auto\",\"cbo_push_down_distinct_below_window\":true,\"sql_mode_v2\":32,\"optimizer_materialized_view_timelimit\":1000,\"enable_cross_join\":true,\"pipeline_profile_level\":1,\"parallel_fragment_exec_instance_num\":1,\"max_scan_key_num\":-1,\"insert_timeout\":14400,\"net_read_timeout\":60,\"hive_partition_stats_sample_size\":3000,\"enable_mv_planner\":false,\"enable_materialized_view_timeseries_agg_pushdown_rewrite\":true,\"enable_collect_table_level_scan_stats\":true,\"enable_fine_grained_range_predicate\":false,\"enable_populate_datacache\":true,\"enable_connector_sink_writer_scaling\":true,\"query_debug_options\":\"\",\"low_cardinality_optimize_on_lake\":true,\"spill_encode_level\":7,\"global_runtime_filter_build_max_size\":67108864,\"cbo_push_down_groupingset_reshuffle\":true,\"cbo_push_down_aggregate_with_multi_column_stats\":true,\"enable_pushdown_or_predicate\":true,\"enable_rewrite_sum_by_associative_rule\":true,\"query_cache_hot_partition_num\":3,\"enable_plan_advisor\":true,\"enable_delta_lake_column_statistics\":false,\"metadata_collect_query_timeout\":60,\"enable_dynamic_prune_scan_range\":true,\"connector_io_tasks_per_scan_operator\":16,\"sql_quote_show_create\":true,\"enable_exchange_pass_through\":true,\"runtime_profile_report_interval\":10,\"query_cache_entry_max_bytes\":4194304,\"default_storage_engine\":\"InnoDB\",\"connector_max_split_size\":67108864,\"interleaving_group_size\":10,\"enable_plan_analyzer\":false,\"cbo_push_down_groupingset\":true,\"custom_query_id\":\"\",\"big_query_log_scan_bytes_threshold\":10737418240,\"enable_hyperscan_vec\":true,\"count_distinct_implementation\":\"default\",\"enable_datacache_async_populate_mode\":true,\"cbo_enable_predicate_subfield_path\":true,\"lower_upper_support_utf8\":false,\"spill_mode\":\"auto\",\"allow_hive_without_partition_filter\":true,\"cbo_prune_json_subfield_depth\":20,\"cbo_materialized_view_rewrite_related_mvs_limit\":16,\"hdfs_backend_selector_force_rebalance\":false,\"full_sort_max_buffered_bytes\":268435456,\"dynamic_overwrite\":false,\"catalog\":\"default_catalog\",\"wait_timeout\":28800,\"enable_dialect_downgrade\":true,\"max_buckets_per_be_to_use_balancer_assignment\":6,\"transaction_isolation\":\"REPEATABLE-READ\",\"enable_global_runtime_filter\":true,\"load_transmission_compression_type\":\"NO_COMPRESSION\",\"cbo_materialized_view_rewrite_rule_output_limit\":3,\"cbo_enable_low_cardinality_optimize\":true,\"enable_defer_project_after_topn\":true,\"scan_use_query_mem_ratio\":0.3,\"datacache_evict_probability\":100,\"enable_analyze_phase_prune_columns\":false,\"new_planner_optimize_timeout\":3000000,\"spill_partitionwise_agg_skew_elimination\":true,\"hudi_mor_force_jni_reader\":false,\"cbo_enable_greedy_join_reorder\":true,\"range_pruner_max_predicate\":100,\"low_cardinality_optimize_v2\":true,\"enable_file_metacache\":true,\"cbo_debug_alive_backend_number\":0,\"global_runtime_filter_probe_min_size\":102400,\"enable_cbo_table_prune\":false,\"cbo_materialized_view_rewrite_candidate_limit\":12,\"nested_mv_rewrite_max_level\":3,\"big_query_profile_threshold\":\"30s\",\"net_write_timeout\":60,\"spill_revocable_max_bytes\":0,\"connector_sink_target_max_file_size\":1073741824,\"disable_colocate_set\":false,\"enable_sort_aggregate\":false,\"global_runtime_filter_rpc_timeout\":400,\"connector_scan_use_query_mem_ratio\":0.3,\"full_sort_max_buffered_rows\":1073741824,\"query_timeout\":300,\"connector_io_tasks_slow_io_latency_ms\":50,\"cbo_max_reorder_node\":50,\"enable_distinct_column_bucketization\":false,\"prefer_compute_node\":false,\"group_concat_max_len\":1024,\"enable_stats_to_optimize_skew_join\":false,\"parse_tokens_limit\":3500000,\"spill_partitionwise_agg\":false,\"enable_filter_unused_columns_in_scan_stage\":true,\"cbo_push_down_distinct\":\"global\",\"enable_spill_to_remote_storage\":false,\"enable_materialized_view_transparent_union_rewrite\":true,\"auto_increment_increment\":1,\"spill_partitionwise_agg_partition_num\":32,\"enable_group_execution\":true,\"enable_partition_bucket_optimize\":false,\"enable_subfield_no_copy\":true,\"jit_level\":1,\"enable_runtime_adaptive_dop\":false,\"cbo_cte_max_limit\":10,\"connector_sink_compression_codec\":\"uncompressed\",\"storage_engine\":\"olap\",\"enable_rewrite_unnest_bitmap_to_array\":true,\"spill_operator_min_bytes\":52428800,\"enable_optimize_skew_join_by_query_rewrite\":true,\"tx_visible_wait_timeout\":10,\"enable_materialized_view_view_delta_rewrite\":true,\"cbo_max_reorder_node_use_exhaustive\":4,\"enable_sql_digest\":false,\"enable_spill\":false,\"full_sort_late_materialization_v2\":true,\"join_implementation_mode_v2\":\"auto\",\"enable_connector_split_io_tasks\":true,\"sql_select_limit\":9223372036854775807,\"enable_materialized_view_rewrite\":true,\"materialized_view_subuqery_text_match_max_count\":4,\"hdfs_backend_selector_hash_algorithm\":\"consistent\",\"enable_expr_prune_partition\":true,\"plan_mode\":\"auto\",\"enable_topn_runtime_filter\":true,\"enable_join_reorder_before_deduplicate\":false,\"runtime_adaptive_dop_max_output_amplification_factor\":0,\"skew_join_rand_range\":1000,\"back_pressure_throttle_time_upper_bound\":300,\"skew_join_data_skew_threshold\":0.2,\"innodb_read_only\":true,\"spill_mem_limit_threshold\":0.8,\"disable_generated_column_rewrite\":false,\"enable_phased_scheduler\":false,\"enable_pipeline_event_scheduler\":true,\"cbo_cte_force_reuse_node_count\":1000,\"transaction_read_only\":false,\"enable_partition_level_cardinality_estimation\":true,\"enable_color_explain_output\":true,\"character_set_server\":\"utf8\",\"cbo_use_nth_exec_plan\":0,\"io_tasks_per_scan_operator\":4,\"parallel_exchange_instance_num\":-1,\"enable_pipeline_level_shuffle\":true,\"partial_update_mode\":\"auto\",\"cbo_cte_reuse\":true,\"cbo_use_correlated_join_estimate\":true,\"agg_in_filter_limit\":1024,\"enable_insert_strict\":true,\"enable_connector_adaptive_io_tasks\":true,\"enable_hive_metadata_cache_with_insert\":false,\"spill_rand_ratio\":0.1,\"enable_datacache_io_adaptor\":true,\"enable_count_star_optimization\":true,\"enable_iceberg_column_statistics\":false,\"materialized_view_max_relation_mapping_size\":10,\"global_runtime_filter_build_min_size\":131072,\"enable_view_based_mv_rewrite\":true,\"query_excluding_mv_names\":\"\",\"semi_join_deduplicat_mode\":0,\"enable_ukfk_opt\":false,\"enable_adaptive_sink_dop\":true,\"enable_ukfk_join_reorder\":false,\"consistent_hash_virtual_number\":256,\"warehouse\":\"default_warehouse\",\"load_mem_limit\":0,\"spill_storage_volume\":\"\",\"column_view_concat_rows_limit\":-1,\"runtime_filter_early_return_selectivity\":0.05,\"enable_local_shuffle_agg\":true,\"disable_function_fold_constants\":false,\"cbo_use_correlated_predicate_estimate\":true,\"enable_query_queue\":true,\"cbo_push_down_distinct_limit\":4096,\"enable_connector_sink_global_shuffle\":true,\"collation_database\":\"utf8_general_ci\",\"spill_mem_table_size\":104857600,\"enable_gin_filter\":true,\"follower_query_forward_mode\":\"\",\"orc_use_column_names\":false,\"cbo_use_lock_db\":false,\"enable_strict_order_by\":true,\"cbo_enable_intersect_add_distinct\":true,\"enable_metadata_profile\":false,\"enable_rewrite_bitmap_union_to_bitamp_agg\":true,\"enable_array_distinct_after_agg_opt\":true,\"resource_group\":\"\",\"cbo_max_reorder_node_use_dp\":10,\"enable_result_sink_accumulate\":true,\"cbo_push_down_aggregate_on_broadcast_join_row_count_limit\":250000,\"enable_hive_column_stats\":true,\"count_distinct_column_buckets\":1024,\"cross_join_cost_penalty\":1000000,\"connector_sink_spill_mem_limit_threshold\":0.5,\"window_partition_mode\":1,\"enable_tablet_internal_parallel_v2\":true,\"enable_predicate_expr_reuse\":true,\"enable_incremental_mv\":false,\"cbo_push_down_topn_limit\":1000,\"parallel_merge_late_materialization_mode\":\"auto\",\"max_pipeline_dop\":64,\"broadcast_right_table_scale_factor\":10,\"materialized_view_rewrite_mode\":\"DEFAULT\",\"enable_write_hive_external_table\":false,\"enable_simplify_case_when\":true,\"enable_multicolumn_global_runtime_filter_v2\":true,\"enable_connector_incremental_scan_ranges\":true,\"enable_scan_predicate_expr_reuse\":true,\"div_precision_increment\":4,\"phased_scheduler_max_concurrency\":2,\"enable_short_circuit\":false,\"connector_incremental_scan_ranges_size\":500,\"column_view_concat_bytes_limit\":4294967296,\"prefer_cte_rewrite\":false,\"hdfs_backend_selector_scan_range_shuffle\":false,\"streaming_preaggregation_mode\":\"auto\",\"enable_join_runtime_filter_push_down\":true,\"profile_timeout\":10,\"cbo_push_down_aggregate\":\"global\",\"enable_query_dump\":false,\"max_spill_read_buffer_bytes_per_driver\":16777216,\"enable_prune_complex_types\":true,\"query_cache_type\":0,\"max_parallel_scan_instance_num\":-1,\"query_cache_entry_max_rows\":409600,\"enable_paimon_column_statistics\":false,\"disable_spill_to_local_disk\":false,\"enable_materialized_view_union_rewrite\":true,\"enable_constant_execute_in_fe\":false,\"scan_or_to_union_threshold\":50000000,\"enable_materialized_view_rewrite_partition_compensate\":true,\"spm_rewrite_timeout_ms\":1000,\"enable_partition_column_value_only_optimization\":true,\"scan_olap_partition_num_limit\":0,\"array_low_cardinality_optimize\":true,\"enable_exchange_perf\":false,\"enable_prepare_stmt\":true,\"workgroup_id\":0,\"enable_pipeline_level_multi_partitioned_rf\":false,\"enable_file_pagecache\":true,\"enable_parquet_reader_bloom_filter\":true,\"enable_rewrite_groupingsets_to_union_all\":false,\"spill_enable_direct_io\":false,\"enable_parquet_reader_page_index\":true,\"transmission_compression_type\":\"AUTO\",\"interactive_timeout\":3600,\"use_page_cache\":true,\"enable_execution_only\":false,\"collation_server\":\"utf8_general_ci\",\"cbo_decimal_cast_string_strict\":true,\"enable_nested_loop_join\":true,\"tablet_internal_parallel_mode\":\"auto\",\"enable_pipeline\":true,\"enable_lambda_pushdown\":true,\"enable_query_debug_trace\":false,\"like_predicate_consolidate_min\":2,\"enable_lake_tablet_internal_parallel\":false,\"enable_show_all_variables\":true,\"enable_query_tablet_affinity\":false,\"transmission_encode_level\":7,\"query_including_mv_names\":\"\",\"enable_load_profile\":false,\"always_collect_low_card_dict_on_lake\":true,\"enable_rewrite_simple_agg_to_hdfs_scan\":false,\"enable_plan_validation\":true,\"global_runtime_filter_rpc_http_min_size\":67108864,\"connector_huge_file_size\":536870912,\"insert_local_shuffle_for_window_pre_agg\":true,\"enable_outer_join_reorder\":true,\"force_schedule_local\":false,\"enable_agg_spill_preaggregation\":true,\"enable_rbo_table_prune\":false,\"spillable_operator_mask\":-1,\"enable_wait_dependent_event\":false,\"rpc_http_min_size\":2147482624,\"default_tmp_storage_engine\":\"InnoDB\",\"enable_plan_advisor_blacklist\":true,\"topn_filter_back_pressure_mode\":0,\"scan_or_to_union_limit\":4,\"enable_parallel_merge\":true,\"skew_join_use_mcv_count\":5,\"skip_page_cache\":false,\"cbo_derive_join_is_null_predicate\":true,\"enable_materialized_view_text_match_rewrite\":true,\"cbo_prune_shuffle_column_rate\":0.1,\"hash_join_push_down_right_table\":true,\"max_ukfk_join_reorder_scale_ratio\":100,\"pipeline_sink_dop\":0,\"historical_nodes_min_update_interval\":600,\"broadcast_row_limit\":15000000,\"enable_prune_iceberg_manifest\":true,\"exec_mem_limit\":2147483648,\"query_cache_force_populate\":false,\"enable_connector_async_list_partitions\":false,\"enable_rewrite_or_to_union_all_join\":false,\"computation_fragment_scheduling_policy\":\"COMPUTE_NODES_ONLY\",\"runtime_filter_on_exchange_node\":false,\"disable_join_reorder\":false,\"enable_evaluate_schema_scan_rule\":true,\"net_buffer_length\":16384,\"cbo_prune_subfield\":true,\"enable_optimize_skew_join_by_broadcast_skew_values\":false,\"enable_multi_cast_limit_push_down\":true,\"enable_big_query_log\":true,\"cbo_push_down_aggregate_on_broadcast_join\":true,\"enable_spill_buffer_read\":true,\"group_execution_min_scan_rows\":5000000,\"enable_min_max_optimization\":true,\"runtime_filter_scan_wait_time\":20,\"enable_count_distinct_rewrite_by_hll_bitmap\":true,\"enable_sync_materialized_view_rewrite\":true,\"enable_strict_type\":false,\"enable_table_prune_on_update\":false,\"chunk_size\":4096,\"k_factor\":1,\"global_runtime_filter_probe_min_selectivity\":0.5,\"query_mem_limit\":0,\"enable_materialized_view_single_table_view_delta_rewrite\":false,\"cbo_prune_json_subfield\":false,\"enable_prune_complex_types_in_unnest\":true,\"sql_dialect\":\"StarRocks\",\"enable_per_bucket_optimize\":true,\"enable_eliminate_agg\":true,\"big_query_log_scan_rows_threshold\":1000000000,\"character_set_client\":\"utf8\",\"autocommit\":true,\"enable_read_iceberg_equality_delete_with_partition_evolution\":false,\"enable_column_expr_predicate\":true,\"skip_local_disk_cache\":false,\"max_ukfk_join_reorder_fk_rows\":100000000,\"enable_show_predicate_tree_in_profile\":false,\"enable_join_runtime_bitset_filter\":true,\"cbo_enable_dp_join_reorder\":true,\"materialized_view_join_same_table_permutation_limit\":5,\"spill_mem_table_num\":2,\"enable_materialized_view_rewrite_greedy_mode\":false,\"pipeline_dop\":0,\"single_node_exec_plan\":false,\"enable_materialized_view_concurrent_prepare\":true,\"statistic_collect_parallel\":1,\"ann_params\":\"\",\"disable_colocate_join\":false,\"max_pushdown_conditions_per_column\":-1,\"back_pressure_back_rounds\":3,\"spill_hash_join_probe_op_max_bytes\":2147483648,\"default_table_compression\":\"lz4_frame\",\"choose_execute_instances_mode\":\"LOCALITY\",\"cbo_reorder_threshold_use_exhaustive\":6,\"enable_predicate_reorder\":false,\"enable_connector_sink_spill\":true,\"enable_datacache_sharing\":true,\"enable_query_cache\":false,\"group_execution_group_scale\":64,\"enable_inner_join_to_semi\":true,\"max_allowed_packet\":33554432,\"enable_materialized_view_multi_stages_rewrite\":true,\"enable_parallel_prepare_metadata\":false,\"datacache_sharing_work_period\":600,\"time_zone\":\"Asia/Shanghai\",\"insert_max_filter_ratio\":0,\"enable_shared_scan\":false,\"join_late_materialization\":false,\"audit_execute_stmt\":false,\"cbo_derive_range_join_predicate\":false,\"allow_default_partition\":false,\"cbo_use_histogram_evaluate_list_partition\":false,\"paimon_force_jni_reader\":false}","be_number":1,"be_core_stat":{"numOfHardwareCoresPerBe":"{\"10002\":104}","cachedAvgNumOfHardwareCores":104},"exception":[],"version":"UNKNOWN","commit_version":"UNKNOWN"}