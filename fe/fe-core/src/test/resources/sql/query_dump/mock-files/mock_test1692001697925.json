{"statement":"WITH tbl_mock_285 (mock_015, mock_283, mock_284) AS (SELECT tbl_mock_001.mock_015, sum(tbl_mock_001.mock_010) AS mock_283, sum((tbl_mock_036.mock_045 + tbl_mock_036.mock_060) + tbl_mock_036.mock_062) AS mock_284\nFROM db_mock_000.tbl_mock_001 , db_mock_000.tbl_mock_036 \nWHERE (tbl_mock_001.mock_015 \u003d tbl_mock_036.mock_040) AND (tbl_mock_001.mock_022 \u003d tbl_mock_036.mock_042)\nGROUP BY tbl_mock_001.mock_015\nHAVING (sum(tbl_mock_001.mock_010)) \u003e (2 * (sum((tbl_mock_036.mock_045 + tbl_mock_036.mock_060) + tbl_mock_036.mock_062)))) , tbl_mock_293 (mock_264, mock_287, mock_265, mock_266, mock_267, mock_268, mock_269, mock_270, mock_271, mock_272, mock_273, mock_274, mock_275, mock_288, mock_289, mock_276, mock_290, mock_291, mock_292) AS (SELECT tbl_mock_241.mock_258 AS mock_264, tbl_mock_241.mock_254 AS mock_287, tbl_mock_138.mock_160 AS mock_265, tbl_mock_138.mock_167 AS mock_266, tbl_mock_301.mock_233 AS mock_267, tbl_mock_301.mock_232 AS mock_268, tbl_mock_301.mock_226 AS mock_269, tbl_mock_301.mock_236 AS mock_270, tbl_mock_302.mock_233 AS mock_271, tbl_mock_302.mock_232 AS mock_272, tbl_mock_302.mock_226 AS mock_273, tbl_mock_302.mock_236 AS mock_274, tbl_mock_294.mock_137 AS mock_275, tbl_mock_295.mock_137 AS mock_288, tbl_mock_296.mock_137 AS mock_289, count(*) AS mock_276, sum(tbl_mock_064.mock_087) AS mock_290, sum(tbl_mock_064.mock_076) AS mock_291, sum(tbl_mock_064.mock_067) AS mock_292\nFROM db_mock_000.tbl_mock_064 , db_mock_000.tbl_mock_088  , tbl_mock_285  , db_mock_000.tbl_mock_109 AS tbl_mock_294  , db_mock_000.tbl_mock_109 AS tbl_mock_295  , db_mock_000.tbl_mock_109 AS tbl_mock_296  , db_mock_000.tbl_mock_138  , db_mock_000.tbl_mock_168  , db_mock_000.tbl_mock_187 AS tbl_mock_297  , db_mock_000.tbl_mock_187 AS tbl_mock_298  , db_mock_000.tbl_mock_197  , db_mock_000.tbl_mock_217 AS tbl_mock_299  , db_mock_000.tbl_mock_217 AS tbl_mock_300  , db_mock_000.tbl_mock_223 AS tbl_mock_301  , db_mock_000.tbl_mock_223 AS tbl_mock_302  , db_mock_000.tbl_mock_237 AS tbl_mock_303  , db_mock_000.tbl_mock_237 AS tbl_mock_304  , db_mock_000.tbl_mock_241 \nWHERE (((((((((((((((((((((tbl_mock_064.mock_085 \u003d tbl_mock_138.mock_161) AND (tbl_mock_064.mock_083 \u003d tbl_mock_294.mock_117)) AND (tbl_mock_064.mock_068 \u003d tbl_mock_168.mock_177)) AND (tbl_mock_064.mock_066 \u003d tbl_mock_297.mock_189)) AND (tbl_mock_064.mock_074 \u003d tbl_mock_299.mock_219)) AND (tbl_mock_064.mock_065 \u003d tbl_mock_301.mock_225)) AND (tbl_mock_064.mock_075 \u003d tbl_mock_241.mock_254)) AND (tbl_mock_064.mock_075 \u003d tbl_mock_088.mock_094)) AND (tbl_mock_064.mock_086 \u003d tbl_mock_088.mock_108)) AND (tbl_mock_064.mock_075 \u003d tbl_mock_285.mock_015)) AND (tbl_mock_168.mock_174 \u003d tbl_mock_298.mock_189)) AND (tbl_mock_168.mock_175 \u003d tbl_mock_300.mock_219)) AND (tbl_mock_168.mock_173 \u003d tbl_mock_302.mock_225)) AND (tbl_mock_168.mock_180 \u003d tbl_mock_295.mock_117)) AND (tbl_mock_168.mock_181 \u003d tbl_mock_296.mock_117)) AND (tbl_mock_064.mock_080 \u003d tbl_mock_197.mock_213)) AND (tbl_mock_299.mock_221 \u003d tbl_mock_303.mock_238)) AND (tbl_mock_300.mock_221 \u003d tbl_mock_304.mock_238)) AND (tbl_mock_297.mock_195 !\u003d tbl_mock_298.mock_195)) AND (tbl_mock_241.mock_248 IN (\u0027purple\u0027, \u0027burlywood\u0027, \u0027indian\u0027, \u0027spring\u0027, \u0027floral\u0027, \u0027medium\u0027))) AND (tbl_mock_241.mock_250 BETWEEN 64 AND (64 + 10))) AND (tbl_mock_241.mock_250 BETWEEN (64 + 1) AND (64 + 15))\nGROUP BY tbl_mock_241.mock_258, tbl_mock_241.mock_254, tbl_mock_138.mock_160, tbl_mock_138.mock_167, tbl_mock_301.mock_233, tbl_mock_301.mock_232, tbl_mock_301.mock_226, tbl_mock_301.mock_236, tbl_mock_302.mock_233, tbl_mock_302.mock_232, tbl_mock_302.mock_226, tbl_mock_302.mock_236, tbl_mock_294.mock_137, tbl_mock_295.mock_137, tbl_mock_296.mock_137) SELECT tbl_mock_305.mock_264, tbl_mock_305.mock_265, tbl_mock_305.mock_266, tbl_mock_305.mock_267, tbl_mock_305.mock_268, tbl_mock_305.mock_269, tbl_mock_305.mock_270, tbl_mock_305.mock_271, tbl_mock_305.mock_272, tbl_mock_305.mock_273, tbl_mock_305.mock_274, tbl_mock_305.mock_275, tbl_mock_305.mock_276, tbl_mock_305.mock_290 AS mock_277, tbl_mock_305.mock_291 AS mock_278, tbl_mock_305.mock_292 AS mock_279, tbl_mock_306.mock_290 AS mock_280, tbl_mock_306.mock_291 AS mock_281, tbl_mock_306.mock_292 AS mock_282, tbl_mock_306.mock_275, tbl_mock_306.mock_276\nFROM tbl_mock_293 AS tbl_mock_305 , tbl_mock_293 AS tbl_mock_306 \nWHERE (((((tbl_mock_305.mock_287 \u003d tbl_mock_306.mock_287) AND (tbl_mock_305.mock_275 \u003d 1999)) AND (tbl_mock_306.mock_275 \u003d (1999 + 1))) AND (tbl_mock_306.mock_276 \u003c\u003d tbl_mock_305.mock_276)) AND (tbl_mock_305.mock_265 \u003d tbl_mock_306.mock_265)) AND (tbl_mock_305.mock_266 \u003d tbl_mock_306.mock_266) ORDER BY tbl_mock_305.mock_264 ASC, tbl_mock_305.mock_265 ASC, tbl_mock_306.mock_276 ASC, tbl_mock_305.mock_290 ASC, tbl_mock_306.mock_290 ASC ","table_meta":{"db_mock_000.tbl_mock_001":"CREATE TABLE db_mock_000.tbl_mock_001 (\nmock_015 int(11) NOT NULL ,\nmock_022 int(11) NOT NULL ,\nmock_032 int(11) ,\nmock_033 int(11) ,\nmock_029 int(11) ,\nmock_004 int(11) ,\nmock_003 int(11) ,\nmock_005 int(11) ,\nmock_002 int(11) ,\nmock_028 int(11) ,\nmock_027 int(11) ,\nmock_030 int(11) ,\nmock_026 int(11) ,\nmock_006 int(11) ,\nmock_007 int(11) ,\nmock_031 int(11) ,\nmock_034 int(11) ,\nmock_023 int(11) ,\nmock_024 int(11) ,\nmock_035 decimal64(7, 2) ,\nmock_016 decimal64(7, 2) ,\nmock_025 decimal64(7, 2) ,\nmock_009 decimal64(7, 2) ,\nmock_011 decimal64(7, 2) ,\nmock_014 decimal64(7, 2) ,\nmock_010 decimal64(7, 2) ,\nmock_013 decimal64(7, 2) ,\nmock_008 decimal64(7, 2) ,\nmock_012 decimal64(7, 2) ,\nmock_017 decimal64(7, 2) ,\nmock_020 decimal64(7, 2) ,\nmock_018 decimal64(7, 2) ,\nmock_019 decimal64(7, 2) ,\nmock_021 decimal64(7, 2) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_015, mock_022)\nDISTRIBUTED BY HASH(mock_015, mock_022) BUCKETS 192 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_036":"CREATE TABLE db_mock_000.tbl_mock_036 (\nmock_040 int(11) NOT NULL ,\nmock_042 int(11) NOT NULL ,\nmock_054 int(11) ,\nmock_055 int(11) ,\nmock_047 int(11) ,\nmock_046 int(11) ,\nmock_048 int(11) ,\nmock_044 int(11) ,\nmock_058 int(11) ,\nmock_057 int(11) ,\nmock_059 int(11) ,\nmock_056 int(11) ,\nmock_037 int(11) ,\nmock_038 int(11) ,\nmock_061 int(11) ,\nmock_063 int(11) ,\nmock_043 int(11) ,\nmock_051 int(11) ,\nmock_049 decimal64(7, 2) ,\nmock_053 decimal64(7, 2) ,\nmock_050 decimal64(7, 2) ,\nmock_039 decimal64(7, 2) ,\nmock_052 decimal64(7, 2) ,\nmock_045 decimal64(7, 2) ,\nmock_060 decimal64(7, 2) ,\nmock_062 decimal64(7, 2) ,\nmock_041 decimal64(7, 2) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_040, mock_042)\nDISTRIBUTED BY HASH(mock_040, mock_042) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_064":"CREATE TABLE db_mock_000.tbl_mock_064 (\nmock_075 int(11) NOT NULL ,\nmock_086 int(11) NOT NULL ,\nmock_083 int(11) ,\nmock_084 int(11) ,\nmock_068 int(11) ,\nmock_066 int(11) ,\nmock_074 int(11) ,\nmock_065 int(11) ,\nmock_085 int(11) ,\nmock_080 int(11) ,\nmock_081 int(11) ,\nmock_087 decimal64(7, 2) ,\nmock_076 decimal64(7, 2) ,\nmock_082 decimal64(7, 2) ,\nmock_069 decimal64(7, 2) ,\nmock_071 decimal64(7, 2) ,\nmock_073 decimal64(7, 2) ,\nmock_070 decimal64(7, 2) ,\nmock_072 decimal64(7, 2) ,\nmock_067 decimal64(7, 2) ,\nmock_077 decimal64(7, 2) ,\nmock_078 decimal64(7, 2) ,\nmock_079 decimal64(7, 2) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_075, mock_086)\nDISTRIBUTED BY HASH(mock_075, mock_086) BUCKETS 192 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_088":"CREATE TABLE db_mock_000.tbl_mock_088 (\nmock_094 int(11) NOT NULL ,\nmock_108 int(11) NOT NULL ,\nmock_104 int(11) ,\nmock_103 int(11) ,\nmock_091 int(11) ,\nmock_090 int(11) ,\nmock_093 int(11) ,\nmock_089 int(11) ,\nmock_107 int(11) ,\nmock_096 int(11) ,\nmock_100 int(11) ,\nmock_098 decimal64(7, 2) ,\nmock_102 decimal64(7, 2) ,\nmock_099 decimal64(7, 2) ,\nmock_092 decimal64(7, 2) ,\nmock_101 decimal64(7, 2) ,\nmock_097 decimal64(7, 2) ,\nmock_105 decimal64(7, 2) ,\nmock_106 decimal64(7, 2) ,\nmock_095 decimal64(7, 2) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_094, mock_108)\nDISTRIBUTED BY HASH(mock_094, mock_108) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_109":"CREATE TABLE db_mock_000.tbl_mock_109 (\nmock_117 int(11) NOT NULL ,\nmock_116 char(16) NOT NULL ,\nmock_115 date ,\nmock_128 int(11) ,\nmock_135 int(11) ,\nmock_132 int(11) ,\nmock_137 int(11) ,\nmock_120 int(11) ,\nmock_129 int(11) ,\nmock_119 int(11) ,\nmock_130 int(11) ,\nmock_125 int(11) ,\nmock_123 int(11) ,\nmock_124 int(11) ,\nmock_118 char(9) ,\nmock_131 char(6) ,\nmock_126 char(1) ,\nmock_136 char(1) ,\nmock_122 char(1) ,\nmock_121 int(11) ,\nmock_127 int(11) ,\nmock_134 int(11) ,\nmock_133 int(11) ,\nmock_110 char(1) ,\nmock_113 char(1) ,\nmock_111 char(1) ,\nmock_112 char(1) ,\nmock_114 char(1) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_117)\nDISTRIBUTED BY HASH(mock_117) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_138":"CREATE TABLE db_mock_000.tbl_mock_138 (\nmock_161 int(11) NOT NULL ,\nmock_159 char(16) NOT NULL ,\nmock_157 date ,\nmock_156 date ,\nmock_140 int(11) ,\nmock_160 varchar(50) ,\nmock_155 int(11) ,\nmock_147 int(11) ,\nmock_150 char(20) ,\nmock_151 varchar(40) ,\nmock_153 int(11) ,\nmock_148 varchar(100) ,\nmock_152 varchar(100) ,\nmock_154 varchar(40) ,\nmock_145 int(11) ,\nmock_146 varchar(50) ,\nmock_141 int(11) ,\nmock_142 varchar(50) ,\nmock_163 varchar(10) ,\nmock_162 varchar(60) ,\nmock_164 char(15) ,\nmock_165 char(10) ,\nmock_139 varchar(60) ,\nmock_144 varchar(30) ,\nmock_158 char(2) ,\nmock_167 char(10) ,\nmock_143 varchar(20) ,\nmock_149 decimal64(5, 2) ,\nmock_166 decimal64(5, 2) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_161)\nDISTRIBUTED BY HASH(mock_161) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_168":"CREATE TABLE db_mock_000.tbl_mock_168 (\nmock_177 int(11) NOT NULL ,\nmock_176 char(16) NOT NULL ,\nmock_174 int(11) ,\nmock_175 int(11) ,\nmock_173 int(11) ,\nmock_181 int(11) ,\nmock_180 int(11) ,\nmock_186 char(10) ,\nmock_179 char(20) ,\nmock_182 char(30) ,\nmock_185 char(1) ,\nmock_170 int(11) ,\nmock_171 int(11) ,\nmock_172 int(11) ,\nmock_169 varchar(20) ,\nmock_184 char(13) ,\nmock_178 char(50) ,\nmock_183 char(10) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_177)\nDISTRIBUTED BY HASH(mock_177) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_187":"CREATE TABLE db_mock_000.tbl_mock_187 (\nmock_189 int(11) NOT NULL ,\nmock_194 char(1) ,\nmock_195 char(1) ,\nmock_193 char(20) ,\nmock_196 int(11) ,\nmock_188 char(10) ,\nmock_191 int(11) ,\nmock_192 int(11) ,\nmock_190 int(11) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_189)\nDISTRIBUTED BY HASH(mock_189) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_197":"CREATE TABLE db_mock_000.tbl_mock_197 (\nmock_213 int(11) NOT NULL ,\nmock_211 char(16) NOT NULL ,\nmock_216 int(11) ,\nmock_209 int(11) ,\nmock_210 int(11) ,\nmock_207 decimal64(15, 2) ,\nmock_215 int(11) ,\nmock_212 char(50) ,\nmock_201 char(1) ,\nmock_202 char(1) ,\nmock_198 char(1) ,\nmock_206 char(1) ,\nmock_205 char(1) ,\nmock_204 char(1) ,\nmock_203 char(1) ,\nmock_199 char(1) ,\nmock_200 varchar(100) ,\nmock_214 char(15) ,\nmock_208 char(1) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_213)\nDISTRIBUTED BY HASH(mock_213) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_217":"CREATE TABLE db_mock_000.tbl_mock_217 (\nmock_219 int(11) NOT NULL ,\nmock_221 int(11) ,\nmock_218 char(15) ,\nmock_220 int(11) ,\nmock_222 int(11) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_219)\nDISTRIBUTED BY HASH(mock_219) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_223":"CREATE TABLE db_mock_000.tbl_mock_223 (\nmock_225 int(11) NOT NULL ,\nmock_224 char(16) NOT NULL ,\nmock_233 char(10) ,\nmock_232 varchar(60) ,\nmock_234 char(15) ,\nmock_235 char(10) ,\nmock_226 varchar(60) ,\nmock_228 varchar(30) ,\nmock_231 char(2) ,\nmock_236 char(10) ,\nmock_227 varchar(20) ,\nmock_229 decimal64(5, 2) ,\nmock_230 char(20) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_225)\nDISTRIBUTED BY HASH(mock_225) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_237":"CREATE TABLE db_mock_000.tbl_mock_237 (\nmock_238 int(11) NOT NULL ,\nmock_239 int(11) ,\nmock_240 int(11) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_238)\nDISTRIBUTED BY HASH(mock_238) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);","db_mock_000.tbl_mock_241":"CREATE TABLE db_mock_000.tbl_mock_241 (\nmock_254 int(11) NOT NULL ,\nmock_253 char(16) NOT NULL ,\nmock_260 date ,\nmock_259 date ,\nmock_252 varchar(200) ,\nmock_250 decimal64(7, 2) ,\nmock_263 decimal64(7, 2) ,\nmock_243 int(11) ,\nmock_242 char(50) ,\nmock_247 int(11) ,\nmock_246 char(50) ,\nmock_245 int(11) ,\nmock_244 char(50) ,\nmock_257 int(11) ,\nmock_256 char(50) ,\nmock_261 char(20) ,\nmock_251 char(20) ,\nmock_248 char(20) ,\nmock_262 char(10) ,\nmock_249 char(10) ,\nmock_255 int(11) ,\nmock_258 char(50) \n) ENGINE\u003d OLAP\nDUPLICATE KEY(mock_254)\nDISTRIBUTED BY HASH(mock_254) BUCKETS 5 \nPROPERTIES (\n\"replication_num\" \u003d \"1\"\n);"},"table_row_count":{},"column_statistics":{},"session_variables":"{\"partial_update_mode\":\"auto\",\"cbo_cte_reuse\":true,\"character_set_connection\":\"utf8\",\"cbo_use_correlated_join_estimate\":true,\"enable_insert_strict\":true,\"enable_connector_adaptive_io_tasks\":true,\"tx_isolation\":\"REPEATABLE-READ\",\"enable_hive_metadata_cache_with_insert\":false,\"cbo_cte_reuse_rate_v2\":1.15,\"character_set_results\":\"utf8\",\"enable_count_star_optimization\":true,\"query_excluding_mv_names\":\"\",\"enable_rewrite_simple_agg_to_meta_scan\":false,\"enable_adaptive_sink_dop\":true,\"consistent_hash_virtual_number\":32,\"enable_profile\":false,\"load_mem_limit\":0,\"sql_safe_updates\":0,\"runtime_filter_early_return_selectivity\":0.05,\"enable_local_shuffle_agg\":true,\"disable_function_fold_constants\":false,\"select_ratio_threshold\":0.15,\"query_delivery_timeout\":300,\"collation_database\":\"utf8_general_ci\",\"spill_mem_table_size\":104857600,\"new_planner_agg_stage\":0,\"use_compute_nodes\":-1,\"collation_connection\":\"utf8_general_ci\",\"resource_group\":\"\",\"profile_limit_fold\":true,\"spill_operator_max_bytes\":1048576000,\"cbo_max_reorder_node_use_dp\":10,\"enable_hive_column_stats\":true,\"enable_groupby_use_output_alias\":false,\"forward_to_leader\":false,\"count_distinct_column_buckets\":1024,\"query_cache_agg_cardinality_limit\":5000000,\"cboPushDownAggregateMode_v1\":-1,\"window_partition_mode\":1,\"enable_tablet_internal_parallel_v2\":true,\"interpolate_passthrough\":true,\"enable_incremental_mv\":false,\"SQL_AUTO_IS_NULL\":false,\"event_scheduler\":\"OFF\",\"max_pipeline_dop\":64,\"broadcast_right_table_scale_factor\":10,\"materialized_view_rewrite_mode\":\"DEFAULT\",\"enable_simplify_case_when\":true,\"runtime_join_filter_push_down_limit\":1024000,\"big_query_log_cpu_second_threshold\":480,\"div_precision_increment\":4,\"runtime_adaptive_dop_max_block_rows_per_driver_seq\":16384,\"log_rejected_record_num\":0,\"cbo_push_down_distinct_below_window\":true,\"sql_mode_v2\":32,\"prefer_cte_rewrite\":false,\"hdfs_backend_selector_scan_range_shuffle\":false,\"pipeline_profile_level\":1,\"parallel_fragment_exec_instance_num\":1,\"max_scan_key_num\":-1,\"net_read_timeout\":60,\"streaming_preaggregation_mode\":\"auto\",\"hive_partition_stats_sample_size\":3000,\"enable_mv_planner\":false,\"profile_timeout\":2,\"cbo_push_down_aggregate\":\"global\",\"spill_encode_level\":7,\"enable_query_dump\":false,\"global_runtime_filter_build_max_size\":67108864,\"enable_rewrite_sum_by_associative_rule\":true,\"query_cache_hot_partition_num\":3,\"enable_prune_complex_types\":true,\"query_cache_type\":0,\"max_parallel_scan_instance_num\":-1,\"query_cache_entry_max_rows\":409600,\"enable_mv_optimizer_trace_log\":false,\"connector_io_tasks_per_scan_operator\":16,\"enable_materialized_view_union_rewrite\":true,\"sql_quote_show_create\":true,\"scan_or_to_union_threshold\":50000000,\"enable_exchange_pass_through\":true,\"runtime_profile_report_interval\":10,\"query_cache_entry_max_bytes\":4194304,\"enable_exchange_perf\":false,\"workgroup_id\":0,\"enable_rewrite_groupingsets_to_union_all\":false,\"transmission_compression_type\":\"NO_COMPRESSION\",\"interactive_timeout\":3600,\"use_page_cache\":true,\"big_query_log_scan_bytes_threshold\":10737418240,\"collation_server\":\"utf8_general_ci\",\"tablet_internal_parallel_mode\":\"auto\",\"enable_pipeline\":true,\"spill_mode\":\"auto\",\"enable_query_debug_trace\":false,\"enable_show_all_variables\":false,\"full_sort_max_buffered_bytes\":16777216,\"wait_timeout\":28800,\"transmission_encode_level\":7,\"query_including_mv_names\":\"\",\"transaction_isolation\":\"REPEATABLE-READ\",\"enable_global_runtime_filter\":true,\"enable_load_profile\":false,\"enable_plan_validation\":true,\"load_transmission_compression_type\":\"NO_COMPRESSION\",\"cbo_enable_low_cardinality_optimize\":true,\"scan_use_query_mem_ratio\":0.3,\"new_planner_optimize_timeout\":3000,\"enable_outer_join_reorder\":true,\"force_schedule_local\":false,\"hudi_mor_force_jni_reader\":false,\"cbo_enable_greedy_join_reorder\":true,\"range_pruner_max_predicate\":100,\"enable_rbo_table_prune\":false,\"spillable_operator_mask\":-1,\"rpc_http_min_size\":2147482624,\"cbo_debug_alive_backend_number\":0,\"global_runtime_filter_probe_min_size\":102400,\"scan_or_to_union_limit\":4,\"enable_cbo_table_prune\":false,\"enable_parallel_merge\":true,\"nested_mv_rewrite_max_level\":3,\"net_write_timeout\":60,\"cbo_prune_shuffle_column_rate\":0.1,\"spill_revocable_max_bytes\":0,\"hash_join_push_down_right_table\":true,\"pipeline_sink_dop\":0,\"broadcast_row_limit\":15000000,\"enable_populate_block_cache\":true,\"exec_mem_limit\":2147483648,\"enable_sort_aggregate\":false,\"query_cache_force_populate\":false,\"runtime_filter_on_exchange_node\":false,\"disable_join_reorder\":false,\"enable_rule_based_materialized_view_rewrite\":true,\"connector_scan_use_query_mem_ratio\":0.3,\"net_buffer_length\":16384,\"cbo_prune_subfield\":true,\"full_sort_max_buffered_rows\":1024000,\"query_timeout\":300,\"connector_io_tasks_slow_io_latency_ms\":50,\"cbo_max_reorder_node\":50,\"enable_distinct_column_bucketization\":false,\"enable_big_query_log\":true,\"analyze_mv\":\"sample\",\"runtime_filter_scan_wait_time\":20,\"enable_sync_materialized_view_rewrite\":true,\"prefer_compute_node\":false,\"enable_strict_type\":false,\"group_concat_max_len\":65535,\"parse_tokens_limit\":3500000,\"chunk_size\":4096,\"global_runtime_filter_probe_min_selectivity\":0.5,\"query_mem_limit\":0,\"enable_filter_unused_columns_in_scan_stage\":true,\"enable_scan_block_cache\":false,\"enable_materialized_view_single_table_view_delta_rewrite\":false,\"auto_increment_increment\":1,\"sql_dialect\":\"StarRocks\",\"big_query_log_scan_rows_threshold\":1000000000,\"character_set_client\":\"utf8\",\"autocommit\":true,\"enable_column_expr_predicate\":true,\"enable_runtime_adaptive_dop\":false,\"cbo_cte_max_limit\":10,\"storage_engine\":\"olap\",\"enable_optimizer_trace_log\":false,\"spill_operator_min_bytes\":52428800,\"cbo_enable_dp_join_reorder\":true,\"tx_visible_wait_timeout\":10,\"enable_materialized_view_view_delta_rewrite\":true,\"cbo_max_reorder_node_use_exhaustive\":4,\"enable_sql_digest\":false,\"spill_mem_table_num\":2,\"enable_spill\":false,\"pipeline_dop\":0,\"single_node_exec_plan\":false,\"full_sort_late_materialization_v2\":true,\"join_implementation_mode_v2\":\"auto\",\"sql_select_limit\":9223372036854775807,\"enable_materialized_view_rewrite\":true,\"statistic_collect_parallel\":1,\"hdfs_backend_selector_hash_algorithm\":\"consistent\",\"disable_colocate_join\":false,\"max_pushdown_conditions_per_column\":-1,\"default_table_compression\":\"lz4_frame\",\"runtime_adaptive_dop_max_output_amplification_factor\":0,\"innodb_read_only\":true,\"spill_mem_limit_threshold\":0.8,\"cbo_reorder_threshold_use_exhaustive\":6,\"enable_predicate_reorder\":false,\"enable_query_cache\":false,\"max_allowed_packet\":33554432,\"time_zone\":\"Asia/Shanghai\",\"enable_multicolumn_global_runtime_filter\":false,\"character_set_server\":\"utf8\",\"cbo_use_nth_exec_plan\":0,\"io_tasks_per_scan_operator\":4,\"parallel_exchange_instance_num\":-1,\"enable_shared_scan\":false,\"allow_default_partition\":false}","be_number":1,"be_core_stat":{"numOfHardwareCoresPerBe":"{\"213110\":104}","cachedAvgNumOfHardwareCores":104},"exception":[]}