{
  "statement":"select * from  (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) a\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) c on a.id\u003dc.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) d on a.id\u003dd.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) e on a.id\u003de.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) f on a.id\u003df.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) g on a.id\u003dg.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) h on a.id\u003dh.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) i on a.id\u003di.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) j on a.id\u003dj.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) k on a.id\u003dk.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) l on a.id\u003dl.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) m on a.id\u003dm.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) n on a.id\u003dn.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) o on a.id\u003do.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) p on a.id\u003dp.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) q on a.id\u003dq.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) r on a.id\u003dr.id\njoin (select distinct id,`name` from test_joins where name like \u0027%小%\u0027) s on a.id\u003ds.id\n",
  "table_meta":{
    "test_join.test_joins":"CREATE TABLE `test_joins` (\n  `id` varchar(255) NOT NULL COMMENT \"\",\n  `NAME` varchar(50) REPLACE_IF_NOT_NULL NULL COMMENT \"\",\n  `SEX` varchar(20) REPLACE_IF_NOT_NULL NULL COMMENT \"\"\n) ENGINE\u003dOLAP \nAGGREGATE KEY(`id`)\nCOMMENT \"OLAP\"\nDISTRIBUTED BY HASH(`id`) BUCKETS 128 \nPROPERTIES (\n\"replication_num\" \u003d \"1\",\n\"in_memory\" \u003d \"false\",\n\"storage_format\" \u003d \"DEFAULT\"\n);"
  },
  "table_row_count":{
    "test_join.test_joins":{
      "test_joins":50000
    }
  },
  "session_variables":"{\"runtime_join_filter_push_down_limit\":1024000,\"codegen_level\":0,\"character_set_connection\":\"utf8\",\"cbo_use_correlated_join_estimate\":true,\"enable_insert_strict\":true,\"div_precision_increment\":4,\"tx_isolation\":\"REPEATABLE-READ\",\"wait_timeout\":28800,\"auto_increment_increment\":1,\"foreign_key_checks\":true,\"character_set_client\":\"utf8\",\"autocommit\":true,\"enable_column_expr_predicate\":false,\"character_set_results\":\"utf8\",\"parallel_fragment_exec_instance_num\":1,\"max_scan_key_num\":-1,\"enable_global_runtime_filter\":true,\"forward_to_master\":false,\"net_read_timeout\":60,\"streaming_preaggregation_mode\":\"auto\",\"storage_engine\":\"olap\",\"cbo_enable_dp_join_reorder\":true,\"cbo_enable_low_cardinality_optimize\":true,\"tx_visible_wait_timeout\":10,\"cbo_max_reorder_node_use_exhaustive\":4,\"new_planner_optimize_timeout\":80000,\"force_schedule_local\":false,\"pipeline_dop\":0,\"enable_query_dump\":false,\"cbo_enable_greedy_join_reorder\":true,\"prefer_join_method\":\"broadcast\",\"load_mem_limit\":0,\"sql_select_limit\":9223372036854775807,\"profiling\":false,\"sql_safe_updates\":0,\"enable_pipeline_engine\":false,\"query_cache_type\":0,\"disable_colocate_join\":false,\"max_pushdown_conditions_per_column\":-1,\"enable_vectorized_engine\":true,\"net_write_timeout\":60,\"collation_database\":\"utf8_general_ci\",\"hash_join_push_down_right_table\":true,\"new_planner_agg_stage\":0,\"collation_connection\":\"utf8_general_ci\",\"resource_group\":\"normal\",\"enable_new_planner_push_down_join_to_agg\":false,\"broadcast_row_limit\":15000000,\"exec_mem_limit\":8589934592,\"cbo_max_reorder_node_use_dp\":10,\"disable_join_reorder\":false,\"enable_profile\":false,\"enable_groupby_use_output_alias\":false,\"net_buffer_length\":16384,\"transmission_compression_type\":\"LZ4\",\"enable_vectorized_insert\":true,\"interactive_timeout\":3600,\"enable_spilling\":false,\"batch_size\":1024,\"cbo_enable_replicated_join\":true,\"max_allowed_packet\":10485760,\"query_timeout\":300,\"enable_cbo\":true,\"collation_server\":\"utf8_general_ci\",\"time_zone\":\"+08:00\",\"max_execution_time\":3000000,\"character_set_server\":\"utf8\",\"cbo_use_nth_exec_plan\":0,\"rewrite_count_distinct_to_bitmap_hll\":true,\"parallel_exchange_instance_num\":-1,\"pipeline_query_expire_seconds\":300,\"sql_mode\":0,\"SQL_AUTO_IS_NULL\":false,\"event_scheduler\":\"OFF\",\"disable_streaming_preaggregations\":false}",
  "column_statistics":{
    "test_join.test_joins":{
      "id":"[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN",
      "NAME":"[-Infinity, Infinity, 0.0, 1.0, 1.0] UNKNOWN"
    }
  },
  "be_number":5,
  "exception":[
    "com.starrocks.sql.common.StarRocksPlannerException: StarRocks planner use long time 80000 ms, This probably because 1. FE Full GC, 2. Hive external table fetch metadata took a long time, 3. The SQL is very complex. You could 1. adjust FE JVM config, 2. try query again, 3. enlarge new_planner_optimize_timeout session variable\n\tat com.starrocks.sql.optimizer.task.SeriallyTaskScheduler.executeTasks(SeriallyTaskScheduler.java:31)\n\tat com.starrocks.sql.optimizer.Optimizer.optimize(Optimizer.java:151)\n\tat com.starrocks.sql.StatementPlanner.createQueryPlan(StatementPlanner.java:75)\n\tat com.starrocks.sql.StatementPlanner.plan(StatementPlanner.java:46)\n\tat com.starrocks.qe.StmtExecutor.execute(StmtExecutor.java:299)\n\tat com.starrocks.http.rest.QueryDumpAction.executeWithoutPassword(QueryDumpAction.java:73)\n\tat com.starrocks.http.rest.RestBaseAction.execute(RestBaseAction.java:84)\n\tat com.starrocks.http.rest.RestBaseAction.handleRequest(RestBaseAction.java:58)\n\tat com.starrocks.http.HttpServerHandler.channelRead(HttpServerHandler.java:75)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:748)\n"
  ]
}