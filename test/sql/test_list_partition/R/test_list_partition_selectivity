-- name: test_list_partition_selectivity
DROP DATABASE IF EXISTS test_list_partition_selectivity;
-- result:
-- !result
CREATE DATABASE test_list_partition_selectivity;
-- result:
-- !result
USE test_list_partition_selectivity;
-- result:
-- !result
CREATE TABLE partitions_multi_column_1 (
    c1 int NOT NULL,
    c2 int NOT NULL,
    c3 int
)
PARTITION BY (c1, c2);
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 0, 0, generate_series FROM TABLE(generate_series(1, 1000));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 0, 1, generate_series FROM TABLE(generate_series(1, 100));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 0, 2, generate_series FROM TABLE(generate_series(1, 10));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 0, 3, generate_series FROM TABLE(generate_series(1, 1));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 1, 0, generate_series FROM TABLE(generate_series(1, 100));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 2, 0, generate_series FROM TABLE(generate_series(1, 100));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 3, 0, generate_series FROM TABLE(generate_series(1, 100));
-- result:
-- !result
INSERT INTO partitions_multi_column_1 SELECT 4, 0, generate_series FROM TABLE(generate_series(1, 100));
-- result:
-- !result
ANALYZE FULL TABLE partitions_multi_column_1 WITH SYNC MODE;
-- result:
test_list_partition_selectivity.partitions_multi_column_1	analyze	status	OK
-- !result
SELECT count(*) FROM partitions_multi_column_1;
-- result:
1511
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=0 AND c2=0 ', 'cardinality: 1000', 'c3-->[1.0, 1000.0, 0.0, 4.0, 1005.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=0 AND c2=1 ', 'cardinality: 100',  'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=0 AND c2=2 ', 'cardinality: 10',   'c3-->[1.0, 1000.0, 0.0, 4.0, 10.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=0 AND c2=3 ', 'cardinality: 1',    'c3-->[1.0, 1000.0, 0.0, 4.0, 1005.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=1 AND c2=0 ', 'cardinality: 100', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=2 AND c2=0 ', 'cardinality: 100', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=3 AND c2=0 ', 'cardinality: 100', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=4 AND c2=0 ', 'cardinality: 100', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1=0 ', 'cardinality: 1111', 'c3-->[1.0, 1000.0, 0.0, 4.0, 1005.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c2=0 ', 'cardinality: 1400', 'c3-->[1.0, 1000.0, 0.0, 4.0, 1005.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1 IN (1,2,3,4) AND c2=0 ', 'cardinality: 400', 'c3-->[1.0, 1000.0, 0.0, 4.0, 1005.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1 IN (3,4) AND c2=0 ', 'cardinality: 200', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1 IN (2,4) AND c2=0 ', 'cardinality: 200', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result
function: assert_explain_costs_contains('SELECT c2, c3 FROM partitions_multi_column_1 WHERE c1 IN (2,4) ', 'cardinality: 200', 'c3-->[1.0, 1000.0, 0.0, 4.0, 100.0]')
-- result:
None
-- !result