-- name: test_vector_index_ivfpq @sequential
ADMIN SET FRONTEND CONFIG("enable_experimental_vector" = "true");
-- result:
-- !result
CREATE TABLE __row_util_base (
  k1 bigint NULL
) ENGINE=OLAP
DUPLICATE KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 32
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into __row_util_base select generate_series from TABLE(generate_series(0, 10000 - 1));
-- result:
-- !result
insert into __row_util_base select * from __row_util_base; -- 20000
insert into __row_util_base select * from __row_util_base; -- 40000
insert into __row_util_base select * from __row_util_base; -- 80000
insert into __row_util_base select * from __row_util_base; -- 160000
insert into __row_util_base select * from __row_util_base; -- 320000
insert into __row_util_base select * from __row_util_base; -- 640000

CREATE TABLE __row_util (
  idx bigint NULL
) ENGINE=OLAP
DUPLICATE KEY(`idx`)
DISTRIBUTED BY HASH(`idx`) BUCKETS 32
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into __row_util 
select 
    row_number() over() as idx
from __row_util_base;
-- result:
-- !result
CREATE TABLE t1 (
    id bigint(20) NOT NULL,
    v1 ARRAY<FLOAT> NOT NULL,
    v2 ARRAY<FLOAT> NOT NULL,
    i1 bigint(20) NOT NULL,
    INDEX index_vector (v1) USING VECTOR (
        "index_type" = "IVFPQ", 
        "dim"="4", 
        "metric_type" = "l2_distance", 
        "is_vector_normed" = "false", 
        "nbits" = "8", 
        "nlist" = "40",
        "M_IVFPQ" = "2")
) ENGINE=OLAP
DUPLICATE KEY(id)
DISTRIBUTED BY HASH(id) BUCKETS 64
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
CREATE TABLE t1 (
    id bigint(20) NOT NULL,
    v1 ARRAY<FLOAT> NOT NULL,
    v2 ARRAY<FLOAT> NOT NULL,
    i1 bigint(20) NOT NULL,
    INDEX index_vector (v1) USING VECTOR (
        "index_type" = "ivfpq", 
        "dim"="4", 
        "metric_type" = "l2_distance", 
        "is_vector_normed" = "false", 
        "nbits" = "8", 
        "nlist" = "16",
        "M_IVFPQ" = "2")
) ENGINE=OLAP
DUPLICATE KEY(id)
DISTRIBUTED BY HASH(id) BUCKETS 64
PROPERTIES (
    "replication_num" = "1"
);
-- result:
E: (1050, "Getting analyzing error. Detail message: Table 't1' already exists.")
-- !result
insert into t1 
select 
    idx,
    array_generate(10000, 10003),
    array_generate(10000, 10003),
    idx
from __row_util
order by idx 
limit 20;
-- result:
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [10000, 10001, 10002, 10003]) as dis from t1
), w2 as (
    select * from w1
    order by dis limit 21
) select * from w2 order by dis, id;
-- result:
1	[10000,10001,10002,10003]	[10000,10001,10002,10003]	1	0.0
2	[10000,10001,10002,10003]	[10000,10001,10002,10003]	2	0.0
3	[10000,10001,10002,10003]	[10000,10001,10002,10003]	3	0.0
4	[10000,10001,10002,10003]	[10000,10001,10002,10003]	4	0.0
5	[10000,10001,10002,10003]	[10000,10001,10002,10003]	5	0.0
6	[10000,10001,10002,10003]	[10000,10001,10002,10003]	6	0.0
7	[10000,10001,10002,10003]	[10000,10001,10002,10003]	7	0.0
8	[10000,10001,10002,10003]	[10000,10001,10002,10003]	8	0.0
9	[10000,10001,10002,10003]	[10000,10001,10002,10003]	9	0.0
10	[10000,10001,10002,10003]	[10000,10001,10002,10003]	10	0.0
11	[10000,10001,10002,10003]	[10000,10001,10002,10003]	11	0.0
12	[10000,10001,10002,10003]	[10000,10001,10002,10003]	12	0.0
13	[10000,10001,10002,10003]	[10000,10001,10002,10003]	13	0.0
14	[10000,10001,10002,10003]	[10000,10001,10002,10003]	14	0.0
15	[10000,10001,10002,10003]	[10000,10001,10002,10003]	15	0.0
16	[10000,10001,10002,10003]	[10000,10001,10002,10003]	16	0.0
17	[10000,10001,10002,10003]	[10000,10001,10002,10003]	17	0.0
18	[10000,10001,10002,10003]	[10000,10001,10002,10003]	18	0.0
19	[10000,10001,10002,10003]	[10000,10001,10002,10003]	19	0.0
20	[10000,10001,10002,10003]	[10000,10001,10002,10003]	20	0.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select * from w1 
order by dis;
-- result:
8	[10000,10001,10002,10003]	[10000,10001,10002,10003]	8	400040000.0
17	[10000,10001,10002,10003]	[10000,10001,10002,10003]	17	400040000.0
1	[10000,10001,10002,10003]	[10000,10001,10002,10003]	1	400040000.0
3	[10000,10001,10002,10003]	[10000,10001,10002,10003]	3	400040000.0
5	[10000,10001,10002,10003]	[10000,10001,10002,10003]	5	400040000.0
4	[10000,10001,10002,10003]	[10000,10001,10002,10003]	4	400040000.0
6	[10000,10001,10002,10003]	[10000,10001,10002,10003]	6	400040000.0
9	[10000,10001,10002,10003]	[10000,10001,10002,10003]	9	400040000.0
16	[10000,10001,10002,10003]	[10000,10001,10002,10003]	16	400040000.0
15	[10000,10001,10002,10003]	[10000,10001,10002,10003]	15	400040000.0
13	[10000,10001,10002,10003]	[10000,10001,10002,10003]	13	400040000.0
20	[10000,10001,10002,10003]	[10000,10001,10002,10003]	20	400040000.0
12	[10000,10001,10002,10003]	[10000,10001,10002,10003]	12	400040000.0
2	[10000,10001,10002,10003]	[10000,10001,10002,10003]	2	400040000.0
7	[10000,10001,10002,10003]	[10000,10001,10002,10003]	7	400040000.0
14	[10000,10001,10002,10003]	[10000,10001,10002,10003]	14	400040000.0
10	[10000,10001,10002,10003]	[10000,10001,10002,10003]	10	400040000.0
19	[10000,10001,10002,10003]	[10000,10001,10002,10003]	19	400040000.0
11	[10000,10001,10002,10003]	[10000,10001,10002,10003]	11	400040000.0
18	[10000,10001,10002,10003]	[10000,10001,10002,10003]	18	400040000.0
-- !result
insert into t1 
select 
    idx + 20,
    array_repeat(idx, 4),
    array_repeat(idx, 4),
    idx + 20
from __row_util;
-- result:
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select id, v1, dis from w1 order by dis limit 10;
-- result:
21	[1,1,1,1]	0.0
22	[2,2,2,2]	4.0
23	[3,3,3,3]	16.0
24	[4,4,4,4]	36.0
25	[5,5,5,5]	64.0
26	[6,6,6,6]	100.0
27	[7,7,7,7]	144.0
28	[8,8,8,8]	196.0
29	[9,9,9,9]	256.0
30	[10,10,10,10]	324.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [640064, 640064, 640064, 640064]) as dis from t1
)
select * from w1
order by dis limit 10;
-- result:
640020	[640000,640000,640000,640000]	[640000,640000,640000,640000]	640020	16384.0
640019	[639999,639999,639999,639999]	[639999,639999,639999,639999]	640019	16900.0
640018	[639998,639998,639998,639998]	[639998,639998,639998,639998]	640018	17424.0
640017	[639997,639997,639997,639997]	[639997,639997,639997,639997]	640017	17956.0
640016	[639996,639996,639996,639996]	[639996,639996,639996,639996]	640016	18496.0
640015	[639995,639995,639995,639995]	[639995,639995,639995,639995]	640015	19044.0
640014	[639994,639994,639994,639994]	[639994,639994,639994,639994]	640014	19600.0
640013	[639993,639993,639993,639993]	[639993,639993,639993,639993]	640013	20164.0
640012	[639992,639992,639992,639992]	[639992,639992,639992,639992]	640012	20736.0
640011	[639991,639991,639991,639991]	[639991,639991,639991,639991]	640011	21316.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 2, 3, 4]) as dis from t1
)
select * from w1
order by dis limit 10;
-- result:
22	[2,2,2,2]	[2,2,2,2]	22	6.0
23	[3,3,3,3]	[3,3,3,3]	23	6.0
24	[4,4,4,4]	[4,4,4,4]	24	14.0
21	[1,1,1,1]	[1,1,1,1]	21	14.0
25	[5,5,5,5]	[5,5,5,5]	25	30.0
26	[6,6,6,6]	[6,6,6,6]	26	54.0
27	[7,7,7,7]	[7,7,7,7]	27	86.0
28	[8,8,8,8]	[8,8,8,8]	28	126.0
29	[9,9,9,9]	[9,9,9,9]	29	174.0
30	[10,10,10,10]	[10,10,10,10]	30	230.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [10000, 10001, 10002, 10003]) as dis from t1
), w2 as (
    select * from w1
    order by dis limit 20
) select * from w2 order by dis, id;
-- result:
1	[10000,10001,10002,10003]	[10000,10001,10002,10003]	1	0.0
2	[10000,10001,10002,10003]	[10000,10001,10002,10003]	2	0.0
3	[10000,10001,10002,10003]	[10000,10001,10002,10003]	3	0.0
4	[10000,10001,10002,10003]	[10000,10001,10002,10003]	4	0.0
5	[10000,10001,10002,10003]	[10000,10001,10002,10003]	5	0.0
6	[10000,10001,10002,10003]	[10000,10001,10002,10003]	6	0.0
7	[10000,10001,10002,10003]	[10000,10001,10002,10003]	7	0.0
8	[10000,10001,10002,10003]	[10000,10001,10002,10003]	8	0.0
9	[10000,10001,10002,10003]	[10000,10001,10002,10003]	9	0.0
10	[10000,10001,10002,10003]	[10000,10001,10002,10003]	10	0.0
11	[10000,10001,10002,10003]	[10000,10001,10002,10003]	11	0.0
12	[10000,10001,10002,10003]	[10000,10001,10002,10003]	12	0.0
13	[10000,10001,10002,10003]	[10000,10001,10002,10003]	13	0.0
14	[10000,10001,10002,10003]	[10000,10001,10002,10003]	14	0.0
15	[10000,10001,10002,10003]	[10000,10001,10002,10003]	15	0.0
16	[10000,10001,10002,10003]	[10000,10001,10002,10003]	16	0.0
17	[10000,10001,10002,10003]	[10000,10001,10002,10003]	17	0.0
18	[10000,10001,10002,10003]	[10000,10001,10002,10003]	18	0.0
19	[10000,10001,10002,10003]	[10000,10001,10002,10003]	19	0.0
20	[10000,10001,10002,10003]	[10000,10001,10002,10003]	20	0.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select v1, dis from w1 
where dis <= 0
order by dis limit 10;
-- result:
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select v1, dis from w1 
where dis <= 100
order by dis limit 10;
-- result:
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
[10000,10001,10002,10003]	400040000.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [640064, 640064, 640064, 640064]) as dis from t1
)
select v1, dis from w1
where dis <= 100 and dis <= 1000
order by dis limit 10;
-- result:
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
[10000,10001,10002,10003]	1587915000000.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 2, 3, 4]) as dis from t1
)
select v1, dis from w1
where dis <= 100 and dis <= 1000
order by dis limit 10;
-- result:
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
[10000,10001,10002,10003]	399920000.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [10000, 10001, 10002, 10003]) as dis from t1
), w2 as (
    select * from w1
    where dis <= 100 and dis <= 1000
    order by dis limit 20
) select v1, dis from w2 order by dis, id;
-- result:
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
[10000,10001,10002,10003]	0.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select * from w1 
where dis >= 100 and dis <= 1000
order by dis limit 10;
-- result:
26	[6,6,6,6]	[6,6,6,6]	26	100.0
27	[7,7,7,7]	[7,7,7,7]	27	144.0
28	[8,8,8,8]	[8,8,8,8]	28	196.0
29	[9,9,9,9]	[9,9,9,9]	29	256.0
30	[10,10,10,10]	[10,10,10,10]	30	324.0
31	[11,11,11,11]	[11,11,11,11]	31	400.0
32	[12,12,12,12]	[12,12,12,12]	32	484.0
33	[13,13,13,13]	[13,13,13,13]	33	576.0
34	[14,14,14,14]	[14,14,14,14]	34	676.0
35	[15,15,15,15]	[15,15,15,15]	35	784.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select * from w1 
where dis <= 100 and id >= 0
order by dis limit 10;
-- result:
21	[1,1,1,1]	[1,1,1,1]	21	0.0
22	[2,2,2,2]	[2,2,2,2]	22	4.0
23	[3,3,3,3]	[3,3,3,3]	23	16.0
24	[4,4,4,4]	[4,4,4,4]	24	36.0
25	[5,5,5,5]	[5,5,5,5]	25	64.0
26	[6,6,6,6]	[6,6,6,6]	26	100.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select * from w1 
order by dis, id limit 10;
-- result:
21	[1,1,1,1]	[1,1,1,1]	21	0.0
22	[2,2,2,2]	[2,2,2,2]	22	4.0
23	[3,3,3,3]	[3,3,3,3]	23	16.0
24	[4,4,4,4]	[4,4,4,4]	24	36.0
25	[5,5,5,5]	[5,5,5,5]	25	64.0
26	[6,6,6,6]	[6,6,6,6]	26	100.0
27	[7,7,7,7]	[7,7,7,7]	27	144.0
28	[8,8,8,8]	[8,8,8,8]	28	196.0
29	[9,9,9,9]	[9,9,9,9]	29	256.0
30	[10,10,10,10]	[10,10,10,10]	30	324.0
-- !result
ADMIN SET FRONTEND CONFIG("enable_experimental_vector" = "false");
-- result:
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select * from w1 order by dis limit 10;
-- result:
21	[1,1,1,1]	[1,1,1,1]	21	0.0
22	[2,2,2,2]	[2,2,2,2]	22	4.0
23	[3,3,3,3]	[3,3,3,3]	23	16.0
24	[4,4,4,4]	[4,4,4,4]	24	36.0
25	[5,5,5,5]	[5,5,5,5]	25	64.0
26	[6,6,6,6]	[6,6,6,6]	26	100.0
27	[7,7,7,7]	[7,7,7,7]	27	144.0
28	[8,8,8,8]	[8,8,8,8]	28	196.0
29	[9,9,9,9]	[9,9,9,9]	29	256.0
30	[10,10,10,10]	[10,10,10,10]	30	324.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [640064, 640064, 640064, 640064]) as dis from t1
)
select * from w1
order by dis limit 10;
-- result:
640020	[640000,640000,640000,640000]	[640000,640000,640000,640000]	640020	16384.0
640019	[639999,639999,639999,639999]	[639999,639999,639999,639999]	640019	16900.0
640018	[639998,639998,639998,639998]	[639998,639998,639998,639998]	640018	17424.0
640017	[639997,639997,639997,639997]	[639997,639997,639997,639997]	640017	17956.0
640016	[639996,639996,639996,639996]	[639996,639996,639996,639996]	640016	18496.0
640015	[639995,639995,639995,639995]	[639995,639995,639995,639995]	640015	19044.0
640014	[639994,639994,639994,639994]	[639994,639994,639994,639994]	640014	19600.0
640013	[639993,639993,639993,639993]	[639993,639993,639993,639993]	640013	20164.0
640012	[639992,639992,639992,639992]	[639992,639992,639992,639992]	640012	20736.0
640011	[639991,639991,639991,639991]	[639991,639991,639991,639991]	640011	21316.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 2, 3, 4]) as dis from t1
)
select * from w1
order by dis limit 10;
-- result:
22	[2,2,2,2]	[2,2,2,2]	22	6.0
23	[3,3,3,3]	[3,3,3,3]	23	6.0
24	[4,4,4,4]	[4,4,4,4]	24	14.0
21	[1,1,1,1]	[1,1,1,1]	21	14.0
25	[5,5,5,5]	[5,5,5,5]	25	30.0
26	[6,6,6,6]	[6,6,6,6]	26	54.0
27	[7,7,7,7]	[7,7,7,7]	27	86.0
28	[8,8,8,8]	[8,8,8,8]	28	126.0
29	[9,9,9,9]	[9,9,9,9]	29	174.0
30	[10,10,10,10]	[10,10,10,10]	30	230.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [10000, 10001, 10002, 10003]) as dis from t1
), w2 as (
    select * from w1
    order by dis limit 20
) select * from w2 order by dis, id;
-- result:
1	[10000,10001,10002,10003]	[10000,10001,10002,10003]	1	0.0
2	[10000,10001,10002,10003]	[10000,10001,10002,10003]	2	0.0
3	[10000,10001,10002,10003]	[10000,10001,10002,10003]	3	0.0
4	[10000,10001,10002,10003]	[10000,10001,10002,10003]	4	0.0
5	[10000,10001,10002,10003]	[10000,10001,10002,10003]	5	0.0
6	[10000,10001,10002,10003]	[10000,10001,10002,10003]	6	0.0
7	[10000,10001,10002,10003]	[10000,10001,10002,10003]	7	0.0
8	[10000,10001,10002,10003]	[10000,10001,10002,10003]	8	0.0
9	[10000,10001,10002,10003]	[10000,10001,10002,10003]	9	0.0
10	[10000,10001,10002,10003]	[10000,10001,10002,10003]	10	0.0
11	[10000,10001,10002,10003]	[10000,10001,10002,10003]	11	0.0
12	[10000,10001,10002,10003]	[10000,10001,10002,10003]	12	0.0
13	[10000,10001,10002,10003]	[10000,10001,10002,10003]	13	0.0
14	[10000,10001,10002,10003]	[10000,10001,10002,10003]	14	0.0
15	[10000,10001,10002,10003]	[10000,10001,10002,10003]	15	0.0
16	[10000,10001,10002,10003]	[10000,10001,10002,10003]	16	0.0
17	[10000,10001,10002,10003]	[10000,10001,10002,10003]	17	0.0
18	[10000,10001,10002,10003]	[10000,10001,10002,10003]	18	0.0
19	[10000,10001,10002,10003]	[10000,10001,10002,10003]	19	0.0
20	[10000,10001,10002,10003]	[10000,10001,10002,10003]	20	0.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 1, 1, 1]) as dis from t1
)
select * from w1 
where dis <= 100 and dis <= 1000
order by dis limit 10;
-- result:
21	[1,1,1,1]	[1,1,1,1]	21	0.0
22	[2,2,2,2]	[2,2,2,2]	22	4.0
23	[3,3,3,3]	[3,3,3,3]	23	16.0
24	[4,4,4,4]	[4,4,4,4]	24	36.0
25	[5,5,5,5]	[5,5,5,5]	25	64.0
26	[6,6,6,6]	[6,6,6,6]	26	100.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [640064, 640064, 640064, 640064]) as dis from t1
)
select * from w1
where dis <= 100 and dis <= 1000
order by dis limit 10;
-- result:
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [1, 2, 3, 4]) as dis from t1
)
select * from w1
where dis <= 100 and dis <= 1000
order by dis limit 10;
-- result:
22	[2,2,2,2]	[2,2,2,2]	22	6.0
23	[3,3,3,3]	[3,3,3,3]	23	6.0
24	[4,4,4,4]	[4,4,4,4]	24	14.0
21	[1,1,1,1]	[1,1,1,1]	21	14.0
25	[5,5,5,5]	[5,5,5,5]	25	30.0
26	[6,6,6,6]	[6,6,6,6]	26	54.0
27	[7,7,7,7]	[7,7,7,7]	27	86.0
-- !result
with w1 as (
    select *, approx_l2_distance(v1, [10000, 10001, 10002, 10003]) as dis from t1
), w2 as (
    select * from w1
    where dis <= 100 and dis <= 1000
    order by dis limit 20
) select * from w2 order by dis, id;
-- result:
1	[10000,10001,10002,10003]	[10000,10001,10002,10003]	1	0.0
2	[10000,10001,10002,10003]	[10000,10001,10002,10003]	2	0.0
3	[10000,10001,10002,10003]	[10000,10001,10002,10003]	3	0.0
4	[10000,10001,10002,10003]	[10000,10001,10002,10003]	4	0.0
5	[10000,10001,10002,10003]	[10000,10001,10002,10003]	5	0.0
6	[10000,10001,10002,10003]	[10000,10001,10002,10003]	6	0.0
7	[10000,10001,10002,10003]	[10000,10001,10002,10003]	7	0.0
8	[10000,10001,10002,10003]	[10000,10001,10002,10003]	8	0.0
9	[10000,10001,10002,10003]	[10000,10001,10002,10003]	9	0.0
10	[10000,10001,10002,10003]	[10000,10001,10002,10003]	10	0.0
11	[10000,10001,10002,10003]	[10000,10001,10002,10003]	11	0.0
12	[10000,10001,10002,10003]	[10000,10001,10002,10003]	12	0.0
13	[10000,10001,10002,10003]	[10000,10001,10002,10003]	13	0.0
14	[10000,10001,10002,10003]	[10000,10001,10002,10003]	14	0.0
15	[10000,10001,10002,10003]	[10000,10001,10002,10003]	15	0.0
16	[10000,10001,10002,10003]	[10000,10001,10002,10003]	16	0.0
17	[10000,10001,10002,10003]	[10000,10001,10002,10003]	17	0.0
18	[10000,10001,10002,10003]	[10000,10001,10002,10003]	18	0.0
19	[10000,10001,10002,10003]	[10000,10001,10002,10003]	19	0.0
20	[10000,10001,10002,10003]	[10000,10001,10002,10003]	20	0.0
-- !result
ADMIN SET FRONTEND CONFIG("enable_experimental_vector" = "false");
-- result:
-- !result