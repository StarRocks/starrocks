-- name: test_mv_on_view
create database db_mv_on_view;
use db_mv_on_view;

CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "1");
CREATE TABLE jj( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "1");
insert into ss values('2020-01-14', 2);
insert into ss values('2020-01-14', 3);
insert into ss values('2020-01-15', 2);

CREATE VIEW view1 AS SELECT event_day, sum(pv) as sum_pv FROM ss GROUP BY event_day;
CREATE MATERIALIZED VIEW mv_on_view_1 REFRESH ASYNC 
AS select * from view1;
[UC]REFRESH MATERIALIZED VIEW mv_on_view_1 with sync mode ;
SELECT * FROM mv_on_view_1 ORDER BY event_day;

-- update the base table of view, should update the MV correspondingly
insert into ss values('2020-01-15', 3);
[UC]REFRESH MATERIALIZED VIEW mv_on_view_1 with sync mode;
SELECT * FROM mv_on_view_1 ORDER BY event_day;

-- alter view will inactive the MV
ALTER VIEW view1 AS SELECT event_day, sum(pv) as sum_pv FROM jj GROUP BY event_day;
SELECT IS_ACTIVE, INACTIVE_REASON FROM information_schema.materialized_views 
    WHERE table_name = 'mv_on_view_1';

-- active the MV
ALTER MATERIALIZED VIEW mv_on_view_1 ACTIVE;
SELECT IS_ACTIVE, INACTIVE_REASON FROM information_schema.materialized_views 
    WHERE table_name = 'mv_on_view_1';
[UC]REFRESH MATERIALIZED VIEW mv_on_view_1 with sync mode;
SELECT * FROM mv_on_view_1 ORDER BY event_day;

-- update the base table
insert into jj values('2020-01-14', 2);
[UC]REFRESH MATERIALIZED VIEW mv_on_view_1 with sync mode;
SELECT * FROM mv_on_view_1 ORDER BY event_day;