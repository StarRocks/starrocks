-- name: test_mv_refresh_strategy_with_force
create database db_${uuid0};
use db_${uuid0};


create table user_tags (time date, user_id int, user_name varchar(20), tag_id int) 
partition by date_trunc('day', time)  
distributed by hash(time) buckets 3 
properties('replication_num' = '1');

insert into user_tags values('2023-04-13', 1, 'a', 1);
insert into user_tags values('2023-04-13', 1, 'b', 2);
insert into user_tags values('2023-04-14', 2, 'e', 5);
insert into user_tags values('2023-04-14', 3, 'e', 6);

create materialized view user_tags_mv1  distributed by hash(user_id) 
partition by date_trunc('day', time)
properties('partition_refresh_strategy' = 'force')
refresh deferred manual
as select user_id, time, count(tag_id) from user_tags group by user_id, time;

refresh materialized view user_tags_mv1 with sync mode;
select * from user_tags_mv1 order by user_id;
[UC]task_name=SELECT TASK_NAME FROM information_schema.materialized_views WHERE TABLE_SCHEMA = 'db_${uuid0}' AND TABLE_NAME='user_tags_mv1';

SELECT count(1) FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}';
SELECT `STATE` FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}' order by CREATE_TIME desc;

refresh materialized view user_tags_mv1 with sync mode;
select * from user_tags_mv1 order by user_id;
SELECT count(1) FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}';
SELECT `STATE` FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}' order by CREATE_TIME desc;

create materialized view user_tags_mv2  distributed by hash(user_id) 
properties('partition_refresh_strategy' = 'force')
refresh deferred manual
as select user_id, time, count(tag_id) from user_tags group by user_id, time;
refresh materialized view user_tags_mv2 with sync mode;
select * from user_tags_mv2 order by user_id;
[UC]task_name=SELECT TASK_NAME FROM information_schema.materialized_views WHERE TABLE_SCHEMA = 'db_${uuid0}' AND TABLE_NAME='user_tags_mv2';

SELECT count(1) FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}';
SELECT `STATE` FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}' order by CREATE_TIME desc;

refresh materialized view user_tags_mv2 with sync mode;
select * from user_tags_mv2 order by user_id;
SELECT count(1) FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}';
SELECT `STATE` FROM information_schema.task_runs WHERE TASK_NAME = '${task_name}' order by CREATE_TIME desc;

drop database db_${uuid0} force;