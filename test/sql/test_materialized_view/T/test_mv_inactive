-- name: test_mv_refresh

create database db_${uuid0};
use db_${uuid0};

CREATE TABLE t1 (
    k1 date,
    k2 int,
    k3 int
)
DUPLICATE KEY(k1)
COMMENT "OLAP"
PARTITION BY RANGE(`k1`)
(
    PARTITION `p202006` VALUES LESS THAN ("2020-07-01"),
    PARTITION `p202007` VALUES LESS THAN ("2020-08-01"),
    PARTITION `p202008` VALUES LESS THAN ("2020-09-01")
)
PROPERTIES (
    "replication_num" = "1"
);
INSERT INTO t1 VALUES ('2020-06-02',1,1),('2020-06-02',2,2),('2020-07-02',3,3);
CREATE VIEW v1 AS SELECT k1,min(k2) as k2,min(k3) as k3 FROM t1 GROUP BY k1;

CREATE MATERIALIZED VIEW mv1 REFRESH MANUAL AS select k1, k2 from v1;
[UC]REFRESH MATERIALIZED VIEW mv1 with sync mode;

SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;
function: print_hit_materialized_view("SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;", "mv1")
function: print_hit_materialized_view("SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;", "mv1")
[UC]ALTER VIEW v1 AS SELECT k1,avg(k2) as k2,avg(k3) as k3 FROM t1 GROUP BY k1;
function: print_hit_materialized_view("SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;", "mv1")
function: print_hit_materialized_view("SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;", "mv1")
[UC]REFRESH MATERIALIZED VIEW mv1 with sync mode;
[UC]ALTER MATERIALIZED VIEW mv1 active;

[UC]ALTER VIEW v1 AS SELECT k1,max(k2) as k2,max(k3) as k3 FROM t1 GROUP BY k1;
[UC]ALTER MATERIALIZED VIEW mv1 active;
function: print_hit_materialized_view("SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;", "mv1")
function: print_hit_materialized_view("SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;", "mv1")
SELECT k1,min(k2) as k2 FROM t1 GROUP BY k1 order by 1;
SELECT k1,max(k2) FROM t1 GROUP BY k1 order by 1;

drop database db_${uuid0} force;