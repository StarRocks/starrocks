-- name: test_create_mv_with_user

drop database if exists test_create_mv_with_user;
create database test_create_mv_with_user;
use test_create_mv_with_user;

[UC]shell: ip=hostname -I | awk '{print $1}';
DROP USER IF EXISTS mv_creator@'${ip[1]}';
CREATE USER mv_creator@'${ip[1]}';

GRANT DELETE, DROP, INSERT, SELECT, ALTER, UPDATE ON ALL TABLES IN DATABASE test_create_mv_with_user
    TO USER mv_creator@'${ip[1]}';
GRANT CREATE TABLE, CREATE MATERIALIZED VIEW ON DATABASE test_create_mv_with_user
    TO USER mv_creator@'${ip[1]}';
GRANT SELECT, DROP, ALTER, REFRESH ON ALL MATERIALIZED VIEWS IN DATABASE test_create_mv_with_user
    TO USER mv_creator@'${ip[1]}';
    
-- switch user mv_creator
GRANT IMPERSONATE ON USER root TO mv_creator@'${ip[1]}';
EXECUTE AS mv_creator@'${ip[1]}' with no revert;

-- create & use materialized view
create table t1(c1 int, c2 int);
insert into t1 values(1,1);
create materialized view mv1 refresh async as select * from t1;
refresh materialized view mv1;
alter materialized view mv1 refresh manual;
refresh materialized view mv1;
select * from mv1;
drop materialized view mv1;

execute as root with no revert;
drop user mv_creator@'${ip[1]}';
