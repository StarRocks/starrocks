-- name: test_create_mv_with_dialect

create external catalog mv_iceberg_${uuid0}
properties
(
    "type" = "iceberg",
    "iceberg.catalog.type" = "hive",
    "hive.metastore.uris" = "${iceberg_catalog_hive_metastore_uris}"
);
set catalog mv_iceberg_${uuid0};
create database mv_ice_db_${uuid0};
use mv_ice_db_${uuid0};
CREATE TABLE base_table1 (
  stream_time       DATETIME,
  date_id           INT,
  hour_local        INT,
  minute_local      INT,
  country_id        BIGINT,
  city_id           BIGINT,
  drop_off_poi_id   BIGINT,
  vehicle_type_id   BIGINT,
  event             VARCHAR(64),
  originalsurge     DECIMAL(10,2),
  final_fare        DECIMAL(10,2),
  distance          DECIMAL(10,2),
  surge             DECIMAL(10,2),
  series_id         BIGINT
);

insert into base_table1 (
  stream_time, date_id, hour_local, minute_local, country_id, city_id, drop_off_poi_id, vehicle_type_id, event, originalsurge, final_fare, distance, surge, series_id
) values
  ('2023-12-01 00:00:00', 2000, 1, 1, 1, 1, 1, 1, 'event1', 1, 1, 1, 1, 1),
  ('2023-12-02 00:00:00', 2000, 1, 1, 1, 1, 1, 1, 'event2', 1, 1, 1, 1, 1),
  ('2023-12-03 00:00:00', 2000, 1, 1, 1, 1, 1, 1, 'event3', 1, 1, 1, 1, 1);
set catalog default_catalog;

create database db_${uuid0};
use db_${uuid0};

-- case 1: with specific param

CREATE MATERIALIZED VIEW test_mv1 
REFRESH DEFERRED MANUAL
PROPERTIES (
"replication_num" = "1",
"session.sql_dialect" = "trino"
) AS
SELECT
  date_id,
  DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))),
  sum(originalsurge) as sum_originalsurge,
  count(originalsurge) as count_originalsurge
FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1
  group by 1,2
;
refresh materialized view test_mv1 with sync mode;
select * from test_mv1 order by 1,2;

set sql_dialect = "trino";
SELECT DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))), date_id, sum(originalsurge) as sum_originalsurge, count(originalsurge) as count_originalsurge FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1,2;
function: print_hit_materialized_view("SELECT DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))), date_id, sum(originalsurge) as sum_originalsurge, count(originalsurge) as count_originalsurge FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1,2;", "test_mv1")
SELECT DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))), avg(originalsurge) as avg_originalsurge FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1;
function: print_hit_materialized_view("SELECT DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))), avg(originalsurge) as avg_originalsurge FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1;", "test_mv1")
drop materialized view test_mv1;

set sql_dialect = "starrocks";
CREATE MATERIALIZED VIEW test_mv1 
REFRESH DEFERRED MANUAL
PROPERTIES (
"replication_num" = "1",
"session.sql_dialect" = "trino",
"session.sql_mode" = "8589934626"
) AS
SELECT
  CASE
  WHEN city_id = 0 THEN 'Control'
  WHEN city_id = 1 THEN 'Treatment'
  ELSE 'Treatment-' || lpad(cast(city_id as varchar), 2, '0')
  END AS treatment_id,
  DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), 
  STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))),
  date_id,
  sum(originalsurge) as sum_originalsurge,
  count(originalsurge) as count_originalsurge
FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1
  group by 1,2,3
;
refresh materialized view test_mv1 with sync mode;
select * from test_mv1 order by 1,2,3;

set sql_dialect = "trino";
SELECT CASE WHEN city_id = 0 THEN 'Control' WHEN city_id = 1 THEN 'Treatment' ELSE 'Treatment-' || lpad(cast(city_id as varchar), 2, '0') END AS treatment_id, DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))), date_id, sum(originalsurge) as sum_originalsurge, count(originalsurge) as count_originalsurge FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1,2,3;
function: print_hit_materialized_view("SELECT CASE WHEN city_id = 0 THEN 'Control' WHEN city_id = 1 THEN 'Treatment' ELSE 'Treatment-' || lpad(cast(city_id as varchar), 2, '0') END AS treatment_id, DATE_TRUNC('day', date_add('minute', (hour_local * 60 + minute_local), STR_TO_DATE(CAST(date_id AS VARCHAR), '%Y%m%d'))), date_id, sum(originalsurge) as sum_originalsurge, count(originalsurge) as count_originalsurge FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1,2,3;", "test_mv1")
SELECT CASE WHEN city_id = 0 THEN 'Control' WHEN city_id = 1 THEN 'Treatment' ELSE 'Treatment-' || lpad(cast(city_id as varchar), 2, '0') END AS treatment_id, avg(originalsurge) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1;
function: print_hit_materialized_view("SELECT CASE WHEN city_id = 0 THEN 'Control' WHEN city_id = 1 THEN 'Treatment' ELSE 'Treatment-' || lpad(cast(city_id as varchar), 2, '0') END AS treatment_id, avg(originalsurge) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1 group by 1;", "test_mv1")

drop materialized view test_mv1;

drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.base_table1;
drop database mv_iceberg_${uuid0}.mv_ice_db_${uuid0} force;
drop database db_${uuid0} force;