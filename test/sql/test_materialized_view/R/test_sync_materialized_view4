-- name: test_sync_materialized_view2
drop table if exists test2;
-- result:
-- !result
CREATE TABLE `test2` (
  `k1` tinyint(4) NULL DEFAULT "0",
  `k2` varchar(64) NULL DEFAULT "",
  `k3` bigint NULL DEFAULT "0",
  `k4` varchar(64) NULL DEFAULT ""
) ENGINE=OLAP 
DUPLICATE KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
-- result:
-- !result
drop table if exists target2;
-- result:
-- !result
CREATE TABLE `target2` (
  `k2` int NULL DEFAULT "0",
  `k11` tinyint(4) NULL DEFAULT "0",
  `k4` bigint sum DEFAULT "0",
  `k5` hll hll_union
) ENGINE=OLAP 
AGGREGATE KEY(`k2`, `k11`)
DISTRIBUTED BY RANDOM BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
-- result:
-- !result
CREATE MATERIALIZED VIEW test_mv2 
PROPERTIES ( "enable_populate" = "false" ) 
to target2
as
select length(k2) as k2, cast(k1 * 2 as tinyint(4)) as k11,  sum(k3) as k4, hll_union(hll_hash(k4)) as k5 from test2 group by k11, k2; 

insert into test2 values (1, 'a', 1, 'aa'), (2, 'b', 1, 'aa'), (3, 'a', 1, 'cc');
-- result:
-- !result
select * from test2 order by k1;
-- result:
1	a	1	aa
2	b	1	aa
3	a	1	cc
-- !result
select * from target2 order by k1;
-- result:
E: (1064, "Getting analyzing error. Detail message: Column 'k1' cannot be resolved.")
-- !result
drop materialized view test_mv2;
-- result:
-- !result
drop table if exists test3;
-- result:
-- !result
CREATE TABLE `test3` (
  `k1` tinyint(4) NULL DEFAULT "0",
  `k2` varchar(64) NULL DEFAULT "",
  `k3` bigint NULL DEFAULT "0",
  `k4` varchar(64) NULL DEFAULT ""
) ENGINE=OLAP 
DUPLICATE KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 3
PROPERTIES (
"replication_num" = "1"
);
-- result:
-- !result
drop table if exists target3;
-- result:
-- !result
CREATE TABLE `target3` (
  `k2` int NULL DEFAULT "0",
  `k11` tinyint(4) NULL DEFAULT "0",
  `k4` bigint sum DEFAULT "0",
  `k5` hll hll_union
) ENGINE=OLAP 
AGGREGATE KEY(`k2`, `k11`)
DISTRIBUTED BY RANDOM BUCKETS 3
PROPERTIES (
"replication_num" = "1"
);
-- result:
-- !result
CREATE MATERIALIZED VIEW test_mv3
PROPERTIES ( "enable_populate" = "false" ) 
to target3
as
select length(k2) as k2, cast(k1 * 2 as tinyint(4)) as k11,  sum(k3) as k4, hll_union(hll_hash(k4)) as k5 from test3 group by k11, k2; 

insert into test3 values (1, 'a', 1, 'aa'), (2, 'b', 1, 'aa'), (3, 'a', 1, 'cc');
-- result:
-- !result
select * from test3 order by k1;
-- result:
1	a	1	aa
2	b	1	aa
3	a	1	cc
-- !result
select * from target3 order by k11;
-- result:
1	2	1	None
1	4	1	None
1	6	1	None
-- !result
drop materialized view test_mv3;
-- result:
-- !result