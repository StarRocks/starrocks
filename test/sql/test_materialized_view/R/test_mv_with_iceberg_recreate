-- name: test_mv_with_iceberg_recreate
create external catalog mv_iceberg_${uuid0}
properties
(
    "type" = "iceberg",
    "iceberg.catalog.type" = "hive",
    "hive.metastore.uris" = "${iceberg_catalog_hive_metastore_uris}"
);
-- result:
-- !result
set catalog mv_iceberg_${uuid0};
-- result:
-- !result
create database mv_ice_db_${uuid0};
-- result:
-- !result
use mv_ice_db_${uuid0};
-- result:
-- !result
create table mv_ice_tbl_${uuid0} (
  col_str string,
  col_int int,
  dt date
) partition by(dt);
-- result:
-- !result
insert into mv_ice_tbl_${uuid0} values 
  ('1d8cf2a2c0e14fa89d8117792be6eb6f', 2000, '2023-12-01'),
  ('3e82e36e56718dc4abc1168d21ec91ab', 2000, '2023-12-01'),
  ('abc', 2000, '2023-12-02'),
  (NULL, 2000, '2023-12-02'),
  ('ab1d8cf2a2c0e14fa89d8117792be6eb6f', 2001, '2023-12-03'),
  ('3e82e36e56718dc4abc1168d21ec91ab', 2001, '2023-12-03'),
  ('abc', 2001, '2023-12-04'),
  (NULL, 2001, '2023-12-04');
-- result:
-- !result
set catalog default_catalog;
-- result:
-- !result
create database db_${uuid0};
-- result:
-- !result
use db_${uuid0};
-- result:
-- !result
CREATE MATERIALIZED VIEW test_mv1 PARTITION BY dt 
REFRESH DEFERRED MANUAL AS SELECT dt,sum(col_int) 
FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0}  GROUP BY dt;
-- result:
-- !result
REFRESH MATERIALIZED VIEW test_mv1 WITH SYNC MODE;
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt='2023-12-01' GROUP BY dt", "test_mv1")
-- result:
True
-- !result
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt='2023-12-02' GROUP BY dt", "test_mv1")
-- result:
True
-- !result
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt='2023-12-03' GROUP BY dt", "test_mv1")
-- result:
True
-- !result
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0}  GROUP BY dt", "test_mv1")
-- result:
True
-- !result
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt='2023-12-03' GROUP BY dt", "test_mv1")
-- result:
True
-- !result
SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt>='2023-12-03' GROUP BY dt order by dt;
-- result:
2023-12-03	4002
2023-12-04	4002
-- !result
SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} GROUP BY dt order by dt;
-- result:
2023-12-01	4000
2023-12-02	4000
2023-12-03	4002
2023-12-04	4002
-- !result
admin set frontend config('enable_mv_automatic_active_check'='false');
-- result:
-- !result
use mv_iceberg_${uuid0}.mv_ice_db_${uuid0};
-- result:
-- !result
DROP TABLE mv_ice_tbl_${uuid0};
-- result:
-- !result
set catalog default_catalog;
-- result:
-- !result
use db_${uuid0};
-- result:
-- !result
use mv_iceberg_${uuid0}.mv_ice_db_${uuid0};
-- result:
-- !result
create table mv_ice_tbl_${uuid0} (
  col_str string,
  col_int int,
  dt date
) partition by(dt);
-- result:
-- !result
insert into mv_ice_tbl_${uuid0} values 
  ('1d8cf2a2c0e14fa89d8117792be6eb6f', 2000, '2023-12-01'),
  ('3e82e36e56718dc4abc1168d21ec91ab', 2000, '2023-12-01');
-- result:
-- !result
set catalog default_catalog;
-- result:
-- !result
[UC] REFRESH MATERIALIZED VIEW default_catalog.db_${uuid0}.test_mv1 WITH SYNC MODE;
-- result:
E: (1064, 'execute task mv-13011 failed: Refresh mv test_mv1 failed after 1 times, try lock failed: 0, error-msg : com.starrocks.sql.common.DmlException: Table mv_ice_tbl_fcb3eae133304a57b1a9c4c039f5fbe9 is recreated and needed to be repaired, but it is not supported by MVPCTMetaRepairer: mv_iceberg_fcb3eae133304a57b1a9c4c039f5fbe9.mv_ice_db_fcb3eae133304a57b1a9c4c039f5fbe9.mv_ice_tbl_fcb3eae133304a57b1a9c4c039f5fbe9:bf52406e-9d77-4861-afdc-f5cc3a8a3fb2, set mv test_mv1 inactive\n\tat com.starrocks.scheduler.mv.MVPCTMetaRepairer.repairMetaIfNeeded(MVPCTMetaRepairer.java:75)\n\tat com.starrocks.scheduler.PartitionBasedMvRefreshProcessor.refreshExternalTable(PartitionBasedMvRefreshProcessor.java:831)\n\tat com.starrocks.scheduler.PartitionBasedMvRefreshProcessor.syncAndCheckPartitions(PartitionBasedMvRefreshProcessor.java:250)\n\tat com.starrocks.scheduler.PartitionBasedMvRefreshProcessor.doRefreshMaterializedView(PartitionBasedMvRefreshProcessor.java:453)\n\tat com.starrocks.scheduler.PartitionBasedMvRefreshProcessor.doRefreshMaterializedViewWithRetry(PartitionBasedMvRefreshProcessor.java:391)\n\tat com.starrocks.scheduler.PartitionBasedMvRefreshProcessor.doMvRefresh(PartitionBasedMvRefreshProcessor.java:352)\n\tat com.starrocks.scheduler.PartitionBasedMvRefreshProcessor.processTaskRun(PartitionBasedMvRefreshProcessor.java:201)\n\tat com.starrocks.scheduler.TaskRun.executeTaskRun(TaskRun.java:292)\n\tat com.starrocks.scheduler.TaskRunExecutor.lambda$executeTaskRun$0(TaskRunExecutor.java:60)\n\tat java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:833)')
-- !result
select is_active, inactive_reason from information_schema.materialized_views where TABLE_NAME = 'test_mv1' and table_schema = 'db_${uuid0}';
-- result:
[REGEX]false	base-table changed: .*
-- !result
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt='2023-12-01' GROUP BY dt", "test_mv1")
-- result:
False
-- !result
SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt>='2023-12-03' GROUP BY dt order by dt;
-- result:
-- !result
select * from default_catalog.db_${uuid0}.test_mv1 order by 1, 2;
-- result:
2023-12-01	4000
2023-12-02	4000
2023-12-03	4002
2023-12-04	4002
-- !result
[UC] REFRESH MATERIALIZED VIEW default_catalog.db_${uuid0}.test_mv1 WITH SYNC MODE;
-- result:
e4847828-37aa-11f0-aa1c-2e3e098d43f4
-- !result
SELECT is_active, inactive_reason from information_schema.materialized_views where TABLE_NAME = 'test_mv1' and table_schema = 'db_${uuid0}';
-- result:
true	
-- !result
function: print_hit_materialized_view("SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt='2023-12-01' GROUP BY dt", "test_mv1")
-- result:
True
-- !result
SELECT dt,sum(col_int) FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} WHERE dt>='2023-12-03' GROUP BY dt order by dt;
-- result:
-- !result
select * from default_catalog.db_${uuid0}.test_mv1 order by 1, 2;
-- result:
2023-12-01	4000
-- !result
ALTER MATERIALIZED VIEW default_catalog.db_${uuid0}.test_mv1 INACTIVE;
-- result:
-- !result
select is_active, inactive_reason from information_schema.materialized_views
  where TABLE_NAME = 'test_mv1' and table_schema = 'db_${uuid0}';
-- result:
false	user use alter materialized view set status to inactive
-- !result
ALTER MATERIALIZED VIEW default_catalog.db_${uuid0}.test_mv1 ACTIVE;
-- result:
-- !result
select is_active, inactive_reason from information_schema.materialized_views
  where TABLE_NAME = 'test_mv1' and table_schema = 'db_${uuid0}';
-- result:
true	
-- !result
REFRESH MATERIALIZED VIEW default_catalog.db_${uuid0}.test_mv1 WITH SYNC MODE;
select * from default_catalog.db_${uuid0}.test_mv1 order by 1, 2;
-- result:
2023-12-01	4000
-- !result
admin set frontend config('enable_mv_automatic_active_check'='true');
-- result:
-- !result
drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.mv_ice_tbl_${uuid0} force;
-- result:
-- !result
drop materialized view default_catalog.db_${uuid0}.test_mv1;
-- result:
-- !result