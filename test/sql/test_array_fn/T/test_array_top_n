-- name: test_array_top_n_all_types

CREATE TABLE test_array_top_n (
    id INT,
    array_int ARRAY<INT>,
    array_bigint ARRAY<BIGINT>,
    array_float ARRAY<FLOAT>,
    array_double ARRAY<DOUBLE>,
    array_decimalv2 ARRAY<DECIMALV2(10, 2)>,
    array_boolean ARRAY<BOOLEAN>,
    array_date ARRAY<DATE>,
    array_datetime ARRAY<DATETIME>,
    array_varchar ARRAY<VARCHAR(100)>
) ENGINE=OLAP
DUPLICATE KEY(id)
DISTRIBUTED BY HASH(id) BUCKETS 3
PROPERTIES (
    "replication_num" = "1"
);

-- Insert test data
INSERT INTO test_array_top_n VALUES
-- Test case 1: Normal case with mixed values [high, low, null, mid, high, low]
(1, [100, 1, NULL, 5, 100, 1], [100, 1, NULL, 5, 100, 1], [100.0, 1.0, NULL, 5.0, 100.0, 1.0],
 [100.0, 1.0, NULL, 5.0, 100.0, 1.0], [100.0, 1.0, NULL, 5.0, 100.0, 1.0], [true, false, NULL, true, true, false],
 ['2023-12-31', '2023-01-01', NULL, '2023-06-15', '2023-12-31', '2023-01-01'],
 ['2023-12-31 23:59:59', '2023-01-01 00:00:01', NULL, '2023-06-15 12:00:00', '2023-12-31 23:59:59', '2023-01-01 00:00:01'],
 ['zzz', 'a', NULL, 'g', 'zzz', 'a']),
-- Test case 2: Empty arrays
(2, [], [], [], [], [], [], [], [], []),
-- Test case 3: Single element arrays
(3, [100], [100], [100.0], [100.0], [100.0], [true], ['2023-12-31'], ['2023-12-31 23:59:59'], ['zzz']),
-- Test case 4: All null elements
(4, [NULL, NULL, NULL], [NULL, NULL, NULL], [NULL, NULL, NULL], [NULL, NULL, NULL], [NULL, NULL, NULL],
 [NULL, NULL, NULL], [NULL, NULL, NULL], [NULL, NULL, NULL], [NULL, NULL, NULL]),
-- Test case 5: Null arrays
(5, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
-- Test case 6: Arrays with duplicate values
(6, [5, 5, 5, 3, 3], [5, 5, 5, 3, 3], [5.0, 5.0, 5.0, 3.0, 3.0], [5.0, 5.0, 5.0, 3.0, 3.0],
 [5.0, 5.0, 5.0, 3.0, 3.0], [true, true, true, false, false],
 ['2023-05-05', '2023-05-05', '2023-05-05', '2023-03-03', '2023-03-03'],
 ['2023-05-05 12:00:00', '2023-05-05 12:00:00', '2023-05-05 12:00:00', '2023-03-03 10:00:00', '2023-03-03 10:00:00'],
 ['eee', 'eee', 'eee', 'ccc', 'ccc']);

-- Test INT type with n=3
SELECT id, array_top_n(array_int, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test BIGINT type with n=3
SELECT id, array_top_n(array_bigint, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test FLOAT type with n=3
SELECT id, array_top_n(array_float, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test DOUBLE type with n=3
SELECT id, array_top_n(array_double, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test DECIMALV2 type with n=3
SELECT id, array_top_n(array_decimalv2, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test BOOLEAN type with n=3
SELECT id, array_top_n(array_boolean, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test DATE type with n=3
SELECT id, array_top_n(array_date, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test DATETIME type with n=3
SELECT id, array_top_n(array_datetime, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test VARCHAR type with n=3
SELECT id, array_top_n(array_varchar, 3) AS result FROM test_array_top_n ORDER BY id;

-- Test with n=0 (should return empty array)
SELECT id, array_top_n(array_int, 0) AS result FROM test_array_top_n WHERE id = 1 ORDER BY id;

-- Test with negative n (should return empty array)
SELECT id, array_top_n(array_int, -1) AS result FROM test_array_top_n WHERE id = 1 ORDER BY id;

-- Test with n larger than array size
SELECT id, array_top_n(array_int, 10) AS result FROM test_array_top_n WHERE id = 1 ORDER BY id;

-- Test with n=1
SELECT id, array_top_n(array_int, 1) AS result FROM test_array_top_n WHERE id = 1 ORDER BY id;

-- Test with all null array, n=1
SELECT id, array_top_n(array_int, 1) AS result FROM test_array_top_n WHERE id = 4 ORDER BY id;

-- Test with duplicate values, n=3
SELECT id, array_top_n(array_int, 3) AS result FROM test_array_top_n WHERE id = 6 ORDER BY id;

-- Test inline array with INT
SELECT array_top_n([1, 100, 2, 5, 3], 3) AS result;

-- Test inline array with BIGINT
SELECT array_top_n([1, 100, 2, 5, 3], 3) AS result;

-- Test inline array with VARCHAR
SELECT array_top_n(['hello', 'world', 'aaa', 'zzz', 'mmm'], 3) AS result;

-- Test inline array with NULL values
SELECT array_top_n([1, NULL, 100, NULL, 5], 3) AS result;

-- Test empty inline array
SELECT array_top_n([], 3) AS result;

-- Test NULL array
SELECT array_top_n(NULL, 3) AS result;

-- Clean up
DROP TABLE test_array_top_n;
