-- name: test_deltalake_column_mapping

-- create catalog
create external catalog delta_test_${uuid0} PROPERTIES (
    "type"="deltalake",
    "hive.metastore.uris"="${deltalake_catalog_hive_metastore_uris}",
    "aws.s3.access_key"="${oss_ak}",
    "aws.s3.secret_key"="${oss_sk}",
    "aws.s3.endpoint"="${oss_endpoint}"
);

-- test column mapping mode = name
select col_tinyint,col_array,col_map,col_struct from delta_test_${uuid0}.delta_oss_db.delta_lake_data_type_column_mapping_name where col_tinyint < 6 order by col_tinyint;

-- test column mapping mode = id
select col_tinyint,col_array,col_map,col_struct from delta_test_${uuid0}.delta_oss_db.delta_lake_data_type_column_mapping_id where col_tinyint < 6 order by col_tinyint;

-- test rename with mapping mode = name
select max(new_key) from delta_test_${uuid0}.delta_oss_db.delta_test_column_mapping_name_rename;

-- test rename with mapping mode = id
select max(`Key`) from delta_test_${uuid0}.delta_oss_db.delta_test_column_mapping_id_rename;

--test add column with mapping mode = name
select `key`,`new_key` from delta_test_${uuid0}.delta_oss_db.delta_test_add_column_column_mapping_name order by `key`;

--test add column with mapping mode = id
select `key`,`new_key` from delta_test_${uuid0}.delta_oss_db.delta_test_add_column_column_mapping_id order by `key`;

--test drop column with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_test_drop_column_column_mapping_name order by `key`;

--test drop column with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_test_drop_column_column_mapping_id order by `key`;

--test column case sensitive with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_test_case_sensitive_column_mapping_name order by `KEY`;

--test column case sensitive with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_test_case_sensitive_column_mapping_id order by `KEY`;

--test add struct subfield with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_struct_add_subfield_column_mapping_name order by col_tinyint;

--test add struct subfield with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_struct_add_subfield_column_mapping_id order by col_tinyint;

--test drop struct subfield with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_struct_drop_subfield_column_mapping_name order by col_tinyint;

--test drop struct subfield with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_struct_drop_subfield_column_mapping_id order by col_struct.name;

--test rename struct subfield with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_struct_rename_subfield_column_mapping_name order by col_struct.age;

--test rename struct subfield with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_struct_rename_subfield_column_mapping_id order by col_struct.age;

--test complex type add/rename subfield with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_complex_type_column_mapping_name order by col_tinyint;

--test complex type add/rename subfield with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_complex_type_column_mapping_id order by col_tinyint;

--test nested struct with mapping mode = name
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_nested_struct_column_mapping_name order by col_tinyint;

--test nested struct with mapping mode = id
select * from delta_test_${uuid0}.delta_oss_db.delta_lake_nested_struct_column_mapping_id order by col_tinyint;

-- drop catalog
drop catalog delta_test_${uuid0}