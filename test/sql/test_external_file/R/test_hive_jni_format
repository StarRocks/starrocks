-- name: testHiveAvroFormat
[UC]shell: avro_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/avro_format/"
-- result:
0
oss://starrocks-sql-data-zhangjiakou/jiangyangjun/test_hive_format/6b0377419cd9415ca99730984a0b5bdd/avro_format/
-- !result
shell: ossutil64 mkdir ${avro_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.avro ${avro_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 1,711. OK num: 1(upload 1 files).
-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.avro ${avro_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 1,713. OK num: 1(upload 1 files).
-- !result
CREATE EXTERNAL TABLE test_hive_avro_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${avro_prefix[1]}",
    "format" = "avro"
);
-- result:
-- !result
select * from test_hive_avro_format where col_string = 'world';
-- result:
7	13	74	13000000000	6.15	4.376	57.30	world	Char      	Varchar	1	2022-01-01 10:00:00	2022-01-01	["A","B","C"]	{"key1":1,"key2":2}	{"name":"John","age":30}
-- !result
select * from test_hive_avro_format where abs(col_float - 1.23) < 0.01 ;
-- result:
1	2	3	10000000000	1.23	3.14	100.50	you	are       	beautiful	0	2023-10-29 10:00:00	2023-10-29	["D","E","F"]	{"k1":3,"k2":5}	{"name":"chandler","age":54}
-- !result
shell: ossutil64 rm -rf ${avro_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
-- name: testHiveRcbinayFormat
[UC]shell: rcbinary_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/rcbinary_format/"
-- result:
0
oss://starrocks-sql-data-zhangjiakou/jiangyangjun/test_hive_format/02561ddbf0d3462291421277dd0a5f85/rcbinary_format/
-- !result
shell: ossutil64 mkdir ${rcbinary_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.rcbinary ${rcbinary_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 219. OK num: 1(upload 1 files).
-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.rcbinary ${rcbinary_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 219. OK num: 1(upload 1 files).
-- !result
CREATE EXTERNAL TABLE test_hive_rcbinary_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${rcbinary_prefix[1]}",
    "format" = "rcbinary"
);
-- result:
-- !result
select * from test_hive_rcbinary_format where col_string = 'world';
-- result:
7	13	74	13000000000	6.15	4.376	57.30	world	Char      	Varchar	1	2022-01-01 10:00:00	2022-01-01	["A","B","C"]	{"key2":2,"key1":1}	{"name":"John","age":30}
-- !result
select * from test_hive_rcbinary_format where abs(col_float - 1.23) < 0.01 ;
-- result:
1	2	3	10000000000	1.23	3.14	100.50	you	are       	beautiful	0	2023-10-29 10:00:00	2023-10-29	["D","E","F"]	{"k2":5,"k1":3}	{"name":"chandler","age":54}
-- !result
shell: ossutil64 rm -rf ${rcbinary_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
-- name: testHiveRctextFormat
[UC]shell: rctext_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/rctext_format/"
-- result:
0
oss://starrocks-sql-data-zhangjiakou/jiangyangjun/test_hive_format/aed623c49aee42a3b3fc7db5f14ae03f/rctext_format/
-- !result
shell: ossutil64 mkdir ${rctext_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.rctext ${rctext_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 243. OK num: 1(upload 1 files).
-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.rctext ${rctext_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 244. OK num: 1(upload 1 files).
-- !result
CREATE EXTERNAL TABLE test_hive_rctext_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${rctext_prefix[1]}",
    "format" = "rctext"
);
-- result:
-- !result
select * from test_hive_rctext_format where col_string = 'world';
-- result:
7	13	74	13000000000	6.15	4.376	57.30	world	Char      	Varchar	1	2022-01-01 10:00:00	2022-01-01	["A","B","C"]	{"key2":2,"key1":1}	{"name":"John","age":30}
-- !result
select * from test_hive_rctext_format where abs(col_float - 1.23) < 0.01 ;
-- result:
1	2	3	10000000000	1.23	3.14	100.50	you	are       	beautiful	0	2023-10-29 10:00:00	2023-10-29	["D","E","F"]	{"k2":5,"k1":3}	{"name":"chandler","age":54}
-- !result
shell: ossutil64 rm -rf ${rctext_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
-- name: testHiveSequenceFormat
[UC]shell: sequence_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/sequence_format/"
-- result:
0
oss://starrocks-sql-data-zhangjiakou/jiangyangjun/test_hive_format/218bc5071119479b9b2715f6dd335b8b/sequence_format/
-- !result
shell: ossutil64 mkdir ${sequence_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.seq ${sequence_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 225. OK num: 1(upload 1 files).
-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.seq ${sequence_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 224. OK num: 1(upload 1 files).
-- !result
CREATE EXTERNAL TABLE test_hive_sequence_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${sequence_prefix[1]}",
    "format" = "sequence"
);
-- result:
-- !result
select * from test_hive_sequence_format where col_string = 'world';
-- result:
7	13	74	13000000000	6.15	4.376	57.30	world	Char      	Varchar	1	2022-01-01 10:00:00	2022-01-01	["A","B","C"]	{"key2":2,"key1":1}	{"name":"John","age":30}
-- !result
select * from test_hive_sequence_format where abs(col_float - 1.23) < 0.01 ;
-- result:
1	2	3	10000000000	1.23	3.14	100.50	you	are       	beautiful	0	2023-10-29 10:00:00	2023-10-29	["D","E","F"]	{"k2":5,"k1":3}	{"name":"chandler","age":54}
-- !result
shell: ossutil64 rm -rf ${sequence_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
-- name: testHiveStructCharAndVarchar
[UC]shell: struct_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/strcut/"
-- result:
0
oss://starrocks-sql-data-zhangjiakou/jiangyangjun/test_hive_format/79be5723e1a347e8a65259f8115f89a8/strcut/
-- !result
shell: ossutil64 mkdir ${struct_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/struct.seq ${struct_prefix[1]} | grep -Pv "(average|elapsed)"
-- result:
0

Succeed: Total num: 1, size: 15,266. OK num: 1(upload 1 files).
-- !result
CREATE TABLE `hive_hdfs_sequencefile_struct_mix_deflate` (
  `col_int` int,
  `col_string` varchar(1048576),
  `col_struct` struct<c_int int(11), c_float float, c_double double, c_char char(30), c_varchar varchar(200), c_date date, c_timestamp datetime, c_boolean boolean>
)
ENGINE=file
PROPERTIES 
(
    "path" = "${struct_prefix[1]}",
    "format" = "sequence"
);
-- result:
-- !result
select col_int,col_struct from hive_hdfs_sequencefile_struct_mix_deflate order by 1 limit 1;
-- result:
-2144975700	{"c_int":1102434235,"c_float":-9972.251,"c_double":18.68127,"c_char":"(115)699-5565x12614           ","c_varchar":"Mozilla/5.0 (compatible; MSIE 5.0; Windows 95; Trident/4.1)","c_date":"2000-01-29","c_timestamp":"2000-11-10 11:01:59","c_boolean":1}
-- !result
shell: ossutil64 rm -rf ${struct_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null
-- result:
0

-- !result