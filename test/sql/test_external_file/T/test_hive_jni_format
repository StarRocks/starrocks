------------------------------------
-------------- DATA ----------------
-- two files, every file has one tuple with 16 different type of column

------------------------------------
------------------------------------
-- name: testHiveAvroFormat

[UC]shell: avro_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/avro_format/"
shell: ossutil64 mkdir ${avro_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.avro ${avro_prefix[1]} | grep -Pv "(average|elapsed)"
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.avro ${avro_prefix[1]} | grep -Pv "(average|elapsed)"


CREATE EXTERNAL TABLE test_hive_avro_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${avro_prefix[1]}",
    "format" = "avro"
);


select * from test_hive_avro_format where col_string = 'world';
select * from test_hive_avro_format where abs(col_float - 1.23) < 0.01 ;

shell: ossutil64 rm -rf ${avro_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null


-- name: testHiveRcbinayFormat

[UC]shell: rcbinary_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/rcbinary_format/"
shell: ossutil64 mkdir ${rcbinary_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.rcbinary ${rcbinary_prefix[1]} | grep -Pv "(average|elapsed)"
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.rcbinary ${rcbinary_prefix[1]} | grep -Pv "(average|elapsed)"


CREATE EXTERNAL TABLE test_hive_rcbinary_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${rcbinary_prefix[1]}",
    "format" = "rcbinary"
);


select * from test_hive_rcbinary_format where col_string = 'world';
select * from test_hive_rcbinary_format where abs(col_float - 1.23) < 0.01 ;

shell: ossutil64 rm -rf ${rcbinary_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null

-- name: testHiveRctextFormat

[UC]shell: rctext_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/rctext_format/"
shell: ossutil64 mkdir ${rctext_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.rctext ${rctext_prefix[1]} | grep -Pv "(average|elapsed)"
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.rctext ${rctext_prefix[1]} | grep -Pv "(average|elapsed)"


CREATE EXTERNAL TABLE test_hive_rctext_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${rctext_prefix[1]}",
    "format" = "rctext"
);


select * from test_hive_rctext_format where col_string = 'world';
select * from test_hive_rctext_format where abs(col_float - 1.23) < 0.01 ;

shell: ossutil64 rm -rf ${rctext_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null

-- name: testHiveSequenceFormat

[UC]shell: sequence_prefix=echo "oss://${oss_bucket}/test_hive_format/${uuid0}/sequence_format/"
shell: ossutil64 mkdir ${sequence_prefix[1]} > /dev/null || echo "exit 0" >/dev/null
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_1.seq ${sequence_prefix[1]} | grep -Pv "(average|elapsed)"
shell: ossutil64 cp --force ../be/test/exec/test_data/jni_scanner/test_hive_format/row_2.seq ${sequence_prefix[1]} | grep -Pv "(average|elapsed)"


CREATE EXTERNAL TABLE test_hive_sequence_format
(
    col_tinyint TINYINT,
    col_smallint SMALLINT,
    col_int INT,
    col_bigint BIGINT,
    col_float FLOAT,
    col_double DOUBLE,
    col_decimal DECIMAL(10,2),
    col_string STRING,
    col_char CHAR(10),
    col_varchar VARCHAR(20),
    col_boolean BOOLEAN,
    col_timestamp DATETIME,
    col_date DATE,
    col_array ARRAY<STRING>,
    col_map MAP<STRING, INT>,
    col_struct STRUCT<name STRING, age INT>
) 
ENGINE=file
PROPERTIES 
(
    "path" = "${sequence_prefix[1]}",
    "format" = "sequence"
);


select * from test_hive_sequence_format where col_string = 'world';
select * from test_hive_sequence_format where abs(col_float - 1.23) < 0.01 ;

shell: ossutil64 rm -rf ${sequence_prefix[1]}  >/dev/null || echo "exit 0" >/dev/null