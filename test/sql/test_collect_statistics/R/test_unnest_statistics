-- name: test_unnest_statistics
create database test_unnest;
-- result:
-- !result
use test_unnest;
-- result:
-- !result
CREATE TABLE student_score
(
    `id` bigint(20) NULL COMMENT "",
    `scores` ARRAY<int> NULL COMMENT ""
)
DUPLICATE KEY (id)
DISTRIBUTED BY HASH(`id`)
properties("replication_num"="1");
-- result:
-- !result
INSERT INTO student_score VALUES
(1, [80,85,87]),
(2, [77, null, 89]),
(3, null),
(4, []),
(5, [90,92]);
-- result:
-- !result
analyze table student_score with sync mode;
-- result:
test_unnest.student_score	analyze	status	OK
-- !result
function: assert_explain_costs_contains("SELECT id, scores, unnest FROM student_score, unnest(scores) AS unnest", "cardinality: 10")
-- result:
None
-- !result
function: assert_explain_costs_contains("SELECT id, scores, unnest FROM student_score LEFT JOIN unnest(scores) AS unnest ON TRUE ORDER BY 1, 3", "cardinality: 10")
-- result:
None
-- !result
CREATE TABLE example_table (
id varchar(65533) NULL COMMENT "",
type varchar(65533) NULL COMMENT "",
scores ARRAY<int> NULL COMMENT ""
) ENGINE=OLAP
DUPLICATE KEY(id)
COMMENT "OLAP"
DISTRIBUTED BY HASH(id)
PROPERTIES (
"replication_num" = "1");
-- result:
-- !result
INSERT INTO example_table VALUES
("1", "typeA;typeB", [80,85,88]),
("2", "typeA;typeB;typeC", [87,90,95]);
-- result:
-- !result
analyze table example_table with sync mode;
-- result:
test_unnest.example_table	analyze	status	OK
-- !result
function: assert_explain_costs_contains("SELECT id, unnest.type, unnest.scores FROM example_table, unnest(split(type, \";\"), scores) AS unnest(type,scores)", "cardinality: 6")
-- result:
None
-- !result