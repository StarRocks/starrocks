-- name: test_iceberg_null_partition
create external catalog iceberg_sql_test_${uuid0} PROPERTIES (
    "type"  =  "iceberg",
    "iceberg.catalog.type"  =  "hive",
    "iceberg.catalog.hive.metastore.uris"="${hive_metastore_uris}",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}",
    "enable_iceberg_metadata_cache" = "false"
);
-- result:
-- !result
create database iceberg_sql_test_${uuid0}.iceberg_db_${uuid0} properties (
    "location" = "oss://${oss_bucket}/iceberg_db_${uuid0}/test_iceberg_partition_transform_sink/${uuid0}"
);
-- result:
-- !result
create external table iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} (k1 int, k2 string) partition by (k2);
-- result:
-- !result
insert into iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} select 1, NULL;
-- result:
-- !result
insert into iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} select 2, "null";
-- result:
-- !result
select * from iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} order by k1;
-- result:
1	None
2	null
-- !result
select * from iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} where k2 is null;
-- result:
1	None
-- !result
select * from iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} where k2 = "null";
-- result:
2	null
-- !result
drop table iceberg_sql_test_${uuid0}.iceberg_db_${uuid0}.ice_tbl_${uuid0} force;
-- result:
-- !result
drop database iceberg_sql_test_${uuid0}.iceberg_db_${uuid0};
-- result:
-- !result
drop catalog iceberg_sql_test_${uuid0};
-- result:
-- !result