-- name: test_iceberg_v2
create external catalog iceberg_sql_test_${uuid0} PROPERTIES ("type"="iceberg", "iceberg.catalog.type"="hive", "iceberg.catalog.hive.metastore.uris"="${iceberg_catalog_hive_metastore_uris}","enable_iceberg_metadata_cache"="true");
-- result:
[]
-- !result
/*
 CREATE TABLE `hive_catalog`.`iceberg_ci_db`.`iceberg_v2_orc_unpartitioned_table` (
  `k1` INT NOT NULL,
  `k2` VARCHAR(2147483647),
  CONSTRAINT `7193cf04-1e4f-4aec-be16-2aa54bb92b4c` PRIMARY KEY (`k1`) NOT ENFORCED
) WITH (
  'write-format' = 'orc',
  'write.upsert.enabled' = 'true'
)
*/

select * from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_unpartitioned_table order by k1;
-- result:
1	tianjing
2	guangzhou
-- !result
select k2 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_unpartitioned_table order by k2;
-- result:
guangzhou
tianjing
-- !result
select count(*) from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_unpartitioned_table;
-- result:
2
-- !result
select k1 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_unpartitioned_table group by k1 having count(1) > 1;
-- result:
-- !result
/*
CREATE TABLE `hive_catalog`.`iceberg_ci_db`.`iceberg_v2_orc_partitioned_table` (
  `k1` INT NOT NULL,
  `k2` VARCHAR(2147483647),
  `k3` VARCHAR(2147483647) NOT NULL,
  CONSTRAINT `cfcc11a4-b515-44e8-a6c2-5fe99a2e92ee` PRIMARY KEY (`k1`, `k3`) NOT ENFORCED
) PARTITIONED BY (`k3`)
WITH (
  'write-format' = 'orc',
  'write.upsert.enabled' = 'true'
)
*/

select * from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_partitioned_table order by k1;
-- result:
1	beijing	zhangsan
2	shanghai	lisi
-- !result
select k2 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_partitioned_table order by k2;
-- result:
beijing
shanghai
-- !result
select k3 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_partitioned_table order by k1;
-- result:
zhangsan
lisi
-- !result
select count(*) from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_partitioned_table;
-- result:
2
-- !result
select k1,k3 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_orc_partitioned_table group by k1,k3 having count(1) > 1;
-- result:
-- !result

/*
 CREATE TABLE `hive_catalog`.`iceberg_ci_db`.`iceberg_v2_parquet_unpartitioned_table` (
  `k1` INT NOT NULL,
  `k2` VARCHAR(2147483647),
  CONSTRAINT `7193cf04-1e4f-4aec-be16-2aa54bb92b4c` PRIMARY KEY (`k1`) NOT ENFORCED
) WITH (
  'write-format' = 'parquet',
  'write.upsert.enabled' = 'true'
)
*/

select * from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_unpartitioned_table order by k1;
-- result:
1	tianjing
2	guangzhou
-- !result
select k2 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_unpartitioned_table order by k2;
-- result:
guangzhou
tianjing
-- !result
select count(*) from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_unpartitioned_table;
-- result:
2
-- !result
select k1 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_unpartitioned_table group by k1 having count(1) > 1;
-- result:
-- !result
/*
CREATE TABLE `hive_catalog`.`iceberg_ci_db`.`iceberg_v2_parquet_partitioned_table` (
  `k1` INT NOT NULL,
  `k2` VARCHAR(2147483647),
  `k3` VARCHAR(2147483647) NOT NULL,
  CONSTRAINT `cfcc11a4-b515-44e8-a6c2-5fe99a2e92ee` PRIMARY KEY (`k1`, `k3`) NOT ENFORCED
) PARTITIONED BY (`k3`)
WITH (
  'write-format' = 'parquet',
  'write.upsert.enabled' = 'true'
)
*/

select * from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_partitioned_table order by k1;
-- result:
1	beijing	zhangsan
2	shanghai	lisi
-- !result
select k2 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_partitioned_table order by k2;
-- result:
beijing
shanghai
-- !result
select k3 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_partitioned_table order by k1;
-- result:
zhangsan
lisi
-- !result
select count(*) from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_partitioned_table;
-- result:
2
-- !result
select k1,k3 from iceberg_sql_test_${uuid0}.iceberg_ci_db.iceberg_v2_parquet_partitioned_table group by k1,k3 having count(1) > 1;
-- result:
-- !result

drop catalog iceberg_sql_test_${uuid0};
-- result:
[]
-- !result