-- name: test_semi_cast
CREATE TABLE __row_util_base (
  k1 bigint NULL
) DISTRIBUTED BY HASH(`k1`) BUCKETS 64
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into __row_util_base select generate_series from TABLE(generate_series(0, 10000 - 1));
-- result:
-- !result
insert into __row_util_base select * from __row_util_base; -- 20000
insert into __row_util_base select * from __row_util_base; -- 40000
insert into __row_util_base select * from __row_util_base; -- 80000
insert into __row_util_base select * from __row_util_base; -- 160000
insert into __row_util_base select * from __row_util_base; -- 320000
insert into __row_util_base select * from __row_util_base; -- 640000
insert into __row_util_base select * from __row_util_base; -- 1280000

CREATE TABLE __row_util (
  idx bigint NULL
) DISTRIBUTED BY HASH(`idx`) BUCKETS 64
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into __row_util select row_number() over() as idx from __row_util_base;
-- result:
-- !result
CREATE TABLE t1 (
    k1 bigint NULL,

    c_int bigint NULL,

    c_json JSON NULL,
    c_array_int ARRAY<INT> NULL,
    c_map MAP<INT, INT> NULL,
    c_struct STRUCT<k1 INT, k2 INT> NULL
) DISTRIBUTED BY HASH(`k1`) BUCKETS 64
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
INSERT INTO t1
SELECT
    idx,

    idx,

    json_object('k1', idx, 'k2', idx + 1),
    [idx, idx + 1, idx + 2, idx + 3],
    map{0: idx, 1: idx + 1, 2: idx + 2},
    struct(idx, idx + 1)
FROM __row_util;
-- result:
-- !result
INSERT INTO t1 (k1) SELECT idx from __row_util order by idx limit 10000;
-- result:
-- !result
select count(1) from t1 where c_int > 0 AND (
    c_array_int in (cast("[10, 11,12,13]" as array<INT>)) 
    OR c_array_int in (cast("[20, 21,22,23]" as array<INT>))
);
-- result:
2
-- !result
select count(1) from t1 where 
    c_array_int in (cast(parse_json("[10, 11,12,13]") as array<INT>)) 
    OR c_array_int in (cast(parse_json("[20, 21,22,23]") as array<INT>));
-- result:
2
-- !result
select count(1) from t1 where 
    c_int in (cast(parse_json("[10, 11,12,13]") as array<INT>)[1]) 
    OR c_int in (cast(parse_json("[20, 21,22,23]") as array<INT>)[1]);
-- result:
2
-- !result
select count(1) from t1 where (
    c_array_int in ([10, 11, 12, 13]) 
    OR c_array_int not in ([11, 12, 12, 14]) 
);
-- result:
1280000
-- !result
select count(1) from t1 where (
    c_array_int in (cast(['1', 11, 12, 13] as array<int>)) 
    OR c_array_int not in ([11, 12, 12, 14]) 
);
-- result:
1280000
-- !result
select count(1) from t1 where 
    c_int =cast(['1', 11, 12, 13] as array<int>)[1]
    OR c_int = [11, 12, 12, 14][1];
-- result:
2
-- !result
select count(1) from t1 where (
    c_map in (map{0: 10, 1: 10 + 1, 2: 10 + 2}, map{0: 100000, 1: 100000 + 1, 2: 100000 + 2}, map{0: 1000000, 1: 1000000 + 1, 2: 1000000 + 2}) 
    OR c_map not in (map{0: 10, 1: 10 + 1, 2: 10 + 2}, map{0: 100000, 1: 100000 + 1, 2: 100000 + 2}, map{0: 1000000, 1: 1000000 + 1, 2: 1000000 + 2})
);
-- result:
1280000
-- !result
select count(1) from t1 where 
    c_int > 0 and (
    c_map in (cast (map{0: '10', 1: 11, 2: 12} as map<int, int>)) 
    OR c_map in (cast (map{0: '20', 1: 21, 2: 22} as map<int, int>)) 
);
-- result:
2
-- !result
select count(1) from t1 where 
    c_int = cast (map{0: '10', 1: 11, 2: 12} as map<int, int>)[0]
    OR c_int = cast (map{0: '20', 1: 21, 2: 22} as map<int, int>)[0];
-- result:
2
-- !result
select count(1) from t1 where 
    c_struct in (struct(10, 11)) 
    OR c_struct not in (struct(20, 21)) ;
-- result:
1279999
-- !result