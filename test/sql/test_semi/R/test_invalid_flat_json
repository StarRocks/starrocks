-- name: test_flat_not_object_json_load @system
CREATE TABLE `js1` (
  `v1` bigint(20) NULL COMMENT "",
  `v2` int(11) NULL COMMENT "",
  `j1` json NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`v1`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`v1`) BUCKETS 10 
PROPERTIES (
"replication_num" = "1",
"in_memory" = "false",
"enable_persistent_index" = "false",
"replicated_storage" = "false",
"fast_schema_evolution" = "true",
"compression" = "LZ4"
);
-- result:
-- !result
insert into js1 values(1,1, parse_json('[{"s1": 4}, {"s2": 5}]'));
-- result:
-- !result
insert into js1 values(2,1, parse_json('"a"'));
-- result:
-- !result
insert into js1 values(3,1, parse_json('1'));
-- result:
-- !result
insert into js1 values(4,1, parse_json('2020-12-12'));
-- result:
-- !result
insert into js1 values(5,1, parse_json('1.000000'));
-- result:
-- !result
insert into js1 values(6,1, parse_json(''));
-- result:
-- !result
insert into js1 values(6,1, parse_json(null));
-- result:
-- !result
insert into js1 values(6,1, parse_json(TRUE));
-- result:
-- !result
insert into js1 values(7,1, parse_json('{"k1": null, "k2": 2}'));
-- result:
-- !result
select get_json_string(j1, "$.key2"), get_json_double(j1, "$.key3"), get_json_string(j1, "$.key4") from js1 order by v1 limit 2;
-- result:
None	None	None
None	None	None
-- !result
select JSON_EXISTS(j1, "$.key2"), JSON_EXISTS(j1, "$.key2.key3") from js1 order by v1 limit 2;
-- result:
0	0
0	0
-- !result
select JSON_LENGTH(j1, "$.key2"), JSON_LENGTH(j1, "$.key3"), JSON_LENGTH(j1, "$.key4") from js1 order by v1 limit 2;
-- result:
0	0	0
0	0	0
-- !result
select json_object('"1"')->"1", json_object('"1"')->"1" is null;
-- result:
null	0
-- !result
select json_object(j1)->"k3", json_object(j1)->"k1", json_object(j1)->"k2.k3" from js1 where v1 = 7;
-- result:
None	None	None
-- !result