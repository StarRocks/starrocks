-- name: test_pipeline_level_runtime_filter
DROP TABLE if exists t0;
-- result:
-- !result
CREATE TABLE if not exists t0
(
dt DATE NOT NULL,
c0 INT NOT NULL,
c1 INT NOT NULL
) ENGINE=OLAP
DUPLICATE KEY(`dt`, `c0`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`c0`) BUCKETS 24
PROPERTIES(
"replication_num" = "1",
"storage_format" = "default",
"colocate_with" = "cgroup0"
);
-- result:
-- !result
DROP TABLE if exists t1;
-- result:
-- !result
CREATE TABLE if not exists t1
(
dt DATE NOT NULL,
c0 INT NOT NULL,
c1 INT NOT NULL
) ENGINE=OLAP
DUPLICATE KEY(`dt`, `c0`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`c0`) BUCKETS 24
PROPERTIES(
"replication_num" = "1",
"storage_format" = "default",
"colocate_with" = "cgroup0"
);
-- result:
-- !result
DROP TABLE if exists seed0;
-- result:
-- !result
CREATE TABLE if not exists seed0
(
c INT NOT NULL
) ENGINE=OLAP
DUPLICATE KEY(`c`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`c`) BUCKETS 32
PROPERTIES(
"replication_num" = "1",
"storage_format" = "default"
);
-- result:
-- !result
INSERT INTO seed0
  (c)
  select row_number() over() as r from (SELECT __tbl_7.__col_4 AS __col_8, __tbl_7.__col_5 AS __col_9, __tbl_7.__col_6 AS __col_10, __tbl_8.__col_7 AS __col_11 from (SELECT __tbl_4.__col_1 AS __col_4, __tbl_4.__col_2 AS __col_5, __tbl_5.__col_3 AS __col_6 from (SELECT __tbl_1.v AS __col_1, __tbl_2.__col_0 AS __col_2 from (select v from (values(0)) t(v)) AS __tbl_1, (SELECT __tbl_0.column_0 AS __col_0 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101)) __tbl_0) AS __tbl_2) AS __tbl_4, (SELECT __tbl_3.column_0 AS __col_3 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99)) __tbl_3) AS __tbl_5) AS __tbl_7, (SELECT __tbl_6.column_0 AS __col_7 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99)) __tbl_6) AS __tbl_8) as __tbl_9;
-- result:
-- !result
DROP TABLE if exists seed1;
-- result:
-- !result
CREATE TABLE if not exists seed1
(
c INT NOT NULL
) ENGINE=OLAP
DUPLICATE KEY(`c`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`c`) BUCKETS 32
PROPERTIES(
"replication_num" = "1",
"storage_format" = "default"
);
-- result:
-- !result
INSERT INTO seed1
  (c)
  select row_number() over() as r from (SELECT __tbl_10.__col_8 AS __col_13, __tbl_10.__col_9 AS __col_14, __tbl_10.__col_10 AS __col_15, __tbl_10.__col_11 AS __col_16, __tbl_11.__col_12 AS __col_17 from (SELECT __tbl_7.__col_4 AS __col_8, __tbl_7.__col_5 AS __col_9, __tbl_7.__col_6 AS __col_10, __tbl_8.__col_7 AS __col_11 from (SELECT __tbl_4.__col_1 AS __col_4, __tbl_4.__col_2 AS __col_5, __tbl_5.__col_3 AS __col_6 from (SELECT __tbl_1.v AS __col_1, __tbl_2.__col_0 AS __col_2 from (select v from (values(0)) t(v)) AS __tbl_1, (SELECT __tbl_0.column_0 AS __col_0 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) __tbl_0) AS __tbl_2) AS __tbl_4, (SELECT __tbl_3.column_0 AS __col_3 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99)) __tbl_3) AS __tbl_5) AS __tbl_7, (SELECT __tbl_6.column_0 AS __col_7 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99)) __tbl_6) AS __tbl_8) AS __tbl_10, (SELECT __tbl_9.column_0 AS __col_12 from (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99)) __tbl_9) AS __tbl_11) as __tbl_12;
-- result:
-- !result
INSERT INTO t0
  (dt, c0, c1)
  select to_date(days_add('2023-01-01', cast((rand()+rand())*31/2 as int))) as __col_0, cast((rand()+rand())*100000/2 as int) as __col_1, cast((rand()+rand())*100000/2 as int) as __col_2 from (SELECT c FROM seed0) __tbl_0;
-- result:
-- !result
INSERT INTO t1
  (dt, c0, c1)
  select to_date(days_add('2023-01-01', cast((rand()+rand())*365/2 as int))) as __col_3, cast((rand()+rand())*10000000/2 as int) as __col_4, cast((rand()+rand())*10000000/2 as int) as __col_5 from (SELECT c FROM seed1) __tbl_1;
-- result:
-- !result
set enable_profile='true';
-- result:
-- !result
show variables like 'enable_profile';
-- result:
enable_profile	true
-- !result
[UC]analyze full table t0;
-- result:
test_db_01537196b05811eebd1600163e04d4c2.t0	analyze	status	OK
-- !result
[UC]analyze full table t1;
-- result:
test_db_01537196b05811eebd1600163e04d4c2.t1	analyze	status	OK
-- !result
set runtime_filter_scan_wait_time='1000';
-- result:
-- !result
set enable_pipeline_level_multi_partitioned_rf='false';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set pipeline_dop='1';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set enable_pipeline_level_multi_partitioned_rf='true';
-- result:
-- !result
set enable_tablet_internal_parallel='false';
-- result:
-- !result
set pipeline_dop='3';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set pipeline_dop='1';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set pipeline_dop='0';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set enable_tablet_internal_parallel='true';
-- result:
-- !result
set pipeline_dop='48';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set pipeline_dop='1';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
set pipeline_dop='0';
-- result:
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[shuffle] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[colocate] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[broadcast] t0 on t0.c0 = t1.c0) as t union all select  (sum(murmur_hash3_32(ifnull(dt_0,0))+murmur_hash3_32(ifnull(c0_0,0))+murmur_hash3_32(ifnull(c1_0,0))+murmur_hash3_32(ifnull(dt_1,0))+murmur_hash3_32(ifnull(c0_1,0))+murmur_hash3_32(ifnull(c1_1,0)))) as fingerprint from (select t0.dt as dt_0,t0.c0 as c0_0,t0.c1 as c1_0,t1.dt as dt_1,t1.c0 as c0_1,t1.c1 as c1_1 from t1 inner join[bucket] t0 on t0.c0 = t1.c0) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
select assert_true(count(distinct fingerprint)<=1) from (select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[colocate] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t union all select  (sum(murmur_hash3_32(ifnull(a,0))+murmur_hash3_32(ifnull(b,0))+murmur_hash3_32(ifnull(c,0))+murmur_hash3_32(ifnull(d,0)))) as fingerprint from (select t1.c0 as a,t1.c1 as b,t1.dt as c,tbl1.dt as d from t1 join[broadcast] (select t0.c0 from t0 inner join[broadcast] t1 on t0.c0 = t1.c0 where t1.dt between '2023-01-01' and '2023-03-31') tbl0 on t1.c0 = tbl0.c0 join[bucket] t1 as tbl1 on t1.c0 = tbl1.c0 and t1.c0 between 1 and 10000 and tbl1.c0 between 9990 and 10010) as t) t;
-- result:
1
-- !result
