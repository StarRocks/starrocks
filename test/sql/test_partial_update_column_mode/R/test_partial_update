-- name: test_partial_update
show backends;
CREATE table tab1 (
      k1 INTEGER,
      k2 VARCHAR(50),
      v1 INTEGER,
      v2 INTEGER,
      v3 INTEGER,
      v4 varchar(50),
      v5 varchar(50)
)
ENGINE=OLAP
PRIMARY KEY(`k1`,`k2`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 10
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
CREATE table tab2 (
      k1 INTEGER,
      v1 INTEGER,
      v2 INTEGER,
      v3 INTEGER
)
ENGINE=OLAP
PRIMARY KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 10
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into tab1 values (100, "k2_100", 100, 100, 100, "v4_100", "v5_100");
-- result:
-- !result
insert into tab1 values (200, "k2_200", 200, 200, 200, "v4_200", "v5_200");
-- result:
-- !result
insert into tab1 values (300, "k3_300", 300, 300, 300, "v4_300", "v5_300");
-- result:
-- !result
select * from tab1;
-- result:
100	k2_100	100	100	100	v4_100	v5_100
200	k2_200	200	200	200	v4_200	v5_200
300	k3_300	300	300	300	v4_300	v5_300
-- !result
insert into tab2 values (100, 100, 100, 100);
-- result:
-- !result
insert into tab2 values (200, 200, 200, 200);
-- result:
-- !result
insert into tab2 values (300, 300, 300, 300);
-- result:
-- !result
select * from tab2;
-- result:
100	100	100	100
200	200	200	200
300	300	300	300
-- !result
update tab1 set v1 = (select sum(tab2.v1) from tab2), v2 = (select sum(tab2.v2) from tab2), v3 = 1000;
-- result:
E: (1064, 'Getting analyzing error. Detail message: must specify where clause to prevent full table update.')
-- !result
select * from tab1;
-- result:
200	k2_200	200	200	200	v4_200	v5_200
100	k2_100	100	100	100	v4_100	v5_100
300	k3_300	300	300	300	v4_300	v5_300
-- !result
update tab1 set v1 = (select sum(tab2.v1) from tab2), v2 = (select sum(tab2.v2) from tab2) where k1 = 100;
-- result:
-- !result
select * from tab1;
-- result:
100	k2_100	600	600	100	v4_100	v5_100
200	k2_200	200	200	200	v4_200	v5_200
300	k3_300	300	300	300	v4_300	v5_300
-- !result
update tab1 set v1 = (select sum(tab2.v1) from tab2), v2 = (select sum(tab2.v2) from tab2);
-- result:
-- !result
select * from tab1;
-- result:
200	k2_200	600	600	200	v4_200	v5_200
100	k2_100	600	600	100	v4_100	v5_100
300	k3_300	600	600	300	v4_300	v5_300
-- !result
CREATE table tab3 (
      k1 INTEGER,
      k2 VARCHAR(50),
      v1 INTEGER,
      v2 INTEGER,
      v3 INTEGER,
      v4 varchar(50),
      v5 varchar(50)
)
ENGINE=OLAP
PRIMARY KEY(`k1`,`k2`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 10
ORDER BY (`v1`, `v2`)
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into tab3 values (100, "k2_100", 100, 100, 100, "v4_100", "v5_100");
-- result:
-- !result
insert into tab3 values (200, "k2_200", 200, 200, 200, "v4_200", "v5_200");
-- result:
-- !result
insert into tab3 values (300, "k3_300", 300, 300, 300, "v4_300", "v5_300");
-- result:
-- !result
select * from tab3;
-- result:
100	k2_100	100	100	100	v4_100	v5_100
200	k2_200	200	200	200	v4_200	v5_200
300	k3_300	300	300	300	v4_300	v5_300
-- !result
update tab3 set v1 = 1111, v2 = (select sum(tab2.v2) from tab2);
-- result:
[REGEX].*column mode partial update on table with sort key cannot update sort key column.*
-- !result
select * from tab3;
-- result:
100	k2_100	100	100	100	v4_100	v5_100
300	k3_300	300	300	300	v4_300	v5_300
200	k2_200	200	200	200	v4_200	v5_200
-- !result
-- name: test_partial_update_with_expr
create database test_partial_update_with_expr;
-- result:
-- !result
use test_partial_update_with_expr;
-- result:
-- !result
CREATE TABLE `tab1` (
  `k1` bigint(20) NOT NULL COMMENT "",
  `v1` bigint(20) NULL COMMENT "",
  `v2` bigint(20) NULL COMMENT "",
  `v3` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT ""
) ENGINE=OLAP
PRIMARY KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 1
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);
-- result:
-- !result
insert into tab1 values (101, 1, 1, '2024-08-27 00:00:00');
-- result:
-- !result
insert into tab1 values (201, 2, 2, '2024-08-27 00:00:00');
-- result:
-- !result
select count(1) from tab1 where 'v3' is not null;
-- result:
2
-- !result
insert into tab1 (k1, v1, v2) values (301, 3, 3);
-- result:
-- !result
select count(1) from tab1 where 'v3' is not null;
-- result:
3
-- !result
shell: curl --location-trusted -u root: -T ${root_path}/lib/../common/data/stream_load/sr_partial_update_5.csv -XPUT -H partial_update:true -H label:stream_load_partial_update_123433 -H column_separator:, -H columns:k1,v1,v2 ${url}/api/test_partial_update_with_expr/tab1/_stream_load
-- result:
0
{
    "Status": "Success",
    "Message": "OK"
}
-- !result
sync;
-- result:
-- !result
select count(1) from tab1 where 'v3' is not null;
-- result:
5
-- !result
shell: curl --location-trusted -u root: -T ${root_path}/lib/../common/data/stream_load/sr_auto_increment_partial_update_only.csv -XPUT -H partial_update:true  -H partial_update_mode:column -H label:stream_load_partial_update_123434 -H column_separator:, -H columns:k1,v1,v2 ${url}/api/test_partial_update_with_expr/tab1/_stream_load
-- result:
0
{
    "Status": "Success",
    "Message": "OK"
}
-- !result
sync;
-- result:
-- !result
select count(1) from tab1 where 'v3' is not null;
-- result:
7
-- !result
drop database test_partial_update_with_expr;
-- result:
-- !result