-- name: test_without_property
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 1;
insert into ss values('2021-01-01', 1);
select * from ss;

-- name: test_automatic_partition_table_pipeline
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into ss values('2023-02-14', 2),('2033-03-01',2);
select count(*) from ss;
show partitions from ss;
insert into ss select date(add_months(event_day, 1)),pv from ss;
select count(*) from ss;
show partitions from ss;
insert into ss select date(add_months(event_day, 6)),pv from ss;
select count(*) from ss;
show partitions from ss;
insert into ss select date(add_months(event_day, 12)),pv from ss;
select count(*) from ss;
show partitions from ss;
insert into ss select * from ss;
select count(*) from ss;
show partitions from ss;
-- name: test_automatic_partition_table_non_pipeline
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
set enable_pipeline=false;
insert into ss values('2023-02-14', 2),('2033-03-01',2);
select count(*) from ss;
show partitions from ss;
insert into ss select date(add_months(event_day, 1)),pv from ss;
select count(*) from ss;
show partitions from ss;
insert into ss select date(add_months(event_day, 6)),pv from ss;
select count(*) from ss;
show partitions from ss;
insert into ss select date(add_months(event_day, 12)),pv from ss;
select count(*) from ss;
show partitions from ss;
insert into ss select * from ss;
select count(*) from ss;
show partitions from ss;
-- name: test_single_replica
CREATE TABLE site_access ( event_day DATETIME NOT NULL, site_id INT DEFAULT '10', city_code VARCHAR(100), user_name VARCHAR(32) DEFAULT '', pv BIGINT DEFAULT '0') DUPLICATE KEY(event_day, site_id, city_code, user_name) PARTITION BY date_trunc('day', event_day) DISTRIBUTED BY HASH(event_day, site_id) PROPERTIES( "replication_num" = "1");
insert into site_access values('2015-06-02 00:00:00', 1, 1, 'a', 1);
show partitions from site_access;
select * from site_access;
insert into site_access values('2015-06-02 00:10:00', 1, 1, 'a', 1);
select * from site_access;
insert into site_access values('2015-06-04 00:10:00', 1, 1, 'a', 1);
select * from site_access;
show partitions from site_access;
-- name: test_date_trunc_date
CREATE TABLE dt_month( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into dt_month values('2023-02-14', 2);
show partitions from dt_month;
insert into dt_month values('2023-03-14', 2);
-- explain select * from dt_month where event_day='2023-02-14';
CREATE TABLE dt_day( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('day', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into dt_day values('2023-02-14', 2);
show partitions from dt_day;
insert into dt_day values('2023-03-14', 2);
-- explain select * from dt_day where event_day='2023-02-14';
CREATE TABLE dt_year( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('year', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into dt_year values('2023-02-14', 2);
show partitions from dt_year;
insert into dt_year values('2024-03-14', 2);
-- explain select * from dt_year where event_day='2023-02-14';
CREATE TABLE dt_week( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('week', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
CREATE TABLE dt_quarter( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('quarter', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
-- name: test_date_trunc_datetime
CREATE TABLE dt_month( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into dt_month values('2023-02-14 12:31:07', 2);
show partitions from dt_month;
insert into dt_month values('2023-03-14 12:31:07', 2);
-- explain select * from dt_month where event_day='2023-02-14 12:31:07';
CREATE TABLE dt_day( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('day', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into dt_day values('2023-02-14 12:31:07', 2);
show partitions from dt_day;
insert into dt_day values('2023-03-14 12:31:07', 2);
-- explain select * from dt_day where event_day='2023-02-14 12:31:07';
CREATE TABLE dt_year( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('year', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into dt_year values('2023-02-14 12:31:07', 2);
show partitions from dt_year;
insert into dt_year values('2024-03-14 12:31:07', 2);
-- explain select * from dt_year where event_day='2023-02-14 12:31:07';
CREATE TABLE dt_hour( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('hour', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
show partitions from dt_hour;
CREATE TABLE dt_minute( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('minute', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
CREATE TABLE dt_second( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('second', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
CREATE TABLE dt_week( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('week', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
CREATE TABLE dt_quarter( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('quarter', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
-- name: test_automatic_partition_time_slice
CREATE TABLE ss_month( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY time_slice(event_day, interval 4 month) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into ss_month values('2023-02-14 12:31:07', 2);
show partitions from ss_month;
insert into ss_month values('2023-04-14 12:31:07', 2);
show partitions from ss_month;
insert into ss_month values('2023-07-14 12:31:07', 2);
show partitions from ss_month;
CREATE TABLE ss_day( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY time_slice(event_day, interval 4 day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into ss_day values('2023-02-14 12:31:07', 2);
show partitions from ss_day;
insert into ss_day values('2023-02-16 12:31:07', 2);
show partitions from ss_day;
insert into ss_day values('2023-02-19 12:31:07', 2);
show partitions from ss_day;
CREATE TABLE ss_year( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY time_slice(event_day, interval 2 year) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into ss_year values('2023-02-14 12:31:07', 2);
show partitions from ss_year;
insert into ss_year values('2024-02-16 12:31:07', 2);
show partitions from ss_year;
insert into ss_year values('2026-02-19 12:31:07', 2);
show partitions from ss_year;
-- CREATE TABLE ss_hour( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY time_slice(event_day, interval 2 hour) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
-- insert into ss_hour values('2023-02-14 12:31:07', 2);
-- show partitions from ss_hour;
-- insert into ss_hour values('2023-02-14 13:31:07', 2);
-- show partitions from ss_hour;
-- insert into ss_hour values('2023-02-14 14:31:08', 2);
-- show partitions from ss_hour;
-- name: test_automatic_partition_in_new_node
CREATE TABLE dt_month( event_day DATETIME, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 1 PROPERTIES("replication_num" = "1");
insert into dt_month values('2023-02-14 12:31:07', 2);
insert into dt_month values('2023-03-14 12:31:07', 2);
show partitions from dt_month;
select * from dt_month;
-- name: test_partition_column_as_second
create table p(c1 int null, c2 date null)engine=olap duplicate key(c1,c2) partition by date_trunc('day', c2) distributed by hash(c1) buckets 2 properties("replication_num"="1");
insert into p values(1,'2021-01-01');
show partitions from p;
select * from p;
-- name: test_multi_fragment_open_new_node_channel
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 8 PROPERTIES("replication_num" = "3");
insert into ss values('2023-02-14', 2),('2033-03-01',2);
insert into ss select date(add_months(event_day, 1)),pv from ss;
insert into ss select date(add_months(event_day, 1)),pv from ss;
insert into ss select date(add_months(event_day, 1)),pv from ss;
insert into ss select date(add_months(event_day, 1)),pv from ss;
insert into ss select date(add_months(event_day, 1)),pv from ss;
select count(*) from ss;
show partitions from ss;
CREATE TABLE dt_month( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 1 PROPERTIES("replication_num" = "1");
insert into dt_month select * from ss;
select count(*) from dt_month;
show partitions from dt_month;
-- name: test_min_partition
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 1 PROPERTIES("replication_num" = "1");
-- insert into ss values('0000-01-01', 2);
select * from ss;
show partitions from ss;

-- name: test_auto_incremental_id
CREATE TABLE t ( id DATE NOT NULL, job1 BIGINT NOT NULL AUTO_INCREMENT) Primary KEY (id) PARTITION BY date_trunc('day', id) DISTRIBUTED BY HASH(id) BUCKETS 1 PROPERTIES("replication_num" = "1");
insert into t values('2021-01-01', 1);
select count(*) from t;
show partitions from t;
insert into t values('2021-01-03', default);
select count(*) from t;
show partitions from t;
insert into t values('2021-01-05', default);
select count(*) from t;
show partitions from t;
-- name: truncate_automatci_partition_table
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 1 PROPERTIES("replication_num" = "1");
insert into ss values('2000-01-01', 2);
select * from ss;
show partitions from ss;
truncate table ss;
show partitions from ss;
insert into ss values('2002-01-01', 2);
show partitions from ss;

-- name: test_shadow_partition @sequential
CREATE TABLE ss( event_day DATE, pv BIGINT) DUPLICATE KEY(event_day) PARTITION BY date_trunc('month', event_day) DISTRIBUTED BY HASH(event_day) BUCKETS 1 PROPERTIES("replication_num" = "1");
ADMIN SET FRONTEND CONFIG("enable_display_shadow_partitions"="true");
show partitions from ss;
ADMIN SET FRONTEND CONFIG("enable_display_shadow_partitions"="false");
show partitions from ss;
insert into ss values('2002-01-01', 2);
show partitions from ss;
-- insert into ss values(null, 2);
-- insert into ss values('0000-01-01', 2);
insert into ss values('0001-02-01', 2);
-- insert into ss values('0000-00-00', 2);
select * from ss;
alter table ss drop partition p200201;
select * from ss;
