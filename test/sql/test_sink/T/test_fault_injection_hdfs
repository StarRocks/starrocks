-- name: test_sink_parquet_fault_injection_hdfs @sequential

shell: ossutil64 cp ./sql/test_across_engine/data/tpch_lineitem.parquet oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet > /dev/null

create external catalog hive_sink_${uuid0} PROPERTIES ("type"="hive", "hive.metastore.uris"="${hive_metastore_uris}");
create database hive_sink_${uuid0}.hive_sink_db_${uuid0};

create table hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} properties (
    "file_format" = "parquet"
)
as select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

admin enable failpoint 'output_stream_io_error' with 0.5 probability;

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

admin disable failpoint 'output_stream_io_error';

[UC] select * from hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} order by 1, 2, 3 limit 10;

drop table hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} force;

drop database hive_sink_${uuid0}.hive_sink_db_${uuid0};

drop catalog hive_sink_${uuid0};

shell: ossutil64 rm -rf oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet > /dev/null

-- name: test_sink_orc_fault_injection_hdfs @sequential

shell: ossutil64 cp ./sql/test_across_engine/data/tpch_lineitem.parquet oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet > /dev/null

create external catalog hive_sink_${uuid0} PROPERTIES ("type"="hive", "hive.metastore.uris"="${hive_metastore_uris}");
create database hive_sink_${uuid0}.hive_sink_db_${uuid0};

create table hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} properties (
    "file_format" = "orc"
)
as select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

admin enable failpoint 'output_stream_io_error' with 0.5 probability;

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

admin disable failpoint 'output_stream_io_error';

[UC] select * from hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} order by 1, 2, 3 limit 10;

drop table hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} force;

drop database hive_sink_${uuid0}.hive_sink_db_${uuid0};

drop catalog hive_sink_${uuid0};

shell: ossutil64 rm -rf oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet > /dev/null

-- name: test_sink_textfile_fault_injection_hdfs @sequential

shell: ossutil64 cp ./sql/test_across_engine/data/tpch_lineitem.parquet oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet > /dev/null

create external catalog hive_sink_${uuid0} PROPERTIES ("type"="hive", "hive.metastore.uris"="${hive_metastore_uris}");
create database hive_sink_${uuid0}.hive_sink_db_${uuid0};

create table hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} properties (
    "file_format" = "textfile"
)
as select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

admin enable failpoint 'output_stream_io_error' with 0.5 probability;

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

[UC] insert into hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} select * from files (
    "path" = "oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet",
    "format" = "parquet",
    "aws.s3.access_key"  =  "${oss_ak}",
    "aws.s3.secret_key"  =  "${oss_sk}",
    "aws.s3.endpoint"  =  "${oss_endpoint}"
);

admin disable failpoint 'output_stream_io_error';

[UC] select * from hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} order by 1, 2, 3 limit 10;

drop table hive_sink_${uuid0}.hive_sink_db_${uuid0}.hive_sink_table_${uuid0} force;

drop database hive_sink_${uuid0}.hive_sink_db_${uuid0};

drop catalog hive_sink_${uuid0};

shell: ossutil64 rm -rf oss://${oss_bucket}/test_across_engine/test_sink/${uuid0}/tpch_lineitem.parquet > /dev/null