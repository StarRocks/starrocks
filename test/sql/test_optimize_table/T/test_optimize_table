-- name: test_optimize_table
create table t(k int) distributed by hash(k) buckets 10;
show partitions from t;
insert into t values(1),(2),(3);
select * from t;
alter table t distributed by hash(k);
function: wait_optimize_table_finish()
select * from t;
show partitions from t;

-- name: test_optimize_table_by_partition_name
CREATE TABLE `duplicate_table_with_null_partition` (
    `k1` date,
    `k2` datetime,
    `k3` char(20),
    `k4` varchar(20),
    `k5` boolean,
    `k6` tinyint,
    `k7` smallint,
    `k8` int,
    `k9` bigint,
    `k10` largeint,
    `k11` float,
    `k12` double,
    `k13` decimal(27,9)
)
DUPLICATE KEY(`k1`, `k2`, `k3`, `k4`, `k5`)
COMMENT "OLAP"
PARTITION BY RANGE(`k1`)
(
    PARTITION `p202006` VALUES LESS THAN ("2020-07-01"),
    PARTITION `p202007` VALUES LESS THAN ("2020-08-01"),
    PARTITION `p202008` VALUES LESS THAN ("2020-09-01")
)
DISTRIBUTED BY HASH(`k1`, `k2`, `k3`, `k4`, `k5`) BUCKETS 3
PROPERTIES (
    "replication_num" = "3",
    "storage_format" = "v2"
);
alter table duplicate_table_with_null_partition PARTITIONS(p202006,p202007,p202008) DISTRIBUTED BY HASH(`k1`, `k2`, `k3`, `k4`, `k5`) BUCKETS 4;
function: wait_optimize_table_finish()

-- name: test_change_no_partition_distribution
create table t(k int) distributed by hash(k) buckets 10;
insert into t values(1),(2),(3);
select * from t;

alter table t distributed by hash(k) buckets 4;
function: wait_optimize_table_finish()
show create table t;
select * from t;

alter table t distributed by random;
function: wait_optimize_table_finish()
show create table t;
select * from t;

-- name: test_change_partition_distribution
create table t(k int, k1 date) PARTITION BY RANGE(`k1`)
(
    PARTITION `p202006` VALUES LESS THAN ("2020-07-01"),
    PARTITION `p202007` VALUES LESS THAN ("2020-08-01"),
    PARTITION `p202008` VALUES LESS THAN ("2020-09-01")
) distributed by hash(k) buckets 10;
insert into t values(1, '2020-06-01'),(2, '2020-07-01'),(3, '2020-08-01');

alter table t distributed by hash(k) buckets 4;
function: wait_optimize_table_finish()
show create table t;
select * from t;

alter table t distributed by hash(k);
function: wait_optimize_table_finish()
show create table t;
select * from t;

alter table t distributed by hash(k1) buckets 4;
function: wait_optimize_table_finish()
show create table t;
select * from t;

alter table t distributed by random;
function: wait_optimize_table_finish()
show create table t;
select * from t;

-- name: test_change_partial_partition_distribution
create table t(k int, k1 date) PARTITION BY RANGE(`k1`)
(
    PARTITION `p202006` VALUES LESS THAN ("2020-07-01"),
    PARTITION `p202007` VALUES LESS THAN ("2020-08-01"),
    PARTITION `p202008` VALUES LESS THAN ("2020-09-01")
) distributed by hash(k) buckets 10;
insert into t values(1, '2020-06-01'),(2, '2020-07-01'),(3, '2020-08-01');

alter table t partitions(p202006,p202008) distributed by hash(k) buckets 4;
function: wait_optimize_table_finish()
show create table t;
select * from t;

alter table t partitions(p202006,p202008) distributed by hash(k1) buckets 4;
show create table t;

alter table t partitions(p202006,p202008) distributed by random;
show create table t;

-- name: test_alter_key_buckets
CREATE TABLE demo2_alter_0 (    
    `user_name` VARCHAR(32) DEFAULT '',
    `city_code` VARCHAR(100),
    `from`  VARCHAR(32) DEFAULT '',
    `pv` BIGINT DEFAULT '0'
)
PRIMARY KEY(`user_name`)
DISTRIBUTED BY HASH(`user_name`) BUCKETS 5
PROPERTIES('replication_num'='1');

ALTER TABLE demo2_alter_0 DISTRIBUTED BY HASH(`user_name`) BUCKETS 10;

function: wait_optimize_table_finish()


-- name: test_online_optimize_table
create table t(k int, k1 date) PARTITION BY RANGE(`k1`)
(
    PARTITION `p202006` VALUES LESS THAN ("2020-07-01"),
    PARTITION `p202007` VALUES LESS THAN ("2020-08-01"),
    PARTITION `p202008` VALUES LESS THAN ("2020-09-01")
) distributed by hash(k) buckets 10;
insert into t values(1, '2020-06-01'),(2, '2020-07-01'),(3, '2020-08-01');

show create table t;
alter table t distributed by hash(k);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
insert into t values(4, '2020-06-01'),(5, '2020-07-01'),(6, '2020-08-01');
select sleep(1);
-- show partitions from t;
select count(*) from t;
function: wait_optimize_table_finish()
show create table t;
-- show partitions from t;
select count(*) from t;

-- name: test_online_optimize_table_pk
create table t(k int) primary key(k) distributed by hash(k) buckets 10;
show create table t;
insert into t values(1);
alter table t distributed by hash(k);
insert into t values(2);
select sleep(1);
insert into t values(3);
select sleep(1);
insert into t values(4);
select sleep(1);
insert into t values(5);
select sleep(1);
insert into t values(6);
select sleep(1);
insert into t values(7);
select sleep(1);
insert into t values(8);
select sleep(1);
insert into t values(9);
select sleep(1);
insert into t values(10);
select sleep(1);
insert into t values(11);
select sleep(1);
insert into t values(12);
select sleep(1);
insert into t values(13);
select sleep(1);
insert into t values(14);
select sleep(1);
insert into t values(15);
select sleep(1);
insert into t values(16);
select sleep(1);
insert into t values(17);
select sleep(1);
insert into t values(18);
select sleep(1);
insert into t values(19);
select sleep(1);
insert into t values(20);
select * from t;
function: wait_optimize_table_finish()
show create table t;
select * from t;
