-- name: test_unnest_left_join
-- Create table student_score where scores is an ARRAY column.
CREATE TABLE student_score
(
    `id` bigint(20) NULL COMMENT "",
    `scores` ARRAY<int> NULL COMMENT ""
)
DUPLICATE KEY (id)
DISTRIBUTED BY HASH(`id`)
PROPERTIES (
"replication_num" = "1"
);

-- Insert data into this table.
INSERT INTO student_score VALUES
(1, [80,85,87]),
(2, [77, null, 89]),
(3, null),
(4, []),
(5, [90,92]);

-- left join on true
select id, scores, unnest from student_score left join unnest(scores) as unnest on true order by 1, 3;

-- not support left join on false
select id, scores, unnest from student_score left join unnest(scores) as unnest on false order by 1, 3;

-- not support left join on predicate
select id, scores, unnest from student_score left join unnest(scores) as unnest on id = unnest order by 1, 3;

-- not support right join
select id, scores, unnest from student_score right join unnest(scores) as unnest on true order by 1, 3;

-- not support right join
select id, scores, unnest from student_score full join unnest(scores) as unnest on true order by 1, 3;

-- left join on true
select id, scores, unnest from student_score left join unnest([1, 2]) as unnest on true order by 1, 3;

-- not support left join generate_series
select id, scores, gen from student_score left join generate_series(1, 3) as t(gen) on true order by 1, 3;

-- multi-unnest
select * from student_score left join unnest(scores, []) on true order by 1, 3;