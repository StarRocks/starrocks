-- name: test_unnest_left_join
CREATE TABLE student_score
(
    `id` bigint(20) NULL COMMENT "",
    `scores` ARRAY<int> NULL COMMENT ""
)
DUPLICATE KEY (id)
DISTRIBUTED BY HASH(`id`)
PROPERTIES (
"replication_num" = "1"
);
-- result:
-- !result
INSERT INTO student_score VALUES
(1, [80,85,87]),
(2, [77, null, 89]),
(3, null),
(4, []),
(5, [90,92]);
-- result:
-- !result
select id, scores, unnest from student_score left join unnest(scores) as unnest on true order by 1, 3;
-- result:
1	[80,85,87]	80
1	[80,85,87]	85
1	[80,85,87]	87
2	[77,null,89]	None
2	[77,null,89]	77
2	[77,null,89]	89
3	None	None
4	[]	None
5	[90,92]	90
5	[90,92]	92
-- !result
select id, scores, unnest from student_score left join unnest(scores) as unnest on false order by 1, 3;
-- result:
E: (1064, 'Getting analyzing error. Detail message: left join unnest only support on true.')
-- !result
select id, scores, unnest from student_score left join unnest(scores) as unnest on id = unnest order by 1, 3;
-- result:
E: (1064, 'Getting analyzing error. Detail message: left join unnest only support on true.')
-- !result
select id, scores, unnest from student_score right join unnest(scores) as unnest on true order by 1, 3;
-- result:
E: (1064, 'Getting analyzing error. Detail message: unnest support inner join, cross join and left join on true.')
-- !result
select id, scores, unnest from student_score full join unnest(scores) as unnest on true order by 1, 3;
-- result:
E: (1064, 'Getting analyzing error. Detail message: unnest support inner join, cross join and left join on true.')
-- !result
select id, scores, unnest from student_score left join unnest([1, 2]) as unnest on true order by 1, 3;
-- result:
1	[80,85,87]	1
1	[80,85,87]	2
2	[77,null,89]	1
2	[77,null,89]	2
3	None	1
3	None	2
4	[]	1
4	[]	2
5	[90,92]	1
5	[90,92]	2
-- !result
select id, scores, gen from student_score left join generate_series(1, 3) as t(gen) on true order by 1, 3;
-- result:
E: (1064, 'Getting analyzing error. Detail message: Not support lateral join except inner or cross.')
-- !result
select * from student_score left join unnest(scores, []) on true order by 1, 3;
-- result:
1	[80,85,87]	80	None
1	[80,85,87]	85	None
1	[80,85,87]	87	None
2	[77,null,89]	None	None
2	[77,null,89]	77	None
2	[77,null,89]	89	None
3	None	None	None
4	[]	None	None
5	[90,92]	90	None
5	[90,92]	92	None
-- !result