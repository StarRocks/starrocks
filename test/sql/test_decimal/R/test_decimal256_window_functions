-- name: test_decimal256_window_functions
DROP DATABASE IF EXISTS test_decimal256_window;
-- result:
-- !result
CREATE DATABASE test_decimal256_window;
-- result:
-- !result
USE test_decimal256_window;
-- result:
-- !result
CREATE TABLE decimal_window_test (
    id INT,
    category VARCHAR(10),
    d50_15 DECIMAL(50,15),    -- 35 integer digits + 15 decimal digits
    d76_20 DECIMAL(76,20),    -- 56 integer digits + 20 decimal digits
    d76_0 DECIMAL(76,0)       -- 76 integer digits + 0 decimal digits
) PROPERTIES("replication_num"="1");
-- result:
-- !result
INSERT INTO decimal_window_test VALUES
(1, 'A', 12345678901234567890123456789012345.123456789012345, 12345678901234567890123456789012345678901234567890123456.12345678901234567890, 1234567890123456789012345678901234567890123456789012345678901234567890123456),
(2, 'A', 98765432109876543210987654321098765.456789012345678, 98765432109876543210987654321098765432109876543210987654.45678901234567890123, 9876543210987654321098765432109876543210987654321098765432109876543210987654),
(3, 'A', 55555555555555555555555555555555555.789012345678901, 55555555555555555555555555555555555555555555555555555555.78901234567890123456, 5555555555555555555555555555555555555555555555555555555555555555555555555555),
(4, 'A', 66666666666666666666666666666666666.111111111111111, 66666666666666666666666666666666666666666666666666666666.11111111111111111111, 6666666666666666666666666666666666666666666666666666666666666666666666666666),

(5, 'B', 77777777777777777777777777777777777.012345678901234, 77777777777777777777777777777777777777777777777777777777.01234567890123456789, 7777777777777777777777777777777777777777777777777777777777777777777777777777),
(6, 'B', 44444444444444444444444444444444444.567890123456789, 44444444444444444444444444444444444444444444444444444444.56789012345678901234, 4444444444444444444444444444444444444444444444444444444444444444444444444444),
(7, 'B', 88888888888888888888888888888888888.901234567890123, 88888888888888888888888888888888888888888888888888888888.90123456789012345678, 8888888888888888888888888888888888888888888888888888888888888888888888888888),
(8, 'B', 33333333333333333333333333333333333.222222222222222, 33333333333333333333333333333333333333333333333333333333.22222222222222222222, 3333333333333333333333333333333333333333333333333333333333333333333333333333),

(9, 'C', 11111111111111111111111111111111111.234567890123456, 11111111111111111111111111111111111111111111111111111111.23456789012345678901, 1111111111111111111111111111111111111111111111111111111111111111111111111111),
(10, 'C', 22222222222222222222222222222222222.678901234567890, 22222222222222222222222222222222222222222222222222222222.67890123456789012345, 2222222222222222222222222222222222222222222222222222222222222222222222222222),
(11, 'C', 99999888887777766666555554444433333.345678901234567, 99999888887777766666555554444433333222221111100009999988.34567890123456789012, 9999988888777776666655555444443333322222111110000099999888877776666555544),
(12, 'C', 77777666665555544444333332222211111.777777777777777, 77777666665555544444333332222211111000009999988888777776.77777777777777777777, 7777766666555554444433333222221111100000999998888877777666655554444333322);
-- result:
-- !result
SELECT
    'Test1_RANKING_FUNCTIONS' as test_name,
    id,
    category,
    d50_15,
    ROW_NUMBER() OVER (ORDER BY d50_15) as row_num,
    RANK() OVER (ORDER BY d50_15) as rank_val,
    DENSE_RANK() OVER (ORDER BY d50_15) as dense_rank_val
FROM decimal_window_test
ORDER BY d50_15;
-- result:
Test1_RANKING_FUNCTIONS	9	C	11111111111111111111111111111111111.234567890123456	1	1	1
Test1_RANKING_FUNCTIONS	1	A	12345678901234567890123456789012345.123456789012345	2	2	2
Test1_RANKING_FUNCTIONS	10	C	22222222222222222222222222222222222.678901234567890	3	3	3
Test1_RANKING_FUNCTIONS	8	B	33333333333333333333333333333333333.222222222222222	4	4	4
Test1_RANKING_FUNCTIONS	6	B	44444444444444444444444444444444444.567890123456789	5	5	5
Test1_RANKING_FUNCTIONS	3	A	55555555555555555555555555555555555.789012345678901	6	6	6
Test1_RANKING_FUNCTIONS	4	A	66666666666666666666666666666666666.111111111111111	7	7	7
Test1_RANKING_FUNCTIONS	12	C	77777666665555544444333332222211111.777777777777777	8	8	8
Test1_RANKING_FUNCTIONS	5	B	77777777777777777777777777777777777.012345678901234	9	9	9
Test1_RANKING_FUNCTIONS	7	B	88888888888888888888888888888888888.901234567890123	10	10	10
Test1_RANKING_FUNCTIONS	2	A	98765432109876543210987654321098765.456789012345678	11	11	11
Test1_RANKING_FUNCTIONS	11	C	99999888887777766666555554444433333.345678901234567	12	12	12
-- !result
SELECT
    'Test2_PARTITION_RANKING' as test_name,
    id,
    category,
    d76_20,
    ROW_NUMBER() OVER (PARTITION BY category ORDER BY d76_20) as row_num_by_cat,
    RANK() OVER (PARTITION BY category ORDER BY d76_20) as rank_by_cat
FROM decimal_window_test
ORDER BY category, d76_20;
-- result:
Test2_PARTITION_RANKING	1	A	12345678901234567890123456789012345678901234567890123456.12345678901234567890	1	1
Test2_PARTITION_RANKING	3	A	55555555555555555555555555555555555555555555555555555555.78901234567890123456	2	2
Test2_PARTITION_RANKING	4	A	66666666666666666666666666666666666666666666666666666666.11111111111111111111	3	3
Test2_PARTITION_RANKING	2	A	98765432109876543210987654321098765432109876543210987654.45678901234567890123	4	4
Test2_PARTITION_RANKING	8	B	33333333333333333333333333333333333333333333333333333333.22222222222222222222	1	1
Test2_PARTITION_RANKING	6	B	44444444444444444444444444444444444444444444444444444444.56789012345678901234	2	2
Test2_PARTITION_RANKING	5	B	77777777777777777777777777777777777777777777777777777777.01234567890123456789	3	3
Test2_PARTITION_RANKING	7	B	88888888888888888888888888888888888888888888888888888888.90123456789012345678	4	4
Test2_PARTITION_RANKING	9	C	11111111111111111111111111111111111111111111111111111111.23456789012345678901	1	1
Test2_PARTITION_RANKING	10	C	22222222222222222222222222222222222222222222222222222222.67890123456789012345	2	2
Test2_PARTITION_RANKING	12	C	77777666665555544444333332222211111000009999988888777776.77777777777777777777	3	3
Test2_PARTITION_RANKING	11	C	99999888887777766666555554444433333222221111100009999988.34567890123456789012	4	4
-- !result
SELECT
    'Test3_WINDOW_AGGREGATES' as test_name,
    id,
    category,
    d50_15,
    SUM(d50_15) OVER (ORDER BY id ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) as moving_sum,
    AVG(d50_15) OVER (PARTITION BY category ORDER BY id) as running_avg_by_cat,
    COUNT(*) OVER (PARTITION BY category) as count_by_cat,
    MAX(d76_0) OVER (PARTITION BY category ORDER BY id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as running_max
FROM decimal_window_test
ORDER BY id;
-- result:
Test3_WINDOW_AGGREGATES	1	A	12345678901234567890123456789012345.123456789012345	111111111011111111101111111110111110.580245801358023	12345678901234567890123456789012345.123456789012345	4	1234567890123456789012345678901234567890123456789012345678901234567890123456
Test3_WINDOW_AGGREGATES	2	A	98765432109876543210987654321098765.456789012345678	166666666566666666656666666665666666.369258147036924	55555555505555555550555555555055555.290122900679012	4	9876543210987654321098765432109876543210987654321098765432109876543210987654
Test3_WINDOW_AGGREGATES	3	A	55555555555555555555555555555555555.789012345678901	220987654332098765433209876543320987.356912469135690	55555555522222222218888888888555555.456419382345641	4	9876543210987654321098765432109876543210987654321098765432109876543210987654
Test3_WINDOW_AGGREGATES	4	A	66666666666666666666666666666666666.111111111111111	199999999999999999999999999999999998.912469135691246	58333333308333333330833333333083333.120092314537009	4	9876543210987654321098765432109876543210987654321098765432109876543210987654
Test3_WINDOW_AGGREGATES	5	B	77777777777777777777777777777777777.012345678901234	188888888888888888888888888888888887.691346913469134	77777777777777777777777777777777777.012345678901234	4	7777777777777777777777777777777777777777777777777777777777777777777777777777
Test3_WINDOW_AGGREGATES	6	B	44444444444444444444444444444444444.567890123456789	211111111111111111111111111111111110.481470370248146	61111111111111111111111111111111110.790117901179012	4	7777777777777777777777777777777777777777777777777777777777777777777777777777
Test3_WINDOW_AGGREGATES	7	B	88888888888888888888888888888888888.901234567890123	166666666666666666666666666666666666.691346913569134	70370370370370370370370370370370370.160490123416049	4	8888888888888888888888888888888888888888888888888888888888888888888888888888
Test3_WINDOW_AGGREGATES	8	B	33333333333333333333333333333333333.222222222222222	133333333333333333333333333333333333.358024680235801	61111111111111111111111111111111110.925923148117592	4	8888888888888888888888888888888888888888888888888888888888888888888888888888
Test3_WINDOW_AGGREGATES	9	C	11111111111111111111111111111111111.234567890123456	66666666666666666666666666666666667.135691346913568	11111111111111111111111111111111111.234567890123456	4	1111111111111111111111111111111111111111111111111111111111111111111111111111
Test3_WINDOW_AGGREGATES	10	C	22222222222222222222222222222222222.678901234567890	133333222221111099999888887777766667.259148025925913	16666666666666666666666666666666666.956734562345673	4	2222222222222222222222222222222222222222222222222222222222222222222222222222
Test3_WINDOW_AGGREGATES	11	C	99999888887777766666555554444433333.345678901234567	199999777775555533333111108888866667.802357913580234	44444407407037033333296295925922222.419716008641971	4	2222222222222222222222222222222222222222222222222222222222222222222222222222
Test3_WINDOW_AGGREGATES	12	C	77777666665555544444333332222211111.777777777777777	177777555553333311110888886666644445.123456679012344	52777722221666661111055554999994444.759231450925923	4	2222222222222222222222222222222222222222222222222222222222222222222222222222
-- !result
SELECT
    'Test4_LEAD_LAG' as test_name,
    id,
    category,
    d76_20,
    LAG(d76_20, 1) OVER (ORDER BY d76_20) as prev_val,
    LEAD(d76_20, 1) OVER (ORDER BY d76_20) as next_val,
    LAG(d76_20, 1, 0.0) OVER (PARTITION BY category ORDER BY d76_20) as prev_val_by_cat,
    LEAD(d76_20, 1, 0.0) OVER (PARTITION BY category ORDER BY d76_20) as next_val_by_cat
FROM decimal_window_test
ORDER BY d76_20;
-- result:
Test4_LEAD_LAG	9	C	11111111111111111111111111111111111111111111111111111111.23456789012345678901	None	12345678901234567890123456789012345678901234567890123456.12345678901234567890	0E-20	22222222222222222222222222222222222222222222222222222222.67890123456789012345
Test4_LEAD_LAG	1	A	12345678901234567890123456789012345678901234567890123456.12345678901234567890	11111111111111111111111111111111111111111111111111111111.23456789012345678901	22222222222222222222222222222222222222222222222222222222.67890123456789012345	0E-20	55555555555555555555555555555555555555555555555555555555.78901234567890123456
Test4_LEAD_LAG	10	C	22222222222222222222222222222222222222222222222222222222.67890123456789012345	12345678901234567890123456789012345678901234567890123456.12345678901234567890	33333333333333333333333333333333333333333333333333333333.22222222222222222222	11111111111111111111111111111111111111111111111111111111.23456789012345678901	77777666665555544444333332222211111000009999988888777776.77777777777777777777
Test4_LEAD_LAG	8	B	33333333333333333333333333333333333333333333333333333333.22222222222222222222	22222222222222222222222222222222222222222222222222222222.67890123456789012345	44444444444444444444444444444444444444444444444444444444.56789012345678901234	0E-20	44444444444444444444444444444444444444444444444444444444.56789012345678901234
Test4_LEAD_LAG	6	B	44444444444444444444444444444444444444444444444444444444.56789012345678901234	33333333333333333333333333333333333333333333333333333333.22222222222222222222	55555555555555555555555555555555555555555555555555555555.78901234567890123456	33333333333333333333333333333333333333333333333333333333.22222222222222222222	77777777777777777777777777777777777777777777777777777777.01234567890123456789
Test4_LEAD_LAG	3	A	55555555555555555555555555555555555555555555555555555555.78901234567890123456	44444444444444444444444444444444444444444444444444444444.56789012345678901234	66666666666666666666666666666666666666666666666666666666.11111111111111111111	12345678901234567890123456789012345678901234567890123456.12345678901234567890	66666666666666666666666666666666666666666666666666666666.11111111111111111111
Test4_LEAD_LAG	4	A	66666666666666666666666666666666666666666666666666666666.11111111111111111111	55555555555555555555555555555555555555555555555555555555.78901234567890123456	77777666665555544444333332222211111000009999988888777776.77777777777777777777	55555555555555555555555555555555555555555555555555555555.78901234567890123456	98765432109876543210987654321098765432109876543210987654.45678901234567890123
Test4_LEAD_LAG	12	C	77777666665555544444333332222211111000009999988888777776.77777777777777777777	66666666666666666666666666666666666666666666666666666666.11111111111111111111	77777777777777777777777777777777777777777777777777777777.01234567890123456789	22222222222222222222222222222222222222222222222222222222.67890123456789012345	99999888887777766666555554444433333222221111100009999988.34567890123456789012
Test4_LEAD_LAG	5	B	77777777777777777777777777777777777777777777777777777777.01234567890123456789	77777666665555544444333332222211111000009999988888777776.77777777777777777777	88888888888888888888888888888888888888888888888888888888.90123456789012345678	44444444444444444444444444444444444444444444444444444444.56789012345678901234	88888888888888888888888888888888888888888888888888888888.90123456789012345678
Test4_LEAD_LAG	7	B	88888888888888888888888888888888888888888888888888888888.90123456789012345678	77777777777777777777777777777777777777777777777777777777.01234567890123456789	98765432109876543210987654321098765432109876543210987654.45678901234567890123	77777777777777777777777777777777777777777777777777777777.01234567890123456789	0E-20
Test4_LEAD_LAG	2	A	98765432109876543210987654321098765432109876543210987654.45678901234567890123	88888888888888888888888888888888888888888888888888888888.90123456789012345678	99999888887777766666555554444433333222221111100009999988.34567890123456789012	66666666666666666666666666666666666666666666666666666666.11111111111111111111	0E-20
Test4_LEAD_LAG	11	C	99999888887777766666555554444433333222221111100009999988.34567890123456789012	98765432109876543210987654321098765432109876543210987654.45678901234567890123	None	77777666665555544444333332222211111000009999988888777776.77777777777777777777	0E-20
-- !result
SELECT
    'Test5_FIRST_LAST_VALUE' as test_name,
    id,
    category,
    d76_0,
    FIRST_VALUE(d76_0) OVER (PARTITION BY category ORDER BY d76_0) as first_val_by_cat,
    LAST_VALUE(d76_0) OVER (PARTITION BY category ORDER BY d76_0 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as last_val_by_cat,
    FIRST_VALUE(d50_15) OVER (ORDER BY id ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) as first_val_window
FROM decimal_window_test
ORDER BY category, d76_0;
-- result:
Test5_FIRST_LAST_VALUE	1	A	1234567890123456789012345678901234567890123456789012345678901234567890123456	1234567890123456789012345678901234567890123456789012345678901234567890123456	9876543210987654321098765432109876543210987654321098765432109876543210987654	12345678901234567890123456789012345.123456789012345
Test5_FIRST_LAST_VALUE	3	A	5555555555555555555555555555555555555555555555555555555555555555555555555555	1234567890123456789012345678901234567890123456789012345678901234567890123456	9876543210987654321098765432109876543210987654321098765432109876543210987654	55555555555555555555555555555555555.789012345678901
Test5_FIRST_LAST_VALUE	4	A	6666666666666666666666666666666666666666666666666666666666666666666666666666	1234567890123456789012345678901234567890123456789012345678901234567890123456	9876543210987654321098765432109876543210987654321098765432109876543210987654	66666666666666666666666666666666666.111111111111111
Test5_FIRST_LAST_VALUE	2	A	9876543210987654321098765432109876543210987654321098765432109876543210987654	1234567890123456789012345678901234567890123456789012345678901234567890123456	9876543210987654321098765432109876543210987654321098765432109876543210987654	98765432109876543210987654321098765.456789012345678
Test5_FIRST_LAST_VALUE	8	B	3333333333333333333333333333333333333333333333333333333333333333333333333333	3333333333333333333333333333333333333333333333333333333333333333333333333333	8888888888888888888888888888888888888888888888888888888888888888888888888888	33333333333333333333333333333333333.222222222222222
Test5_FIRST_LAST_VALUE	6	B	4444444444444444444444444444444444444444444444444444444444444444444444444444	3333333333333333333333333333333333333333333333333333333333333333333333333333	8888888888888888888888888888888888888888888888888888888888888888888888888888	44444444444444444444444444444444444.567890123456789
Test5_FIRST_LAST_VALUE	5	B	7777777777777777777777777777777777777777777777777777777777777777777777777777	3333333333333333333333333333333333333333333333333333333333333333333333333333	8888888888888888888888888888888888888888888888888888888888888888888888888888	77777777777777777777777777777777777.012345678901234
Test5_FIRST_LAST_VALUE	7	B	8888888888888888888888888888888888888888888888888888888888888888888888888888	3333333333333333333333333333333333333333333333333333333333333333333333333333	8888888888888888888888888888888888888888888888888888888888888888888888888888	88888888888888888888888888888888888.901234567890123
Test5_FIRST_LAST_VALUE	12	C	7777766666555554444433333222221111100000999998888877777666655554444333322	7777766666555554444433333222221111100000999998888877777666655554444333322	2222222222222222222222222222222222222222222222222222222222222222222222222222	77777666665555544444333332222211111.777777777777777
Test5_FIRST_LAST_VALUE	11	C	9999988888777776666655555444443333322222111110000099999888877776666555544	7777766666555554444433333222221111100000999998888877777666655554444333322	2222222222222222222222222222222222222222222222222222222222222222222222222222	99999888887777766666555554444433333.345678901234567
Test5_FIRST_LAST_VALUE	9	C	1111111111111111111111111111111111111111111111111111111111111111111111111111	7777766666555554444433333222221111100000999998888877777666655554444333322	2222222222222222222222222222222222222222222222222222222222222222222222222222	11111111111111111111111111111111111.234567890123456
Test5_FIRST_LAST_VALUE	10	C	2222222222222222222222222222222222222222222222222222222222222222222222222222	7777766666555554444433333222221111100000999998888877777666655554444333322	2222222222222222222222222222222222222222222222222222222222222222222222222222	22222222222222222222222222222222222.678901234567890
-- !result
SELECT
    'Test6_COMPLEX_WINDOW' as test_name,
    id,
    category,
    d50_15,
    d76_20,
    SUM(d50_15 * d76_20) OVER (PARTITION BY category ORDER BY id) as running_product_sum,
    AVG(d50_15 + d76_20) OVER (ORDER BY id ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING) as moving_sum_avg
FROM decimal_window_test
ORDER BY id;
-- result:
Test6_COMPLEX_WINDOW	1	A	12345678901234567890123456789012345.123456789012345	12345678901234567890123456789012345678901234567890123456.12345678901234567890	None	55555555522222222218944444444077777777741111111107444444.24617209802461660490
Test6_COMPLEX_WINDOW	2	A	98765432109876543210987654321098765.456789012345678	98765432109876543210987654321098765432109876543210987654.45678901234567890123	None	58333333308333333330891666666391666666639166666663916666.24018462907401798145
Test6_COMPLEX_WINDOW	3	A	55555555555555555555555555555555555.789012345678901	55555555555555555555555555555555555555555555555555555555.78901234567890123456	None	62222222202222222220284444444224444444422444444442244443.79708597481970809874
Test6_COMPLEX_WINDOW	4	A	66666666666666666666666666666666666.111111111111111	66666666666666666666666666666666666666666666666666666666.11111111111111111111	None	68641975310864197531155061728419506172841950617284195061.37485930859748556543
Test6_COMPLEX_WINDOW	5	B	77777777777777777777777777777777777.012345678901234	77777777777777777777777777777777777777777777777777777777.01234567890123456789	None	66666666666666666666733333333333333333333333333333333332.95263753081526347654
Test6_COMPLEX_WINDOW	6	B	44444444444444444444444444444444444.567890123456789	44444444444444444444444444444444444444444444444444444444.56789012345678901234	None	62222222222222222222284444444444444444444444444444444443.92592148143259187407
Test6_COMPLEX_WINDOW	7	B	88888888888888888888888888888888888.901234567890123	88888888888888888888888888888888888888888888888888888888.90123456789012345678	None	51111111111111111111162222222222222222222222222222222221.97530419303753000965
Test6_COMPLEX_WINDOW	8	B	33333333333333333333333333333333333.222222222222222	33333333333333333333333333333333333333333333333333333333.22222222222222222222	None	40000000000000000000040000000000000000000000000000000000.24192641530419232076
Test6_COMPLEX_WINDOW	9	C	11111111111111111111111111111111111.234567890123456	11111111111111111111111111111111111111111111111111111111.23456789012345678901	None	51111088888666664444473333088886444419999755553113108886.75304192641530369632
Test6_COMPLEX_WINDOW	10	C	22222222222222222222222222222222222.678901234567890	22222222222222222222222222222222222222222222222222222222.67890123456789012345	None	48888844443999995555559999511106222173335066661779751108.90365921037036536051
Test6_COMPLEX_WINDOW	11	C	99999888887777766666555554444433333.345678901234567	99999888887777766666555554444433333222221111100009999988.34567890123456789012	None	52777722221666661111108332722216111050002166660558022219.51846290185184564509
Test6_COMPLEX_WINDOW	12	C	77777666665555544444333332222211111.777777777777777	77777666665555544444333332222211111000009999988888777776.77777777777777777777	None	66666592591851844444437036222214073992595481473336622218.53490527572015659711
-- !result