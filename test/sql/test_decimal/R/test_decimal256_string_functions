-- name: test_decimal256_string_functions
DROP DATABASE IF EXISTS test_decimal256_string;
-- result:
-- !result
CREATE DATABASE test_decimal256_string;
-- result:
-- !result
USE test_decimal256_string;
-- result:
-- !result
CREATE TABLE decimal_string_test (
    id INT,
    d50_15 DECIMAL(50,15),
    d76_20 DECIMAL(76,20),
    d76_0 DECIMAL(76,0),
    category VARCHAR(10)
) PROPERTIES("replication_num"="1");
-- result:
-- !result
INSERT INTO decimal_string_test VALUES
(1, 12345678901234567890123456789012345.123456789012345, 12345678901234567890123456789012345678901234567890123456.12345678901234567890, 1234567890123456789012345678901234567890123456789012345678901234567890123456, 'A'),
(2, -98765432109876543210987654321098765.456789012345678, -98765432109876543210987654321098765432109876543210987654.45678901234567890123, -9876543210987654321098765432109876543210987654321098765432109876543210987654, 'B'),
(3, 0.000000000000001, 0.00000000000000000001, 0, 'C'),
(4, 99999888887777766666555554444433333.999999999999999, 99999888887777766666555554444433333222221111100009999988.99999999999999999999, 9999988888777776666655555444443333322222111110000099999888877776666555544, 'A'),
(5, -88888777776666655555444443333322222.888888888888888, -88888777776666655555444443333322222111110000099999888877.88888888888888888888, -8888877777666665555544444333332222211111000009999988888777766665555444433, 'B'),
(6, 11111222223333344444555556666677777.111111111111111, 11111222223333344444555556666677777888889999900001111122.11111111111111111111, 1111122222333334444455555666667777788888999990000011111222233334444555566, 'C'),
(7, -77777666665555544444333332222211111.777777777777777, -77777666665555544444333332222211111000009999988888777776.77777777777777777777, -7777766666555554444433333222221111100000999998888877777666655554444333322, 'A');
-- result:
-- !result
SELECT
    'Test1_BASIC_STRING_CONVERSION' as test_name,
    id,
    d50_15,
    CAST(d50_15 AS STRING) as d50_as_string,
    CONCAT('Value: ', CAST(d50_15 AS STRING)) as formatted_d50,
    CONCAT('D50=', CAST(d50_15 AS STRING), ', D76=', CAST(d76_20 AS STRING)) as combined_string
FROM decimal_string_test
ORDER BY id;
-- result:
Test1_BASIC_STRING_CONVERSION	1	12345678901234567890123456789012345.123456789012345	12345678901234567890123456789012345.123456789012345	Value: 12345678901234567890123456789012345.123456789012345	D50=12345678901234567890123456789012345.123456789012345, D76=12345678901234567890123456789012345678901234567890123456.12345678901234567890
Test1_BASIC_STRING_CONVERSION	2	-98765432109876543210987654321098765.456789012345678	-98765432109876543210987654321098765.456789012345678	Value: -98765432109876543210987654321098765.456789012345678	D50=-98765432109876543210987654321098765.456789012345678, D76=-98765432109876543210987654321098765432109876543210987654.45678901234567890123
Test1_BASIC_STRING_CONVERSION	3	1E-15	0.000000000000001	Value: 0.000000000000001	D50=0.000000000000001, D76=0.00000000000000000001
Test1_BASIC_STRING_CONVERSION	4	99999888887777766666555554444433333.999999999999999	99999888887777766666555554444433333.999999999999999	Value: 99999888887777766666555554444433333.999999999999999	D50=99999888887777766666555554444433333.999999999999999, D76=99999888887777766666555554444433333222221111100009999988.99999999999999999999
Test1_BASIC_STRING_CONVERSION	5	-88888777776666655555444443333322222.888888888888888	-88888777776666655555444443333322222.888888888888888	Value: -88888777776666655555444443333322222.888888888888888	D50=-88888777776666655555444443333322222.888888888888888, D76=-88888777776666655555444443333322222111110000099999888877.88888888888888888888
Test1_BASIC_STRING_CONVERSION	6	11111222223333344444555556666677777.111111111111111	11111222223333344444555556666677777.111111111111111	Value: 11111222223333344444555556666677777.111111111111111	D50=11111222223333344444555556666677777.111111111111111, D76=11111222223333344444555556666677777888889999900001111122.11111111111111111111
Test1_BASIC_STRING_CONVERSION	7	-77777666665555544444333332222211111.777777777777777	-77777666665555544444333332222211111.777777777777777	Value: -77777666665555544444333332222211111.777777777777777	D50=-77777666665555544444333332222211111.777777777777777, D76=-77777666665555544444333332222211111000009999988888777776.77777777777777777777
-- !result
SELECT
    'Test2_STRING_LENGTH_TRUNCATION' as test_name,
    id,
    d76_0,
    CAST(d76_0 AS STRING) as d76_string,
    LENGTH(CAST(d76_0 AS STRING)) as string_length,
    LEFT(CAST(d76_0 AS STRING), 10) as left_10_chars,
    RIGHT(CAST(d76_0 AS STRING), 10) as right_10_chars,
    SUBSTR(CAST(d76_0 AS STRING), 1, 20) as first_20_chars
FROM decimal_string_test
ORDER BY id;
-- result:
Test2_STRING_LENGTH_TRUNCATION	1	1234567890123456789012345678901234567890123456789012345678901234567890123456	1234567890123456789012345678901234567890123456789012345678901234567890123456	76	1234567890	7890123456	12345678901234567890
Test2_STRING_LENGTH_TRUNCATION	2	-9876543210987654321098765432109876543210987654321098765432109876543210987654	-9876543210987654321098765432109876543210987654321098765432109876543210987654	77	-987654321	3210987654	-9876543210987654321
Test2_STRING_LENGTH_TRUNCATION	3	0	0	1	0	0	0
Test2_STRING_LENGTH_TRUNCATION	4	9999988888777776666655555444443333322222111110000099999888877776666555544	9999988888777776666655555444443333322222111110000099999888877776666555544	73	9999988888	6666555544	99999888887777766666
Test2_STRING_LENGTH_TRUNCATION	5	-8888877777666665555544444333332222211111000009999988888777766665555444433	-8888877777666665555544444333332222211111000009999988888777766665555444433	74	-888887777	5555444433	-8888877777666665555
Test2_STRING_LENGTH_TRUNCATION	6	1111122222333334444455555666667777788888999990000011111222233334444555566	1111122222333334444455555666667777788888999990000011111222233334444555566	73	1111122222	4444555566	11111222223333344444
Test2_STRING_LENGTH_TRUNCATION	7	-7777766666555554444433333222221111100000999998888877777666655554444333322	-7777766666555554444433333222221111100000999998888877777666655554444333322	74	-777776666	4444333322	-7777766666555554444
-- !result
SELECT
    'Test3_STRING_PATTERN_MATCHING' as test_name,
    id,
    d50_15,
    CAST(d50_15 AS STRING) as decimal_string,
    LOCATE('.', CAST(d50_15 AS STRING)) as decimal_point_position,
    LOCATE('-', CAST(d50_15 AS STRING)) as negative_sign_position,
    CASE WHEN CAST(d50_15 AS STRING) LIKE '%-%.%' THEN 'NEGATIVE_DECIMAL'
         WHEN CAST(d50_15 AS STRING) LIKE '%.%' THEN 'POSITIVE_DECIMAL'
         WHEN CAST(d50_15 AS STRING) LIKE '-%' THEN 'NEGATIVE_INTEGER'
         ELSE 'POSITIVE_INTEGER'
    END as number_type
FROM decimal_string_test
ORDER BY id;
-- result:
Test3_STRING_PATTERN_MATCHING	1	12345678901234567890123456789012345.123456789012345	12345678901234567890123456789012345.123456789012345	36	0	POSITIVE_DECIMAL
Test3_STRING_PATTERN_MATCHING	2	-98765432109876543210987654321098765.456789012345678	-98765432109876543210987654321098765.456789012345678	37	1	NEGATIVE_DECIMAL
Test3_STRING_PATTERN_MATCHING	3	1E-15	0.000000000000001	2	0	POSITIVE_DECIMAL
Test3_STRING_PATTERN_MATCHING	4	99999888887777766666555554444433333.999999999999999	99999888887777766666555554444433333.999999999999999	36	0	POSITIVE_DECIMAL
Test3_STRING_PATTERN_MATCHING	5	-88888777776666655555444443333322222.888888888888888	-88888777776666655555444443333322222.888888888888888	37	1	NEGATIVE_DECIMAL
Test3_STRING_PATTERN_MATCHING	6	11111222223333344444555556666677777.111111111111111	11111222223333344444555556666677777.111111111111111	36	0	POSITIVE_DECIMAL
Test3_STRING_PATTERN_MATCHING	7	-77777666665555544444333332222211111.777777777777777	-77777666665555544444333332222211111.777777777777777	37	1	NEGATIVE_DECIMAL
-- !result
SELECT
    'Test4_REGEX_OPERATIONS' as test_name,
    id,
    d76_20,
    CAST(d76_20 AS STRING) as decimal_string,
    REGEXP_EXTRACT(CAST(d76_20 AS STRING), '^(-?[0-9]+)', 1) as integer_part,
    REGEXP_EXTRACT(CAST(d76_20 AS STRING), '\\.([0-9]+)$', 1) as decimal_part,
    REGEXP_REPLACE(CAST(d76_20 AS STRING), '0+$', '') as trimmed_trailing_zeros,
    REGEXP_EXTRACT(CAST(d76_20 AS STRING), '^(-?[0-9]+\\.[0-9]{0,5})', 1) as first_5_decimal_places
FROM decimal_string_test
WHERE d76_20 != 0
ORDER BY id;
-- result:
Test4_REGEX_OPERATIONS	1	12345678901234567890123456789012345678901234567890123456.12345678901234567890	12345678901234567890123456789012345678901234567890123456.12345678901234567890	12345678901234567890123456789012345678901234567890123456	12345678901234567890	12345678901234567890123456789012345678901234567890123456.1234567890123456789	12345678901234567890123456789012345678901234567890123456.12345
Test4_REGEX_OPERATIONS	2	-98765432109876543210987654321098765432109876543210987654.45678901234567890123	-98765432109876543210987654321098765432109876543210987654.45678901234567890123	-98765432109876543210987654321098765432109876543210987654	45678901234567890123	-98765432109876543210987654321098765432109876543210987654.45678901234567890123	-98765432109876543210987654321098765432109876543210987654.45678
Test4_REGEX_OPERATIONS	3	1E-20	0.00000000000000000001	0	00000000000000000001	0.00000000000000000001	0.00000
Test4_REGEX_OPERATIONS	4	99999888887777766666555554444433333222221111100009999988.99999999999999999999	99999888887777766666555554444433333222221111100009999988.99999999999999999999	99999888887777766666555554444433333222221111100009999988	99999999999999999999	99999888887777766666555554444433333222221111100009999988.99999999999999999999	99999888887777766666555554444433333222221111100009999988.99999
Test4_REGEX_OPERATIONS	5	-88888777776666655555444443333322222111110000099999888877.88888888888888888888	-88888777776666655555444443333322222111110000099999888877.88888888888888888888	-88888777776666655555444443333322222111110000099999888877	88888888888888888888	-88888777776666655555444443333322222111110000099999888877.88888888888888888888	-88888777776666655555444443333322222111110000099999888877.88888
Test4_REGEX_OPERATIONS	6	11111222223333344444555556666677777888889999900001111122.11111111111111111111	11111222223333344444555556666677777888889999900001111122.11111111111111111111	11111222223333344444555556666677777888889999900001111122	11111111111111111111	11111222223333344444555556666677777888889999900001111122.11111111111111111111	11111222223333344444555556666677777888889999900001111122.11111
Test4_REGEX_OPERATIONS	7	-77777666665555544444333332222211111000009999988888777776.77777777777777777777	-77777666665555544444333332222211111000009999988888777776.77777777777777777777	-77777666665555544444333332222211111000009999988888777776	77777777777777777777	-77777666665555544444333332222211111000009999988888777776.77777777777777777777	-77777666665555544444333332222211111000009999988888777776.77777
-- !result
SELECT
    'Test5_STRING_SPLITTING' as test_name,
    id,
    d50_15,
    CAST(d50_15 AS STRING) as original_string,
    SPLIT_PART(CAST(ABS(d50_15) AS STRING), '.', 1) as integer_part_split,
    SPLIT_PART(CAST(ABS(d50_15) AS STRING), '.', 2) as decimal_part_split,
    CASE WHEN d50_15 < 0 THEN '-' ELSE '+' END as sign_part
FROM decimal_string_test
ORDER BY id;
-- result:
Test5_STRING_SPLITTING	1	12345678901234567890123456789012345.123456789012345	12345678901234567890123456789012345.123456789012345	12345678901234567890123456789012345	123456789012345	+
Test5_STRING_SPLITTING	2	-98765432109876543210987654321098765.456789012345678	-98765432109876543210987654321098765.456789012345678	98765432109876543210987654321098765	456789012345678	-
Test5_STRING_SPLITTING	3	1E-15	0.000000000000001	0	000000000000001	+
Test5_STRING_SPLITTING	4	99999888887777766666555554444433333.999999999999999	99999888887777766666555554444433333.999999999999999	99999888887777766666555554444433333	999999999999999	+
Test5_STRING_SPLITTING	5	-88888777776666655555444443333322222.888888888888888	-88888777776666655555444443333322222.888888888888888	88888777776666655555444443333322222	888888888888888	-
Test5_STRING_SPLITTING	6	11111222223333344444555556666677777.111111111111111	11111222223333344444555556666677777.111111111111111	11111222223333344444555556666677777	111111111111111	+
Test5_STRING_SPLITTING	7	-77777666665555544444333332222211111.777777777777777	-77777666665555544444333332222211111.777777777777777	77777666665555544444333332222211111	777777777777777	-
-- !result
SELECT
    'Test6_STRING_FORMATTING' as test_name,
    id,
    d76_0,
    CAST(d76_0 AS STRING) as original_string,
    LPAD(CAST(ABS(d76_0) AS STRING), 80, '0') as zero_padded,
    RPAD(CAST(d76_0 AS STRING), 20, ' ') as space_padded
FROM decimal_string_test
ORDER BY id;
-- result:
Test6_STRING_FORMATTING	1	1234567890123456789012345678901234567890123456789012345678901234567890123456	1234567890123456789012345678901234567890123456789012345678901234567890123456	00001234567890123456789012345678901234567890123456789012345678901234567890123456	12345678901234567890
Test6_STRING_FORMATTING	2	-9876543210987654321098765432109876543210987654321098765432109876543210987654	-9876543210987654321098765432109876543210987654321098765432109876543210987654	00009876543210987654321098765432109876543210987654321098765432109876543210987654	-9876543210987654321
Test6_STRING_FORMATTING	3	0	0	00000000000000000000000000000000000000000000000000000000000000000000000000000000	0                   
Test6_STRING_FORMATTING	4	9999988888777776666655555444443333322222111110000099999888877776666555544	9999988888777776666655555444443333322222111110000099999888877776666555544	00000009999988888777776666655555444443333322222111110000099999888877776666555544	99999888887777766666
Test6_STRING_FORMATTING	5	-8888877777666665555544444333332222211111000009999988888777766665555444433	-8888877777666665555544444333332222211111000009999988888777766665555444433	00000008888877777666665555544444333332222211111000009999988888777766665555444433	-8888877777666665555
Test6_STRING_FORMATTING	6	1111122222333334444455555666667777788888999990000011111222233334444555566	1111122222333334444455555666667777788888999990000011111222233334444555566	00000001111122222333334444455555666667777788888999990000011111222233334444555566	11111222223333344444
Test6_STRING_FORMATTING	7	-7777766666555554444433333222221111100000999998888877777666655554444333322	-7777766666555554444433333222221111100000999998888877777666655554444333322	00000007777766666555554444433333222221111100000999998888877777666655554444333322	-7777766666555554444
-- !result
SELECT
    'Test7_CASE_SPECIAL_FORMATTING' as test_name,
    id,
    category,
    d50_15,
    UPPER(CONCAT(category, '_', CAST(d50_15 AS STRING))) as upper_formatted,
    LOWER(CONCAT(category, '_', CAST(d50_15 AS STRING))) as lower_formatted
FROM decimal_string_test
ORDER BY id;
-- result:
Test7_CASE_SPECIAL_FORMATTING	1	A	12345678901234567890123456789012345.123456789012345	A_12345678901234567890123456789012345.123456789012345	a_12345678901234567890123456789012345.123456789012345
Test7_CASE_SPECIAL_FORMATTING	2	B	-98765432109876543210987654321098765.456789012345678	B_-98765432109876543210987654321098765.456789012345678	b_-98765432109876543210987654321098765.456789012345678
Test7_CASE_SPECIAL_FORMATTING	3	C	1E-15	C_0.000000000000001	c_0.000000000000001
Test7_CASE_SPECIAL_FORMATTING	4	A	99999888887777766666555554444433333.999999999999999	A_99999888887777766666555554444433333.999999999999999	a_99999888887777766666555554444433333.999999999999999
Test7_CASE_SPECIAL_FORMATTING	5	B	-88888777776666655555444443333322222.888888888888888	B_-88888777776666655555444443333322222.888888888888888	b_-88888777776666655555444443333322222.888888888888888
Test7_CASE_SPECIAL_FORMATTING	6	C	11111222223333344444555556666677777.111111111111111	C_11111222223333344444555556666677777.111111111111111	c_11111222223333344444555556666677777.111111111111111
Test7_CASE_SPECIAL_FORMATTING	7	A	-77777666665555544444333332222211111.777777777777777	A_-77777666665555544444333332222211111.777777777777777	a_-77777666665555544444333332222211111.777777777777777
-- !result
SELECT
    'Test8_COMPLEX_STRING_OPERATIONS' as test_name,
    id,
    d50_15,
    d76_20,
    d76_0,
    CONCAT_WS(' | ', 
        CONCAT('D50: ', CAST(d50_15 AS STRING)),
        CONCAT('D76_20: ', CAST(d76_20 AS STRING)),
        CONCAT('D76_0: ', CAST(d76_0 AS STRING))
    ) as pipe_separated,
    REPLACE(
        REPLACE(CAST(d50_15 AS STRING), '.', '_DOT_'),
        '-', '_MINUS_'
    ) as symbol_replaced,
    REVERSE(CAST(ABS(d50_15) AS STRING)) as reversed_string
FROM decimal_string_test
ORDER BY id;
-- result:
Test8_COMPLEX_STRING_OPERATIONS	1	12345678901234567890123456789012345.123456789012345	12345678901234567890123456789012345678901234567890123456.12345678901234567890	1234567890123456789012345678901234567890123456789012345678901234567890123456	D50: 12345678901234567890123456789012345.123456789012345 | D76_20: 12345678901234567890123456789012345678901234567890123456.12345678901234567890 | D76_0: 1234567890123456789012345678901234567890123456789012345678901234567890123456	12345678901234567890123456789012345_DOT_123456789012345	543210987654321.54321098765432109876543210987654321
Test8_COMPLEX_STRING_OPERATIONS	2	-98765432109876543210987654321098765.456789012345678	-98765432109876543210987654321098765432109876543210987654.45678901234567890123	-9876543210987654321098765432109876543210987654321098765432109876543210987654	D50: -98765432109876543210987654321098765.456789012345678 | D76_20: -98765432109876543210987654321098765432109876543210987654.45678901234567890123 | D76_0: -9876543210987654321098765432109876543210987654321098765432109876543210987654	_MINUS_98765432109876543210987654321098765_DOT_456789012345678	876543210987654.56789012345678901234567890123456789
Test8_COMPLEX_STRING_OPERATIONS	3	1E-15	1E-20	0	D50: 0.000000000000001 | D76_20: 0.00000000000000000001 | D76_0: 0	0_DOT_000000000000001	100000000000000.0
Test8_COMPLEX_STRING_OPERATIONS	4	99999888887777766666555554444433333.999999999999999	99999888887777766666555554444433333222221111100009999988.99999999999999999999	9999988888777776666655555444443333322222111110000099999888877776666555544	D50: 99999888887777766666555554444433333.999999999999999 | D76_20: 99999888887777766666555554444433333222221111100009999988.99999999999999999999 | D76_0: 9999988888777776666655555444443333322222111110000099999888877776666555544	99999888887777766666555554444433333_DOT_999999999999999	999999999999999.33333444445555566666777778888899999
Test8_COMPLEX_STRING_OPERATIONS	5	-88888777776666655555444443333322222.888888888888888	-88888777776666655555444443333322222111110000099999888877.88888888888888888888	-8888877777666665555544444333332222211111000009999988888777766665555444433	D50: -88888777776666655555444443333322222.888888888888888 | D76_20: -88888777776666655555444443333322222111110000099999888877.88888888888888888888 | D76_0: -8888877777666665555544444333332222211111000009999988888777766665555444433	_MINUS_88888777776666655555444443333322222_DOT_888888888888888	888888888888888.22222333334444455555666667777788888
Test8_COMPLEX_STRING_OPERATIONS	6	11111222223333344444555556666677777.111111111111111	11111222223333344444555556666677777888889999900001111122.11111111111111111111	1111122222333334444455555666667777788888999990000011111222233334444555566	D50: 11111222223333344444555556666677777.111111111111111 | D76_20: 11111222223333344444555556666677777888889999900001111122.11111111111111111111 | D76_0: 1111122222333334444455555666667777788888999990000011111222233334444555566	11111222223333344444555556666677777_DOT_111111111111111	111111111111111.77777666665555544444333332222211111
Test8_COMPLEX_STRING_OPERATIONS	7	-77777666665555544444333332222211111.777777777777777	-77777666665555544444333332222211111000009999988888777776.77777777777777777777	-7777766666555554444433333222221111100000999998888877777666655554444333322	D50: -77777666665555544444333332222211111.777777777777777 | D76_20: -77777666665555544444333332222211111000009999988888777776.77777777777777777777 | D76_0: -7777766666555554444433333222221111100000999998888877777666655554444333322	_MINUS_77777666665555544444333332222211111_DOT_777777777777777	777777777777777.11111222223333344444555556666677777
-- !result