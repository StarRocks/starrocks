-- name: test_decimal_cast

CREATE TABLE t1 (
    k1 bigint NULL,

    c_tinyint tinyint null,
    c_int int null,
    c_bigint bigint null,
    c_largeint largeint null
) ENGINE=OLAP
DUPLICATE KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 96
PROPERTIES (
    "replication_num" = "1"
);

insert into t1 values
    (1, 127, 2147483647, 9223372036854775807, 170141183460469231731687303715884105727),
    (2, -128, -2147483648, -9223372036854775808, -170141183460469231731687303715884105728),
    (3, null, null, null, null),
    (4, 0, 0, 0, 0),
    (5, 1, 1, 1, 1),
    (6, -1, -1, -1, -1),
    (7, 12, 214748364, 922337203685477580, 17014118346046923173168730371588410572),
    (8, -12, -214748364, -922337203685477580, -17014118346046923173168730371588410572);

select 
    k1,
    cast(c_tinyint as DECIMAL(9,0)),
    cast(c_int as DECIMAL(9,0)),
    cast(c_bigint as DECIMAL(9,0)),
    cast(c_largeint as DECIMAL(9,0))
from t1
order by k1;

select 
    k1,
    cast(c_tinyint as DECIMAL(9,1)),
    cast(c_int as DECIMAL(9,1)),
    cast(c_bigint as DECIMAL(9,1)),
    cast(c_largeint as DECIMAL(9,1))
from t1
order by k1;

select 
    k1,
    cast(c_tinyint as DECIMAL(27,0)),
    cast(c_int as DECIMAL(27,0)),
    cast(c_bigint as DECIMAL(27,0)),
    cast(c_largeint as DECIMAL(27,0))
from t1
order by k1;

select 
    k1,
    cast(c_tinyint as DECIMAL(27,1)),
    cast(c_int as DECIMAL(27,1)),
    cast(c_bigint as DECIMAL(27,1)),
    cast(c_largeint as DECIMAL(27,1))
from t1
order by k1;

select 
    k1,
    cast(c_tinyint as DECIMAL(38,0)),
    cast(c_int as DECIMAL(38,0)),
    cast(c_bigint as DECIMAL(38,0)),
    cast(c_largeint as DECIMAL(38,0))
from t1
order by k1;

select 
    k1,
    cast(c_tinyint as DECIMAL(38,1)),
    cast(c_int as DECIMAL(38,1)),
    cast(c_bigint as DECIMAL(38,1)),
    cast(c_largeint as DECIMAL(38,1))
from t1
order by k1;

select k1, c_tinyint * 0, c_int * 0, c_bigint * 0, c_largeint * 0 from t1 order by k1;
select k1, c_tinyint * 1, c_int * 1, c_bigint * 1, c_largeint * 1 from t1 order by k1;
select k1, c_tinyint * -1, c_int * -1, c_bigint * -1, c_largeint * -1 from t1 order by k1;

