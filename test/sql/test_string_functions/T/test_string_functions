-- name: test_string_functions
-- function: lpad
select lpad('test', 8, '');
select lpad('test', 8, ' ');
select lpad('test', 8, '中文，');
select lpad('test', 8);
select lpad('test', 2, '');
select lpad('test', 2, ' ');
select lpad('test', 2, '中文，');
select lpad('test', 2);
select lpad('test', 0, '');
select lpad('test', 0, ' ');
select lpad('test', 0, '中文，');
select lpad('test', 0);

-- function: rpad
select rpad('test', 8, '');
select rpad('test', 8, ' ');
select rpad('test', 8, '中文，');
select rpad('test', 8);
select rpad('test', 2, '');
select rpad('test', 2, ' ');
select rpad('test', 2, '中文，');
select rpad('test', 2);
select rpad('test', 0, '');
select rpad('test', 0, ' ');
select rpad('test', 0, '中文，');
select rpad('test', 0);

create table t0(c0 varchar(16), c1 INT(16))
        DUPLICATE KEY(c0)
        DISTRIBUTED BY HASH(c0)
        BUCKETS 1
        PROPERTIES('replication_num'='1');
-- insert 3 rows
insert into t0 values ('test', 8), ('test', 2), ('test', 0);
select lpad(c0, c1, ' ') from t0;
select lpad(c0, c1, '中文，') from t0;
select lpad(c0, c1, '') from t0;
select lpad(c0, c1) from t0;
select rpad(c0, c1, ' ') from t0;
select rpad(c0, c1, '中文，') from t0;
select rpad(c0, c1, '') from t0;
select rpad(c0, c1) from t0;

-- function: split_part
select split_part("hello world", " ", 1);
select split_part("hello world", " ", 2);
select split_part("hello world", " ", -1);
select split_part("hello world", " ", -2);
select split_part("2023年5月23号", "月", 1);
select split_part("2023年5月23号", "月", -1);
select split_part("abc##567###234", "##", 1);
select split_part("abc##567###234", "##", 2);
select split_part("abc##567###234", "##", -1);
select split_part("abc##567###234", "##", -2);

create table t1(c0 varchar(20), c1 varchar(20))
        DUPLICATE KEY(c0)
        DISTRIBUTED BY HASH(c0)
        BUCKETS 1
        PROPERTIES('replication_num'='1');
-- insert 1 rows
insert into t1 values ('hello world', 'abc##567###234');
select split_part(c0, " ", 1) from t1;
select split_part(c0, " ", 2) from t1;
select split_part(c0, " ", -1) from t1;
select split_part(c0, " ", -2) from t1;
select split_part(c1, "##", 1) from t1;
select split_part(c1, "##", 2) from t1;
select split_part(c1, "##", 3) from t1;
select split_part(c1, "##", -1) from t1;
select split_part(c1, "##", -2) from t1;
select split_part(c1, "##", -3) from t1;

-- name: test_url_extract_host
select url_extract_host('https://starrocks.com/test/api/v1');
select url_extract_host('https://starrocks.快速.com/test/api/v1');
select url_extract_host(NULL);
select url_extract_host('https://starrocks.com/doc?k1=10&k2=3&k1=100');
CREATE TABLE IF NOT EXISTS `test_url_extract_host` (
  `id` varchar(10),
  `url` varchar(100)
)
PROPERTIES(
  "replication_num" = "1"
);
insert into test_url_extract_host(id,url)
values ('1', 'https://starrocks.com/doc?k1=10&k2=3&k1=100'),
       ('2', 'https://starrocks.快速.com/doc?k1=10&k2=3&k1=100');
select url_extract_host(url) from test_url_extract_host;

-- name: test_url_encode
select url_encode('https://docs.starrocks.io/en-us/latest/quick_start/Deploy');
select url_encode('https://docs.starrocks数据库.io/en-us/latest/quick_start/Deploy?name=快速');
select url_encode(NULL);

--name: test_url_decode
select url_decode('https%3A%2F%2Fdocs.starrocks.io%2Fen-us%2Flatest%2Fquick_start%2FDeploy');
select url_decode('https%3A%2F%2Fdocs.starrocks%E6%95%B0%E6%8D%AE%E5%BA%93.io%2Fen-us%2Flatest%2Fquick_start%2FDeploy%3Fname%3D%E5%BF%AB%E9%80%9F');
select url_decode(NULL);

-- function: substring_index
select substring_index("hello world", " ", 1);
select substring_index("hello world", " ", 2);
select substring_index("hello world", " ", -1);
select substring_index("hello world", " ", -2);
select substring_index("com.mysql.com", ".", 1);
select substring_index("com.mysql.com", ".", 2);
select substring_index("com.mysql.com", ".", 3);
select substring_index("com.mysql.com", ".", -1);
select substring_index("com.mysql.com", ".", -2);
select substring_index("com.mysql.com", ".", -3);

create table t2(c0 varchar(20), c1 varchar(20))
        DUPLICATE KEY(c0)
        DISTRIBUTED BY HASH(c0)
        BUCKETS 1
        PROPERTIES('replication_num'='1');
-- insert 1 rows
insert into t2 values ('hello world', 'com.mysql.com');
select substring_index(c0, " ", 1) from t2;
select substring_index(c0, " ", 2) from t2;
select substring_index(c0, " ", -1) from t2;
select substring_index(c0, " ", -2) from t2;
select substring_index(c1, ".", 1) from t2;
select substring_index(c1, ".", 2) from t2;
select substring_index(c1, ".", 3) from t2;
select substring_index(c1, ".", -1) from t2;
select substring_index(c1, ".", -2) from t2;
select substring_index(c1, ".", -3) from t2;

-- function: crc32
select crc32("starrocks");
select crc32("STARROCKS");
select crc32("中文");

create table crc01(c0 varchar(20), c1 varchar(20), c2 varchar(20))
        DUPLICATE KEY(c0)
        DISTRIBUTED BY HASH(c0)
        BUCKETS 1
        PROPERTIES('replication_num'='1');
insert into crc01 values ('hello world', 'com.mysql.com', "镜舟科技");
select crc32(c0) from crc01;
select crc32(c1) from crc01;
select crc32(c2) from crc01;

-- name: test_ngram_search
-- case1: const/const  normal case
select ngram_search("chinese","china",4);

select ngram_search("chinese","CHINESE",4);
select ngram_search_case_insensitive("chinese","CHINESE",4);
select ngram_search_case_insensitive("CHINESE","chinese",4);

-- case 2:const/const corner case
select ngram_search("chinese","",4);
select ngram_search("","chinese",4);
select ngram_search("","",4);
-- this is because length("chi") < 4
select ngram_search("chi","chi",4);

-- case3: column/const
CREATE TABLE `string_table` (
  `rowkey` varchar(300) NOT NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`rowkey`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`rowkey`) BUCKETS 64
PROPERTIES (
    "replication_num" = "1",
    "bucket_size" = "4294967296",
    "storage_volume" = "builtin_storage_volume",
    "enable_persistent_index" = "false",
    "compression" = "LZ4"
);
insert into string_table values
("000073a7-274f-46bf-bfaf-678868cc26cd"),
("e6249ba1-5b54-46bf-bfaf-89d69094b757"),
("93da4b36-5401-46bf-bfa7-2bde65779623"),
("2548c7aa-d94f-46bf-b0a4-d769f248cbb2"),
("1bd32347-274f-4a30-93f3-9087594de9cd");

select ngram_search(rowkey,"000073a7-274f-46bf-bfaf-678868cc26cd",4) as a from string_table order by a;
select ngram_search(rowkey, "e6249ba1-5b54-46bf-bfaf-89d69094b757",4) as a from string_table order by a;

-- case4: only support (column,const) and (const,const)
select ngram_search("000073a7-274f-46bf-bfaf-678868cc26cd",rowkey,4) from string_table;

-- case5: gram_num is 0
select ngram_search("chi","chi",0);
select ngram_search("chi","chi",-1);

-- only support string,string
select ngram_search(date('2020-06-23'), "2020", 4);

-- const value with two chunk
select sum(result) from ( select ngram_search("normal_string", "normal_string", 5) as result from (   select generate_series    from TABLE(generate_series(0, 4097 - 1)) ) as t1) as t2;

