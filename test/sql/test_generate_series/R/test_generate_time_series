-- name: generate_series_by_seconds_01
select * from table(generate_series('2023-12-31 23:59:56', '2024-01-01 00:00:06', interval 3 second));
-- result:
2023-12-31 23:59:56
2023-12-31 23:59:59
2024-01-01 00:00:02
2024-01-01 00:00:05
-- !result
-- name: generate_series_by_seconds_02
select * from table(generate_series('2024-01-01 00:00:06', '2023-12-31 23:59:56', interval 3 second));
-- result:
-- !result
-- name: generate_series_by_seconds_03
select * from table(generate_series('2024-01-01 00:00:06', '2023-12-31 23:59:56', interval -3 second));
-- result:
2024-01-01 00:00:06
2024-01-01 00:00:03
2024-01-01 00:00:00
2023-12-31 23:59:57
-- !result
-- name: generate_series_by_minute_01
select * from table(generate_series('2023-12-31 23:57:56', '2024-01-01 00:05:06', interval 2 minute));
-- result:
2023-12-31 23:57:56
2023-12-31 23:59:56
2024-01-01 00:01:56
2024-01-01 00:03:56
-- !result
-- name: generate_series_by_minute_02
select * from table(generate_series('2024-01-01 00:05:06', '2023-12-31 23:57:56', interval -2 minute));
-- result:
2024-01-01 00:05:06
2024-01-01 00:03:06
2024-01-01 00:01:06
2023-12-31 23:59:06
-- !result
-- name: generate_series_by_hour_01
select * from table(generate_series('2023-12-31 19:59:56', '2024-01-01 02:00:06', interval 3 hour));
-- result:
2023-12-31 19:59:56
2023-12-31 22:59:56
2024-01-01 01:59:56
-- !result
-- name: generate_series_by_hour_02
select * from table(generate_series('2024-01-01 02:00:06', '2023-12-31 19:59:56', interval -3 hour));
-- result:
2024-01-01 02:00:06
2023-12-31 23:00:06
2023-12-31 20:00:06
-- !result
-- name: generate_series_by_day_01
select * from table(generate_series('2023-02-27', '2023-03-02'));
-- result:
2023-02-27 00:00:00
2023-02-28 00:00:00
2023-03-01 00:00:00
2023-03-02 00:00:00
-- !result
-- name: generate_series_by_day_02
select * from table(generate_series('2024-02-27 02:05:15', '2024-03-02 04:11:17'));
-- result:
2024-02-27 02:05:15
2024-02-28 02:05:15
2024-02-29 02:05:15
2024-03-01 02:05:15
2024-03-02 02:05:15
-- !result
-- name: generate_series_by_day_03
select * from table(generate_series('2023-02-02', '2023-01-30'));
-- result:
-- !result
-- name: generate_series_by_day_04
select * from table(generate_series('2023-11-25', '2024-01-20', 15));
-- result:
2023-11-25 00:00:00
2023-12-10 00:00:00
2023-12-25 00:00:00
2024-01-09 00:00:00
-- !result
-- name: generate_series_by_day_04
select * from table(generate_series('2023-01-30', '2023-02-02', interval 2 day));
-- result:
2023-01-30 00:00:00
2023-02-01 00:00:00
-- !result
-- name: generate_series_by_day_06
select * from table(generate_series('2023-02-02', '2023-01-30', -2));
-- result:
2023-02-02 00:00:00
2023-01-31 00:00:00
-- !result
-- name: generate_series_by_month_01
select * from table(generate_series('2023-04-02', '2024-03-08', interval 3 month));
-- result:
2023-04-02 00:00:00
2023-07-02 00:00:00
2023-10-02 00:00:00
2024-01-02 00:00:00
-- !result
-- name: generate_series_by_month_02
select * from table(generate_series('2024-03-08', '2023-04-02', interval -3 month));
-- result:
2024-03-08 00:00:00
2023-12-08 00:00:00
2023-09-08 00:00:00
2023-06-08 00:00:00
-- !result
-- name: generate_series_by_month_01
select * from table(generate_series('1996-04-02', '2024-03-08', interval 3 year));
-- result:
1996-04-02 00:00:00
1999-04-02 00:00:00
2002-04-02 00:00:00
2005-04-02 00:00:00
2008-04-02 00:00:00
2011-04-02 00:00:00
2014-04-02 00:00:00
2017-04-02 00:00:00
2020-04-02 00:00:00
2023-04-02 00:00:00
-- !result
-- name: generate_series_by_month_02
select * from table(generate_series('2024-03-08', '1996-04-02', interval -3 year));
-- result:
2024-03-08 00:00:00
2021-03-08 00:00:00
2018-03-08 00:00:00
2015-03-08 00:00:00
2012-03-08 00:00:00
2009-03-08 00:00:00
2006-03-08 00:00:00
2003-03-08 00:00:00
2000-03-08 00:00:00
1997-03-08 00:00:00
-- !result
-- name: generate_series_abnormal_case_01
SELECT * from table(generate_series('2023-12-29 00:00:00', '2024-01-02 00:00:00', 2.4));
-- result:
E: (1064, "Getting analyzing error. Detail message: step/interval value expr must be integer type when use table function 'generate_series' generate time series, currently 'DECIMAL32(2,1)'.")
-- !result
SELECT * from table(generate_series('2023-12-29 00:00:00', '2024-01-02 00:00:00', interval 2.3 second));
-- result:
E: (1064, "Getting analyzing error. Detail message: step/interval value expr must be integer type when use table function 'generate_series' generate time series, currently 'DECIMAL32(2,1)'.")
-- !result
-- name: generate_series_abnormal_case_02
CREATE TABLE t_datetime (seq int, start datetime, end datetime, step int) DUPLICATE KEY(`seq`) DISTRIBUTED BY HASH(seq) BUCKETS 1;
-- result:
-- !result
INSERT INTO t_datetime VALUES(1, '2023-12-31 23:59:57', '2024-01-01 00:00:04', 2),(2, NULL, '2024-01-01 00:00:04', 2),(3, '2023-12-31 23:59:57', NULL, 2),(4, '2023-12-31 23:59:57', '2024-01-01 00:00:04', NULL);
-- result:
-- !result
SELECT * FROM t_datetime, generate_series(t_datetime.start, t_datetime.end, interval 3 second);
-- result:
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2023-12-31 23:59:57
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2024-01-01 00:00:00
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2024-01-01 00:00:03
5	2023-12-31 23:59:57	2024-01-01 00:00:04	NULL	2023-12-31 23:59:57
5	2023-12-31 23:59:57	2024-01-01 00:00:04	NULL	2024-01-01 00:00:00
5	2023-12-31 23:59:57	2024-01-01 00:00:04	NULL	2024-01-01 00:00:03
-- !result
SELECT * FROM t_datetime, generate_series(start, end, interval step second);
-- result:
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2023-12-31 23:59:57
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2023-12-31 23:59:59
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2024-01-01 00:00:01
1	2023-12-31 23:59:57	2024-01-01 00:00:04	2	2024-01-01 00:00:03
2	2024-01-01 00:00:06	2023-12-31 23:59:56	-3	2024-01-01 00:00:06
2	2024-01-01 00:00:06	2023-12-31 23:59:56	-3	2024-01-01 00:00:03
2	2024-01-01 00:00:06	2023-12-31 23:59:56	-3	2024-01-01 00:00:00
2	2024-01-01 00:00:06	2023-12-31 23:59:56	-3	2023-12-31 23:59:57
-- !result
