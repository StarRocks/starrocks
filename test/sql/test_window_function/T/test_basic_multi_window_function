-- name: test_basic_multi_window_function
CREATE TABLE `t0` (
  `v1` int(11) NULL,
  `v2` int(11) NULL,
  `v3` int(11) NOT NULL,
  `v4` int(11) NULL
) ENGINE=OLAP
DUPLICATE KEY(`v1`)
DISTRIBUTED BY HASH(`v1`) BUCKETS 10
PROPERTIES (
 "replication_num" = "1"
);

INSERT INTO `t0` (v1, v2, v3, v4) values
    (1, 1, 1, NULL),
    (1, 1, 2, NULL),
    (1, NULL, 3, NULL),
    (1, NULL, 4, NULL),
    (1, 2, 5, NULL),
    (1, 2, 6, NULL),
    (1, NULL, 7, NULL),
    (1, NULL, 8, NULL),
    (2, 3, 9, NULL),
    (2, 3, 10, NULL),
    (2, NULL, 11, NULL),
    (2, NULL, 12, NULL),
    (2, 4, 13, NULL),
    (2, 4, 14, NULL),
    (2, NULL, 15, NULL),
    (2, NULL, 16, NULL),
    (NULL, 3, 17, NULL),
    (NULL, 3, 18, NULL),
    (NULL, NULL, 19, NULL),
    (NULL, NULL, 20, NULL),
    (NULL, 4, 21, NULL),
    (NULL, 4, 22, NULL),
    (NULL, NULL, 23, NULL),
    (NULL, NULL, 24, NULL);

INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;
INSERT INTO `t0` SELECT * FROM `t0`;

INSERT INTO `t0` (v1, v2, v3, v4) values
    (101, 101, 101, NULL),
    (101, 101, 102, NULL),
    (101, NULL, 103, NULL),
    (101, NULL, 104, NULL),
    (101, 102, 105, NULL),
    (101, 102, 106, NULL),
    (101, NULL, 107, NULL),
    (101, NULL, 108, NULL),
    (102, 103, 109, NULL),
    (102, 103, 110, NULL),
    (102, NULL, 111, NULL),
    (102, NULL, 112, NULL),
    (102, 104, 113, NULL),
    (102, 104, 114, NULL),
    (102, NULL, 115, NULL),
    (102, NULL, 116, NULL),
    (NULL, 103, 117, NULL),
    (NULL, 103, 118, NULL),
    (NULL, NULL, 119, NULL),
    (NULL, NULL, 120, NULL),
    (NULL, 104, 121, NULL),
    (NULL, 104, 122, NULL),
    (NULL, NULL, 123, NULL),
    (NULL, NULL, 124, NULL);

INSERT INTO `t0` SELECT * FROM `t0`;

CREATE TABLE `t1` (
  `v1` decimal64(18,5) NULL,
  `v2` decimal64(18,5) NULL,
  `v3` decimal64(18,5) NOT NULL,
  `v4` decimal64(18,5) NULL,
  `v5` decimal64(18,5) NOT NULL,
  `v6` decimal64(18,5) NOT NULL,
  `v7` decimal64(18,5) NOT NULL
) ENGINE=OLAP
DUPLICATE KEY(`v1`)
DISTRIBUTED BY HASH(`v1`) BUCKETS 10
PROPERTIES (
 "replication_num" = "1"
);

INSERT INTO `t1` (v1, v2, v3, v4, v5, v6, v7) 
SELECT v1, v2, v3, v4,
row_number() OVER (ORDER BY v1, v2, v3, v4) as v5,
row_number() OVER (PARTITION BY v1 ORDER BY v2, v3, v4) as v6,
1 as v7
FROM `t0`;

-- ========================================================= MULTI_FUNC(NO_LEAD_LAG) =========================================================

-- MULTI(HAS_NULL) without partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v2) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(HAS_NULL) with partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(NOT_NULL) without partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v3) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(NOT_NULL) with partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(ALL_NULL) without partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v4) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(ALL_NULL) with partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        COUNT(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;

-- ========================================================= MULTI_FUNC(NO_LEAD_LAG, REMOVABLE WITH NON-REMOVABLE) =========================================================

-- MULTI(HAS_NULL) without partition by
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v2) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(HAS_NULL) with partition by
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v2 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(NOT_NULL) without partition by
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v3) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(NOT_NULL) with partition by
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v3 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v3 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(ALL_NULL) without partition by
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v4) OVER(ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4 IGNORE NULLS) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
-- MULTI(ALL_NULL) with partition by
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 10 PRECEDING AND 5 PRECEDING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 PRECEDING AND 5 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN 5 FOLLOWING AND 10 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;
SELECT
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2),
    SUM(wv3), AVG(wv3), MIN(wv3), MAX(wv3),
    SUM(wv4), AVG(wv4), MIN(wv4), MAX(wv4)
FROM (
    SELECT
        AVG(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv1,
        MAX(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv2,
        FIRST_VALUE(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv3,
        LAST_VALUE(v4 IGNORE NULLS) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS wv4
    FROM t1
) a;

-- ========================================================= MULTI_FUNC(LEAD_LAG) =========================================================

-- MULTI(HAS_NULL) without partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v2, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v2 IGNORE NULLS, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v2, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v2 IGNORE NULLS, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v2) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
-- MULTI(HAS_NULL) with partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v2, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v2 IGNORE NULLS, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v2, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v2 IGNORE NULLS, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v2) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
-- MULTI(NOT_NULL) without partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v3, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v3 IGNORE NULLS, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v3, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v3 IGNORE NULLS, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v3) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
-- MULTI(NOT_NULL) with partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v3, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v3 IGNORE NULLS, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v3, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v3 IGNORE NULLS, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v3) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
-- MULTI(ALL_NULL) without partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v4, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v4 IGNORE NULLS, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v4, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v4 IGNORE NULLS, 3) OVER(ORDER BY v5) AS wv1,
        SUM(v4) OVER(ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
-- MULTI(ALL_NULL) with partition by
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v4, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LEAD(v4 IGNORE NULLS, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 FOLLOWING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v4, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
SELECT 
    SUM(wv1), AVG(wv1), MIN(wv1), MAX(wv1),
    SUM(wv2), AVG(wv2), MIN(wv2), MAX(wv2)
FROM (
    SELECT
        LAG(v4 IGNORE NULLS, 3) OVER(PARTITION BY v1 ORDER BY v5) AS wv1,
        SUM(v4) OVER(PARTITION BY v1 ORDER BY v5 ROWS BETWEEN UNBOUNDED PRECEDING AND 3 PRECEDING) AS wv2
    FROM t1
) a;
