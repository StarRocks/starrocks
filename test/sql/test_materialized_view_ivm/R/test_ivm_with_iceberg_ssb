-- name: test_ivm_with_iceberg_ssb
create external catalog mv_iceberg_${uuid0}
properties
(
    "type" = "iceberg",
    "iceberg.catalog.type" = "hive",
    "hive.metastore.uris" = "${iceberg_catalog_hive_metastore_uris}"
);
-- result:
-- !result
set catalog mv_iceberg_${uuid0};
-- result:
-- !result
create database mv_ice_db_${uuid0};
-- result:
-- !result
use mv_ice_db_${uuid0};
-- result:
-- !result
CREATE TABLE IF NOT EXISTS `customer` (
  `c_custkey` int(11) NOT NULL COMMENT "",
  `c_name` varchar(26) NOT NULL COMMENT "",
  `c_address` varchar(41) NOT NULL COMMENT "",
  `c_city` varchar(11) NOT NULL COMMENT "",
  `c_nation` varchar(16) NOT NULL COMMENT "",
  `c_region` varchar(13) NOT NULL COMMENT "",
  `c_phone` varchar(16) NOT NULL COMMENT "",
  `c_mktsegment` varchar(11) NOT NULL COMMENT ""
);
-- result:
-- !result
CREATE TABLE IF NOT EXISTS `dates` (
  `d_datekey` date NOT NULL COMMENT "",
  `d_date` varchar(20) NOT NULL COMMENT "",
  `d_dayofweek` varchar(10) NOT NULL COMMENT "",
  `d_month` varchar(11) NOT NULL COMMENT "",
  `d_year` int(11) NOT NULL COMMENT "",
  `d_yearmonthnum` int(11) NOT NULL COMMENT "",
  `d_yearmonth` varchar(9) NOT NULL COMMENT "",
  `d_daynuminweek` int(11) NOT NULL COMMENT "",
  `d_daynuminmonth` int(11) NOT NULL COMMENT "",
  `d_daynuminyear` int(11) NOT NULL COMMENT "",
  `d_monthnuminyear` int(11) NOT NULL COMMENT "",
  `d_weeknuminyear` int(11) NOT NULL COMMENT "",
  `d_sellingseason` varchar(14) NOT NULL COMMENT "",
  `d_lastdayinweekfl` int(11) NOT NULL COMMENT "",
  `d_lastdayinmonthfl` int(11) NOT NULL COMMENT "",
  `d_holidayfl` int(11) NOT NULL COMMENT "",
  `d_weekdayfl` int(11) NOT NULL COMMENT ""
);
-- result:
-- !result
CREATE TABLE IF NOT EXISTS `supplier` (
 `s_suppkey` int(11) NOT NULL COMMENT "",
 `s_name` varchar(26) NOT NULL COMMENT "",
 `s_address` varchar(26) NOT NULL COMMENT "",
 `s_city` varchar(11) NOT NULL COMMENT "",
 `s_nation` varchar(16) NOT NULL COMMENT "",
 `s_region` varchar(13) NOT NULL COMMENT "",
 `s_phone` varchar(16) NOT NULL COMMENT ""
);
-- result:
-- !result
CREATE TABLE IF NOT EXISTS `part` (
  `p_partkey` int(11) NOT NULL COMMENT "",
  `p_name` varchar(23) NOT NULL COMMENT "",
  `p_mfgr` varchar(7) NOT NULL COMMENT "",
  `p_category` varchar(8) NOT NULL COMMENT "",
  `p_brand` varchar(10) NOT NULL COMMENT "",
  `p_color` varchar(12) NOT NULL COMMENT "",
  `p_type` varchar(26) NOT NULL COMMENT "",
  `p_size` int(11) NOT NULL COMMENT "",
  `p_container` varchar(11) NOT NULL COMMENT ""
);
-- result:
-- !result
CREATE TABLE `lineorder` (
  `lo_orderkey` int(11) NOT NULL COMMENT "",
  `lo_linenumber` int(11) NOT NULL COMMENT "",
  `lo_custkey` int(11) NOT NULL COMMENT "",
  `lo_partkey` int(11) NOT NULL COMMENT "",
  `lo_suppkey` int(11) NOT NULL COMMENT "",
  `lo_orderdate` date NOT NULL COMMENT "",
  `lo_orderpriority` varchar(100) NOT NULL COMMENT "",
  `lo_shippriority` tinyint NOT NULL COMMENT "",
  `lo_quantity` tinyint NOT NULL COMMENT "",
  `lo_extendedprice` int(11) NOT NULL COMMENT "",
  `lo_ordtotalprice` int(11) NOT NULL COMMENT "",
  `lo_discount` tinyint NOT NULL COMMENT "",
  `lo_revenue` int(11) NOT NULL COMMENT "",
  `lo_supplycost` int(11) NOT NULL COMMENT "",
  `lo_tax` tinyint NOT NULL COMMENT "",
  `lo_commitdate` date NOT NULL COMMENT "",
  `lo_shipmode` varchar(100) NOT NULL COMMENT ""
);
-- result:
-- !result
INSERT INTO customer VALUES
(1, 'Customer#000000001', '1234 Main St', 'New York', 'UNITED STATES', 'AMERICA', '555-0001', 'AUTOMOBILE'),
(2, 'Customer#000000002', '5678 Oak Ave', 'Los Angeles', 'UNITED STATES', 'AMERICA', '555-0002', 'BUILDING'),
(3, 'Customer#000000003', '9012 Pine Rd', 'Chicago', 'UNITED STATES', 'AMERICA', '555-0003', 'MACHINERY');
-- result:
-- !result
INSERT INTO dates VALUES
('1997-01-01', '1997-01-01', 'Wednesday', 'January', 1997, 199701, 'Jan1997', 3, 1, 1, 1, 1, 'Christmas', 0, 0, 0, 1),
('1997-01-02', '1997-01-02', 'Thursday', 'January', 1997, 199701, 'Jan1997', 4, 2, 2, 1, 1, 'Christmas', 0, 0, 0, 1),
('1997-01-15', '1997-01-15', 'Wednesday', 'January', 1997, 199701, 'Jan1997', 3, 15, 15, 1, 3, 'Christmas', 0, 0, 0, 1),
('1997-02-01', '1997-02-01', 'Saturday', 'February', 1997, 199702, 'Feb1997', 6, 1, 32, 2, 5, 'None', 0, 0, 0, 0);
-- result:
-- !result
INSERT INTO supplier VALUES
(1, 'Supplier#000000001', '123 Supply St', 'San Francisco', 'UNITED STATES', 'AMERICA', '555-1001'),
(2, 'Supplier#000000002', '456 Vendor Ave', 'Seattle', 'UNITED STATES', 'AMERICA', '555-1002'),
(3, 'Supplier#000000003', '789 Trade Blvd', 'Boston', 'UNITED STATES', 'AMERICA', '555-1003');
-- result:
-- !result
INSERT INTO part VALUES
(1, 'almond antique burnished', 'MFGR#1', 'MFGR#11', 'BRAND#11', 'almond', 'STANDARD ANODIZED TIN', 10, 'SM CASE'),
(2, 'almond aquamarine burnished', 'MFGR#1', 'MFGR#12', 'BRAND#12', 'aquamarine', 'STANDARD POLISHED BRASS', 20, 'LG BOX'),
(3, 'almond azure blanched', 'MFGR#2', 'MFGR#21', 'BRAND#21', 'azure', 'PROMO BURNISHED COPPER', 30, 'MED BAG'),
(4, 'almond bisque metallic', 'MFGR#2', 'MFGR#22', 'BRAND#22', 'bisque', 'PROMO PLATED TIN', 15, 'SM PKG');
-- result:
-- !result
INSERT INTO lineorder VALUES
(1, 1, 1, 1, 1, '1997-01-01', '5-LOW', 0, 17, 21168, 17490, 4, 20321, 11368, 3, '1997-01-15', 'TRUCK'),
(1, 2, 1, 2, 2, '1997-01-01', '5-LOW', 0, 36, 42480, 17490, 9, 38677, 22480, 8, '1997-02-01', 'MAIL'),
(2, 1, 2, 1, 2, '1997-01-02', '1-URGENT', 0, 8, 12800, 22320, 10, 11520, 10800, 2, '1997-01-20', 'AIR'),
(2, 2, 2, 3, 1, '1997-01-02', '1-URGENT', 0, 28, 39312, 22320, 9, 35794, 29312, 6, '1997-02-05', 'SHIP'),
(3, 1, 3, 2, 3, '1997-01-15', '2-HIGH', 0, 12, 13848, 32400, 6, 13017, 10848, 4, '1997-02-10', 'TRUCK'),
(4, 1, 1, 4, 1, '1997-02-01', '3-MEDIUM', 0, 7, 10724, 18950, 7, 9973, 8724, 3, '1997-02-20', 'RAIL');
-- result:
-- !result
set catalog default_catalog;
-- result:
-- !result
create database db_${uuid0};
-- result:
-- !result
use db_${uuid0};
-- result:
-- !result
CREATE MATERIALIZED VIEW lineorder_flat_mv
REFRESH DEFERRED MANUAL
PROPERTIES (
    "replication_num" = "1",
    "refresh_mode" = "incremental"
)
AS SELECT
       l.LO_ORDERDATE AS LO_ORDERDATE,
       l.LO_ORDERKEY AS LO_ORDERKEY,
       l.LO_LINENUMBER AS LO_LINENUMBER,
       l.LO_CUSTKEY AS LO_CUSTKEY,
       l.LO_PARTKEY AS LO_PARTKEY,
       l.LO_SUPPKEY AS LO_SUPPKEY,
       l.LO_ORDERPRIORITY AS LO_ORDERPRIORITY,
       l.LO_SHIPPRIORITY AS LO_SHIPPRIORITY,
       l.LO_QUANTITY AS LO_QUANTITY,
       l.LO_EXTENDEDPRICE AS LO_EXTENDEDPRICE,
       l.LO_ORDTOTALPRICE AS LO_ORDTOTALPRICE,
       l.LO_DISCOUNT AS LO_DISCOUNT,
       l.LO_REVENUE AS LO_REVENUE,
       l.LO_SUPPLYCOST AS LO_SUPPLYCOST,
       l.LO_TAX AS LO_TAX,
       l.LO_COMMITDATE AS LO_COMMITDATE,
       l.LO_SHIPMODE AS LO_SHIPMODE,
       c.C_NAME AS C_NAME,
       c.C_ADDRESS AS C_ADDRESS,
       c.C_CITY AS C_CITY,
       c.C_NATION AS C_NATION,
       c.C_REGION AS C_REGION,
       c.C_PHONE AS C_PHONE,
       c.C_MKTSEGMENT AS C_MKTSEGMENT,
       s.S_NAME AS S_NAME,
       s.S_ADDRESS AS S_ADDRESS,
       s.S_CITY AS S_CITY,
       s.S_NATION AS S_NATION,
       s.S_REGION AS S_REGION,
       s.S_PHONE AS S_PHONE,
       p.P_NAME AS P_NAME,
       p.P_MFGR AS P_MFGR,
       p.P_CATEGORY AS P_CATEGORY,
       p.P_BRAND AS P_BRAND,
       p.P_COLOR AS P_COLOR,
       p.P_TYPE AS P_TYPE,
       p.P_SIZE AS P_SIZE,
       p.P_CONTAINER AS P_CONTAINER,
       d.D_DATE AS D_DATE,
       d.D_DAYOFWEEK AS D_DAYOFWEEK,
       d.D_MONTH AS D_MONTH,
       d.D_YEAR AS D_YEAR,
       min(d.D_YEARMONTHNUM) AS AGG_D_YEARMONTHNUM,
       approx_count_distinct(d.D_YEARMONTH) AS AGG_D_YEARMONTH,
       avg(d.D_DAYNUMINWEEK) AS AGG_D_DAYNUMINWEEK,
       max(d.D_DAYNUMINMONTH) AS AGG_D_DAYNUMINMONTH,
       avg(d.D_DAYNUMINYEAR) AS AGG_D_DAYNUMINYEAR,
       avg(d.D_MONTHNUMINYEAR) AS AGG_D_MONTHNUMINYEAR,
       sum(d.D_WEEKNUMINYEAR) AS AGG_D_WEEKNUMINYEAR,
       approx_count_distinct(d.D_SELLINGSEASON) AS AGG_D_SELLINGSEASON,
       approx_count_distinct(d.D_LASTDAYINWEEKFL) AS AGG_D_LASTDAYINWEEKFL,
       approx_count_distinct(d.D_LASTDAYINMONTHFL) AS AGG_D_LASTDAYINMONTHFL,
       approx_count_distinct(d.D_HOLIDAYFL) AS AGG_D_HOLIDAYFL,
       approx_count_distinct(d.D_WEEKDAYFL) AS AGG_D_WEEKDAYFL
   FROM mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.lineorder AS l
            INNER JOIN mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.customer AS c ON c.C_CUSTKEY = l.LO_CUSTKEY
            INNER JOIN mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.supplier AS s ON s.S_SUPPKEY = l.LO_SUPPKEY
            INNER JOIN mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.part AS p ON p.P_PARTKEY = l.LO_PARTKEY
            INNER JOIN mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.dates AS d ON l.LO_ORDERDATE = d.D_DATEKEY
    GROUP BY
       l.LO_ORDERDATE,
       l.LO_ORDERKEY,
       l.LO_LINENUMBER,
       l.LO_CUSTKEY,
       l.LO_PARTKEY,
       l.LO_SUPPKEY,
       l.LO_ORDERPRIORITY,
       l.LO_SHIPPRIORITY,
       l.LO_QUANTITY,
       l.LO_EXTENDEDPRICE,
       l.LO_ORDTOTALPRICE,
       l.LO_DISCOUNT,
       l.LO_REVENUE,
       l.LO_SUPPLYCOST,
       l.LO_TAX,
       l.LO_COMMITDATE,
       l.LO_SHIPMODE,
       c.C_NAME,
       c.C_ADDRESS,
       c.C_CITY,
       c.C_NATION,
       c.C_REGION,
       c.C_PHONE,
       c.C_MKTSEGMENT,
       s.S_NAME,
       s.S_ADDRESS,
       s.S_CITY,
       s.S_NATION,
       s.S_REGION,
       s.S_PHONE,
       p.P_NAME,
       p.P_MFGR,
       p.P_CATEGORY,
       p.P_BRAND,
       p.P_COLOR,
       p.P_TYPE,
       p.P_SIZE,
       p.P_CONTAINER,
       d.D_DATE,
       d.D_DAYOFWEEK,
       d.D_MONTH,
       d.D_YEAR;
-- result:
-- !result
REFRESH MATERIALIZED VIEW lineorder_flat_mv WITH SYNC MODE;
select count(1) from lineorder_flat_mv;
-- result:
6
-- !result
INSERT INTO mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.part VALUES
(1, 'almond antique burnished', 'MFGR#1', 'MFGR#11', 'BRAND#11', 'almond', 'STANDARD ANODIZED TIN', 10, 'SM CASE'),
(2, 'almond aquamarine burnished', 'MFGR#1', 'MFGR#12', 'BRAND#12', 'aquamarine', 'STANDARD POLISHED BRASS', 20, 'LG BOX'),
(13, 'almond azure blanched', 'MFGR#2', 'MFGR#21', 'BRAND#21', 'azure', 'PROMO BURNISHED COPPER', 30, 'MED BAG'),
(14, 'almond bisque metallic', 'MFGR#2', 'MFGR#22', 'BRAND#22', 'bisque', 'PROMO PLATED TIN', 15, 'SM PKG');
-- result:
-- !result
REFRESH MATERIALIZED VIEW lineorder_flat_mv WITH SYNC MODE;
select count(1) from lineorder_flat_mv;
-- result:
6
-- !result
INSERT INTO mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.supplier VALUES
(1, 'Supplier#000000001', '123 Supply St', 'San Francisco', 'UNITED STATES', 'AMERICA', '555-1001'),
(2, 'Supplier#000000002', '456 Vendor Ave', 'Seattle', 'UNITED STATES', 'AMERICA', '555-1002'),
(13, 'Supplier#000000003', '789 Trade Blvd', 'Boston', 'UNITED STATES', 'AMERICA', '555-1003');
-- result:
-- !result
INSERT INTO mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.part VALUES
(1, 'almond antique burnished', 'MFGR#1', 'MFGR#11', 'BRAND#11', 'almond', 'STANDARD ANODIZED TIN', 10, 'SM CASE'),
(2, 'almond aquamarine burnished', 'MFGR#1', 'MFGR#12', 'BRAND#12', 'aquamarine', 'STANDARD POLISHED BRASS', 20, 'LG BOX'),
(13, 'almond azure blanched', 'MFGR#2', 'MFGR#21', 'BRAND#21', 'azure', 'PROMO BURNISHED COPPER', 30, 'MED BAG'),
(14, 'almond bisque metallic', 'MFGR#2', 'MFGR#22', 'BRAND#22', 'bisque', 'PROMO PLATED TIN', 15, 'SM PKG');
-- result:
-- !result
INSERT INTO mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.lineorder VALUES
(1, 1, 1, 1, 1, '1997-01-01', '5-LOW', 0, 17, 21168, 17490, 4, 20321, 11368, 3, '1997-01-15', 'TRUCK'),
(1, 2, 1, 2, 2, '1997-01-01', '5-LOW', 0, 36, 42480, 17490, 9, 38677, 22480, 8, '1997-02-01', 'MAIL'),
(2, 1, 2, 1, 2, '1997-01-02', '1-URGENT', 0, 8, 12800, 22320, 10, 11520, 10800, 2, '1997-01-20', 'AIR'),
(2, 2, 2, 3, 1, '1997-01-02', '1-URGENT', 0, 28, 39312, 22320, 9, 35794, 29312, 6, '1997-02-05', 'SHIP'),
(3, 1, 3, 2, 3, '1997-01-15', '2-HIGH', 0, 12, 13848, 32400, 6, 13017, 10848, 4, '1997-02-10', 'TRUCK'),
(4, 1, 1, 4, 1, '1997-02-01', '3-MEDIUM', 0, 7, 10724, 18950, 7, 9973, 8724, 3, '1997-02-20', 'RAIL');
-- result:
-- !result
REFRESH MATERIALIZED VIEW lineorder_flat_mv WITH SYNC MODE;
select count(1) from lineorder_flat_mv;
-- result:
6
-- !result
drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.customer;
-- result:
-- !result
drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.dates;
-- result:
-- !result
drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.supplier;
-- result:
-- !result
drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.part;
-- result:
-- !result
drop table mv_iceberg_${uuid0}.mv_ice_db_${uuid0}.lineorder;
-- result:
-- !result
drop database mv_iceberg_${uuid0}.mv_ice_db_${uuid0} force;
-- result:
-- !result
drop database db_${uuid0};
-- result:
-- !result