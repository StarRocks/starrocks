-- name: test_multi_column_stats

create database analyze_test_${uuid0};
use analyze_test_${uuid0};

create table t1(c1 int, c2 bigint, c3 string, c4 string)
properties('replication_num'='1');

insert into t1 values (1, 1, 's1', 's1');
insert into t1 values (2, 2, 's2', 's2');
insert into t1 values (3, 3, 's3', 's3');
insert into t1 select generate_series, generate_series, generate_series, generate_series from table(generate_series(1,1000));
insert into t1 select generate_series, generate_series, generate_series, generate_series from table(generate_series(1,1000));
insert into t1 select generate_series, generate_series, generate_series, generate_series from table(generate_series(1,1000));
insert into t1 select generate_series, generate_series, generate_series, generate_series from table(generate_series(1,1000));
insert into t1 select generate_series, generate_series, generate_series, generate_series from table(generate_series(1,1000));

[UC]analyze full table t1 multi_columns (c1, c2);
select count(1) from _statistics_.multi_column_statistics where table_name like "%t1%" and column_names = "c1,c2";
drop multi_columns stats t1;

select count(1) from _statistics_.multi_column_statistics where table_name like "%t1%" and column_names = "c1,c2";
[UC]analyze sample table t1 multi_columns (c1, c2);
select count(1) from _statistics_.multi_column_statistics where table_name like "%t1%" and column_names = "c1,c2";
drop stats t1;
select count(1) from _statistics_.multi_column_statistics where table_name like "%t1%" and column_names = "c1,c2";

[UC]analyze full table t1 multi_columns (c1, c2, c3, c4);
[UC]analyze full table t1;

function: assert_explain_costs_contains('select count(1) from t1 group by c1,c2,c3,c4', 'cardinality: 1002')
drop stats t1;



