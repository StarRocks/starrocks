-- name: test_transparent_mv_union_olap
create database db_${uuid0};
-- result:
-- !result
use db_${uuid0};
-- result:
-- !result
CREATE TABLE t1 (
  num int,
  dt date
)
DUPLICATE KEY(`num`)
PARTITION BY RANGE(`dt`)
(
  PARTITION p20200615 VALUES [("2020-06-15 00:00:00"), ("2020-06-16 00:00:00")),
  PARTITION p20200618 VALUES [("2020-06-18 00:00:00"), ("2020-06-19 00:00:00")),
  PARTITION p20200621 VALUES [("2020-06-21 00:00:00"), ("2020-06-22 00:00:00")),
  PARTITION p20200624 VALUES [("2020-06-24 00:00:00"), ("2020-06-25 00:00:00")),
  PARTITION p20200702 VALUES [("2020-07-02 00:00:00"), ("2020-07-03 00:00:00")),
  PARTITION p20200705 VALUES [("2020-07-05 00:00:00"), ("2020-07-06 00:00:00")),
  PARTITION p20200708 VALUES [("2020-07-08 00:00:00"), ("2020-07-09 00:00:00")),
  PARTITION p20200716 VALUES [("2020-07-16 00:00:00"), ("2020-07-17 00:00:00")),
  PARTITION p20200719 VALUES [("2020-07-19 00:00:00"), ("2020-07-20 00:00:00")),
  PARTITION p20200722 VALUES [("2020-07-22 00:00:00"), ("2020-07-23 00:00:00")),
  PARTITION p20200725 VALUES [("2020-07-25 00:00:00"), ("2020-07-26 00:00:00")),
  PARTITION p20200711 VALUES [("2020-07-11 00:00:00"), ("2020-07-12 00:00:00"))
)
DISTRIBUTED BY HASH(`num`);
-- result:
-- !result
INSERT INTO t1 VALUES 
  (1,"2020-06-15"),(2,"2020-06-18"),(3,"2020-06-21"),(4,"2020-06-24"),
  (1,"2020-07-02"),(2,"2020-07-05"),(3,"2020-07-08"),(4,"2020-07-11"),
  (1,"2020-07-16"),(2,"2020-07-19"),(3,"2020-07-22"),(4,"2020-07-25"),
  (2,"2020-06-15"),(3,"2020-06-18"),(4,"2020-06-21"),(5,"2020-06-24"),
  (2,"2020-07-02"),(3,"2020-07-05"),(4,"2020-07-08"),(5,"2020-07-11");
-- result:
-- !result
CREATE TABLE t2 (
  num int,
  dt date
)
DUPLICATE KEY(`num`)
PARTITION BY RANGE(`dt`)
(
  PARTITION p20200615 VALUES [("2020-06-15 00:00:00"), ("2020-06-16 00:00:00")),
  PARTITION p20200618 VALUES [("2020-06-18 00:00:00"), ("2020-06-19 00:00:00")),
  PARTITION p20200621 VALUES [("2020-06-21 00:00:00"), ("2020-06-22 00:00:00")),
  PARTITION p20200624 VALUES [("2020-06-24 00:00:00"), ("2020-06-25 00:00:00")),
  PARTITION p20200702 VALUES [("2020-07-02 00:00:00"), ("2020-07-03 00:00:00")),
  PARTITION p20200705 VALUES [("2020-07-05 00:00:00"), ("2020-07-06 00:00:00")),
  PARTITION p20200708 VALUES [("2020-07-08 00:00:00"), ("2020-07-09 00:00:00")),
  PARTITION p20200716 VALUES [("2020-07-16 00:00:00"), ("2020-07-17 00:00:00")),
  PARTITION p20200719 VALUES [("2020-07-19 00:00:00"), ("2020-07-20 00:00:00")),
  PARTITION p20200722 VALUES [("2020-07-22 00:00:00"), ("2020-07-23 00:00:00")),
  PARTITION p20200725 VALUES [("2020-07-25 00:00:00"), ("2020-07-26 00:00:00")),
  PARTITION p20200711 VALUES [("2020-07-11 00:00:00"), ("2020-07-12 00:00:00"))
)
DISTRIBUTED BY HASH(`num`);
-- result:
-- !result
INSERT INTO t2 VALUES 
  (1,"2020-06-15"),(2,"2020-06-18"),(3,"2020-06-21"),(4,"2020-06-24"),
  (1,"2020-07-02"),(2,"2020-07-05"),(3,"2020-07-08"),(4,"2020-07-11"),
  (1,"2020-07-16"),(2,"2020-07-19"),(3,"2020-07-22"),(4,"2020-07-25"),
  (2,"2020-06-15"),(3,"2020-06-18"),(4,"2020-06-21"),(5,"2020-06-24"),
  (2,"2020-07-02"),(3,"2020-07-05"),(4,"2020-07-08"),(5,"2020-07-11");
-- result:
-- !result
set materialized_view_union_rewrite_mode=2;
-- result:
-- !result
CREATE MATERIALIZED VIEW test_mv1 
PARTITION BY dt 
REFRESH DEFERRED MANUAL 
AS SELECT * FROM t1 where dt > '2020-07-01';
-- result:
-- !result
REFRESH MATERIALIZED VIEW test_mv1 WITH SYNC MODE;
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-07-01'  order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-07-01' and num > 4 order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-06-20'  order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-06-20' and num > 4 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where num > 3 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM (SELECT * FROM t1 where num > 3 UNION ALL SELECT * FROM t1 where num > 3) t order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
SELECT * FROM t1 where dt > '2020-07-01'  order by 1, 2 limit 3;
-- result:
1	2020-07-02
1	2020-07-16
2	2020-07-02
-- !result
SELECT * FROM t1 where dt > '2020-07-01' and num > 4 order by 1, 2 limit 3;
-- result:
5	2020-07-11
-- !result
SELECT * FROM t1 where dt > '2020-06-20'  order by 1, 2 limit 3;
-- result:
1	2020-06-15
1	2020-07-02
1	2020-07-16
-- !result
SELECT * FROM t1 where dt > '2020-06-20' and num > 4 order by 1, 2 limit 3;
-- result:
5	2020-06-24
5	2020-07-11
-- !result
SELECT * FROM t1 order by 1, 2 limit 3;
-- result:
1	2020-06-15
1	2020-07-02
1	2020-07-16
-- !result
SELECT * FROM t1 where num > 3 order by 1, 2 limit 3;
-- result:
4	2020-06-21
4	2020-06-24
4	2020-07-08
-- !result
SELECT * FROM (SELECT * FROM t1 where num > 3 UNION ALL SELECT * FROM t1 where num > 3) t order by 1, 2 limit 3;
-- result:
4	2020-06-21
4	2020-06-21
4	2020-06-24
-- !result
INSERT INTO t1 VALUES (1, "2020-06-15"), (4, "2020-07-25");
-- result:
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-07-01'  order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-07-01' and num > 4 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-06-20'  order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where dt > '2020-06-20' and num > 4 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM t1 where num > 3 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM (SELECT * FROM t1 where num > 3 UNION ALL SELECT * FROM t1 where num > 3) t order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
SELECT * FROM t1 where dt > '2020-07-01'  order by 1, 2 limit 3;
-- result:
1	2020-07-02
1	2020-07-16
2	2020-07-02
-- !result
SELECT * FROM t1 where dt > '2020-07-01' and num > 4 order by 1, 2 limit 3;
-- result:
5	2020-07-11
-- !result
SELECT * FROM t1 where dt > '2020-06-20'  order by 1, 2 limit 3;
-- result:
1	2020-06-15
1	2020-06-15
1	2020-07-02
-- !result
SELECT * FROM t1 where dt > '2020-06-20' and num > 4 order by 1, 2 limit 3;
-- result:
5	2020-06-24
5	2020-07-11
-- !result
SELECT * FROM t1 order by 1, 2 limit 3;
-- result:
1	2020-06-15
1	2020-06-15
1	2020-07-02
-- !result
SELECT * FROM t1 where num > 3 order by 1, 2 limit 3;
-- result:
4	2020-06-21
4	2020-06-24
4	2020-07-08
-- !result
SELECT * FROM (SELECT * FROM t1 where num > 3 UNION ALL SELECT * FROM t1 where num > 3)t order by 1, 2 limit 3;
-- result:
4	2020-06-21
4	2020-06-21
4	2020-06-24
-- !result
DROP MATERIALIZED VIEW test_mv1;
-- result:
-- !result
CREATE MATERIALIZED VIEW test_mv1 
PARTITION BY dt 
REFRESH DEFERRED MANUAL 
AS SELECT dt, sum(num) as num FROM t1 where dt > '2020-07-01' GROUP BY dt;
-- result:
-- !result
REFRESH MATERIALIZED VIEW test_mv1 WITH SYNC MODE;
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt > '2020-07-01'  GROUP BY dt order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt >'2020-07-01' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt > '2020-06-20'  GROUP BY dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt >'2020-06-20' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 GROUP BY dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM (SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 UNION ALL SELECT dt, sum(num) as num FROM t1 GROUP BY dt) t order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
SELECT dt, sum(num) as num FROM t1 where dt > '2020-07-01'  GROUP BY dt order by 1, 2 limit 3;
-- result:
2020-07-02	3
2020-07-05	5
2020-07-08	7
-- !result
SELECT dt, sum(num) as num FROM t1 where dt >'2020-07-01' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;
-- result:
-- !result
SELECT dt, sum(num) as num FROM t1 where dt > '2020-06-20'  GROUP BY dt order by 1, 2 limit 3;
-- result:
2020-06-15	4
2020-06-18	5
2020-06-21	7
-- !result
SELECT dt, sum(num) as num FROM t1 where dt >'2020-06-20' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;
-- result:
-- !result
SELECT dt, sum(num) as num FROM t1 GROUP BY dt order by 1, 2 limit 3;
-- result:
2020-06-15	4
2020-06-18	5
2020-06-21	7
-- !result
SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;
-- result:
-- !result
SELECT * FROM (SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 UNION ALL SELECT dt, sum(num) as num FROM t1 GROUP BY dt) t order by 1, 2 limit 3;
-- result:
2020-06-15	4
2020-06-18	5
2020-06-21	7
-- !result
INSERT INTO t1 VALUES (1, "2020-06-15"), (4, "2020-07-25");
-- result:
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt > '2020-07-01'  GROUP BY dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt >'2020-07-01' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt > '2020-06-20'  GROUP BY dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 where dt >'2020-06-20' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 GROUP BY dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM (SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 UNION ALL SELECT dt, sum(num) as num FROM t1 GROUP BY dt) t order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
SELECT dt, sum(num) as num FROM t1 where dt > '2020-07-01'  GROUP BY dt order by 1, 2 limit 3;
-- result:
2020-07-02	3
2020-07-05	5
2020-07-08	7
-- !result
SELECT dt, sum(num) as num FROM t1 where dt >'2020-07-01' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;
-- result:
2020-07-25	12
-- !result
SELECT dt, sum(num) as num FROM t1 where dt > '2020-06-20'  GROUP BY dt order by 1, 2 limit 3;
-- result:
2020-06-15	5
2020-06-18	5
2020-06-21	7
-- !result
SELECT dt, sum(num) as num FROM t1 where dt >'2020-06-20' GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;
-- result:
2020-07-25	12
-- !result
SELECT dt, sum(num) as num FROM t1 GROUP BY dt order by 1, 2 limit 3;
-- result:
2020-06-15	5
2020-06-18	5
2020-06-21	7
-- !result
SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 order by 1, 2 limit 3;
-- result:
2020-07-25	12
-- !result
SELECT * FROM (SELECT dt, sum(num) as num FROM t1 GROUP BY dt having sum(num) > 10 UNION ALL SELECT dt, sum(num) as num FROM t1 GROUP BY dt) t order by 1, 2 limit 3;
-- result:
2020-06-15	5
2020-06-18	5
2020-06-21	7
-- !result
DROP MATERIALIZED VIEW test_mv1;
-- result:
-- !result
CREATE MATERIALIZED VIEW test_mv1 
PARTITION BY dt 
REFRESH DEFERRED MANUAL 
AS SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt=t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt;
-- result:
-- !result
REFRESH MATERIALIZED VIEW test_mv1 WITH SYNC MODE;
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM (SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 UNION ALL SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10) t order by 1, 2 limit 3", "test_mv1", "UNION")
-- result:
None
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt order by 1, 2 limit 3;
-- result:
2020-07-02	6
2020-07-05	10
2020-07-08	14
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;
-- result:
2020-07-08	14
2020-07-11	18
2020-07-25	12
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt order by 1, 2 limit 3;
-- result:
2020-06-15	12
2020-06-18	10
2020-06-21	14
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;
-- result:
2020-06-15	12
2020-06-21	14
2020-06-24	18
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;
-- result:
2020-06-15	12
2020-06-21	14
2020-06-24	18
-- !result
SELECT * FROM (SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 UNION ALL SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10) t order by 1, 2 limit 3

INSERT INTO t1 VALUES (1, "2020-06-15"), (4, "2020-07-25");
-- result:
E: (1064, "Getting syntax error at line 3, column 0. Detail message: Unexpected input 'INSERT', the most similar input is {<EOF>, ';'}.")
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;", "test_mv1")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;", "test_mv1", "UNION")
-- result:
None
-- !result
function: check_hit_materialized_view("SELECT * FROM (SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 UNION ALL SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10) t order by 1, 2 limit 3", "test_mv1", "UNION")
-- result:
None
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt order by 1, 2 limit 3;
-- result:
2020-07-02	6
2020-07-05	10
2020-07-08	14
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-07-01' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;
-- result:
2020-07-08	14
2020-07-11	18
2020-07-25	12
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt order by 1, 2 limit 3;
-- result:
2020-06-15	12
2020-06-18	10
2020-06-21	14
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;
-- result:
2020-06-15	12
2020-06-21	14
2020-06-24	18
-- !result
SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt GROUP BY t2.dt having sum(t2.num) > 10 order by 1, 2 limit 3;
-- result:
2020-06-15	12
2020-06-21	14
2020-06-24	18
-- !result
SELECT * FROM (SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10 UNION ALL SELECT t2.dt, sum(t2.num) as num FROM t1 join t2 on t1.dt = t2.dt where t2.dt > '2020-06-20' GROUP BY t2.dt having sum(t2.num) > 10) t order by 1, 2 limit 3

DROP MATERIALIZED VIEW test_mv1;
-- result:
E: (1064, "Getting syntax error at line 3, column 0. Detail message: Unexpected input 'DROP', the most similar input is {<EOF>, ';'}.")
-- !result
drop table t1 force;
-- result:
-- !result
drop table t2 force;
-- result:
-- !result