-- name: test_mv_refresh_with_hudi_catalog

create database db_${uuid0};
use db_${uuid0};

create external catalog  mv_hudi_${uuid0}
PROPERTIES
(
    "type"="hudi",
    "hive.metastore.uris"= "${hudi_hive_metastore_uris}"
);

CREATE MATERIALIZED VIEW mv1 DISTRIBUTED BY HASH(col_int) BUCKETS 10 
REFRESH DEFERRED MANUAL
AS 
SELECT col_int, col_timestamp, col_double FROM mv_hudi_${uuid0}.hudi_db.hudi_parquet_snappy;

CREATE MATERIALIZED VIEW mv2 DISTRIBUTED BY HASH(col_int) BUCKETS 10 
REFRESH DEFERRED MANUAL
AS
SELECT col_int, count(col_timestamp) as count_ts, sum(col_double) as sum_int from mv1 group by col_int;

CREATE MATERIALIZED VIEW mv3 DISTRIBUTED BY HASH(col_int) BUCKETS 10 
REFRESH DEFERRED MANUAL
AS
SELECT col_int, count_ts, sum_int from mv2 where col_int >1;

refresh materialized view mv1 with sync mode;
select count(1) from mv1;
function: check_hit_materialized_view("SELECT col_int, col_timestamp, col_double FROM mv_hudi_${uuid0}.hudi_db.hudi_parquet_snappy", "mv1")
SELECT col_int, col_timestamp, col_double FROM mv_hudi_${uuid0}.hudi_db.hudi_parquet_snappy order by 1, 2 limit 5;

refresh materialized view mv2 with sync mode;
function: check_hit_materialized_view("SELECT col_int, count(col_timestamp) as count_ts, sum(col_double) as sum_int from mv1 group by col_int;", "mv2")
SELECT col_int, count(col_timestamp) as count_ts, sum(col_double) as sum_int from mv1 group by col_int order by 1, 2 limit 5;

refresh materialized view mv3 with sync mode;
function: check_hit_materialized_view("SELECT col_int, count_ts, sum_int from mv2 where col_int >1;", "mv3")
SELECT col_int, count_ts, sum_int from mv2 where col_int >1 order by 1, 2 limit 5;

drop catalog mv_hudi_${uuid0};
drop database db_${uuid0};