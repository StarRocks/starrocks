-- name: test_mv_event_trigger_with_stream_load
create database db_${uuid0};
-- result:
-- !result
use db_${uuid0};
-- result:
-- !result
DROP TABLE IF EXISTS tab1;
-- result:
-- !result
DROP TABLE IF EXISTS tab2;
-- result:
-- !result
CREATE table tab1 (
      k1 INTEGER,
      k2 VARCHAR(50),
      v1 INTEGER,
      v2 INTEGER,
      v3 INTEGER,
      v4 varchar(50),
      v5 varchar(50)
)
ENGINE=OLAP
PRIMARY KEY(`k1`,`k2`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 10
PROPERTIES (
    "replication_num" = "1"
);
-- result:
-- !result
insert into tab1 values (100, "k2_100", 100, 100, 100, "v4_100", "v5_100");
-- result:
-- !result
insert into tab1 values (200, "k2_200", 200, 200, 200, "v4_200", "v5_200");
-- result:
-- !result
insert into tab1 values (300, "k3_300", 300, 300, 300, "v4_300", "v5_300");
-- result:
-- !result
CREATE MATERIALIZED VIEW `mv1`
REFRESH ASYNC
AS
select k1, k2, sum(v1), sum(v2), sum(v3) from tab1 group by k1, k2;
-- result:
-- !result
function: wait_async_materialized_view_finish("db_${uuid0}", "mv1")
-- result:
None
-- !result
select * from mv1 order by k1;
-- result:
100	k2_100	100	100	100
200	k2_200	200	200	200
300	k3_300	300	300	300
-- !result
shell: curl --location-trusted -u root: -T ${root_path}/lib/../common/data/stream_load/sr_condition_update_1.csv -XPUT -H label:db_${uuid0}_label_1 -H column_separator:, -H merge_condition:k1 ${url}/api/db_${uuid0}/tab1/_stream_load
-- result:
0
{
    "Status": "Fail",
    "Message": "Merge condition column k1 should not be primary key!"
}
-- !result
function: wait_async_materialized_view_finish("db_${uuid0}", "mv1")
-- result:
None
-- !result
select * from mv1 order by k1;
-- result:
100	k2_100	100	100	100
200	k2_200	200	200	200
300	k3_300	300	300	300
-- !result
shell: curl --location-trusted -u root: -T ${root_path}/lib/../common/data/stream_load/sr_condition_update_1.csv -XPUT -H label:db_${uuid0}_label_2 -H column_separator:, -H merge_condition:v1 ${url}/api/db_${uuid0}/tab1/_stream_load
-- result:
0
{
    "Status": "Success",
    "Message": "OK"
}
-- !result
function: wait_async_materialized_view_finish("db_${uuid0}", "mv1")
-- result:
None
-- !result
select * from mv1 order by k1;
-- result:
100	k2_100	111	100	100
200	k2_200	200	200	200
300	k3_300	300	300	300
-- !result
drop database db_${uuid0} force;
-- result:
-- !result