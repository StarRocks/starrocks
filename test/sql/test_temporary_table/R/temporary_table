-- name: test_create_temporary_table
create temporary table `t0` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
create temporary table if not exists `t0` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
create temporary table `t0` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
E: (1050, "Getting analyzing error. Detail message: Table 't0' already exists.")
-- !result
show create table `t0`;
-- result:
t0	CREATE TEMPORARY TABLE `t0` (
  `c1` int(11) NOT NULL COMMENT "",
  `c2` int(11) NULL COMMENT ""
) ENGINE=OLAP 
PRIMARY KEY(`c1`)
DISTRIBUTED BY HASH(`c1`) BUCKETS 3 
PROPERTIES (
"compression" = "LZ4",
"enable_persistent_index" = "true",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);
-- !result
desc `t0`;
-- result:
c1	int	NO	true	None	
c2	int	YES	false	None	
-- !result
show tables;
-- result:
-- !result
show temporary tables;
-- result:
t0
-- !result
insert into `t0` values (1,1),(2,2),(3,3);
-- result:
-- !result
select * from `t0` order by `c1`,`c2`;
-- result:
1	1
2	2
3	3
-- !result
update `t0` set `c2`=`c2`+1 where `c1`=1;
-- result:
-- !result
select * from `t0` order by `c1`,`c2`;
-- result:
1	2
2	2
3	3
-- !result
delete from `t0` where `c1` = 1;
-- result:
-- !result
select * from `t0` order by `c1`, `c2`;
-- result:
2	2
3	3
-- !result
drop temporary table `t0`;
-- result:
-- !result
-- name: test_create_temporary_table_like
create table `t0` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1", "colocate_with"="${uuid0}");
-- result:
-- !result
insert into `t0` values (1,1),(2,2),(3,3);
-- result:
-- !result
create temporary table `t1` like `t0`;
-- result:
-- !result
create temporary table `t1` like `t0`;
-- result:
E: (1050, "Getting analyzing error. Detail message: Table 't1' already exists.")
-- !result
create temporary table if not exists `t1` like `t0`;
-- result:
-- !result
show create table `t1`;
-- result:
t1	CREATE TEMPORARY TABLE `t1` (
  `c1` int(11) NOT NULL COMMENT "",
  `c2` int(11) NULL COMMENT ""
) ENGINE=OLAP 
PRIMARY KEY(`c1`)
DISTRIBUTED BY HASH(`c1`) BUCKETS 3 
PROPERTIES (
"compression" = "LZ4",
"enable_persistent_index" = "true",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);
-- !result
show tables;
-- result:
t0
-- !result
show temporary tables;
-- result:
t1
-- !result
select * from `t1`;
-- result:
-- !result
insert into `t1` values (1,1),(2,2);
-- result:
-- !result
select * from `t1` order by `c1`,`c2`;
-- result:
1	1
2	2
-- !result
-- name: test_create_table_as_select
create table `t0` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1", "colocate_with"="${uuid0}");
-- result:
-- !result
insert into `t0` values (1,1),(2,2),(3,3);
-- result:
-- !result
create temporary table `t1` as select * from `t0`;
-- result:
-- !result
create temporary table `t1` as select * from `t0`;
-- result:
E: (1050, "Getting analyzing error. Detail message: Table 't1' already exists.")
-- !result
create temporary table if not exists `t1` as select * from `t0`;
-- result:
-- !result
create temporary table `t2` as select /*+ SET_VAR(query_mem_limit=1)*/ * from `t0`;
-- result:
[REGEX].exceed limit*
-- !result
show create table `t1`;
-- result:
t1	CREATE TEMPORARY TABLE `t1` (
  `c1` int(11) NULL COMMENT "",
  `c2` int(11) NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`c1`, `c2`)
DISTRIBUTED BY RANDOM
PROPERTIES (
"bucket_size" = "4294967296",
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "3"
);
-- !result
show tables;
-- result:
t0
-- !result
show temporary tables;
-- result:
t1
-- !result
select * from `t1` order by `c1`,`c2`;
-- result:
1	1
2	2
3	3
-- !result
insert into `t1` values (4,4),(5,5);
-- result:
-- !result
select * from `t1` order by `c1`,`c2`;
-- result:
1	1
2	2
3	3
4	4
5	5
-- !result
-- name: test_truncate_table 
create temporary table `t0` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
insert into `t0` values (1,1),(2,2),(3,3);
-- result:
-- !result
select * from `t0` order by `c1`,`c2`;
-- result:
1	1
2	2
3	3
-- !result
truncate table `t0`;
-- result:
-- !result
select * from `t0` order by `c1`,`c2`;
-- result:
-- !result
-- name: test_name_conflict
create table `t` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
insert into `t` values (1,1),(2,2),(3,3);
-- result:
-- !result
create temporary table `t` (
    `c1` int,
    `c2` int,
    `c3` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
select * from `t`;
-- result:
-- !result
insert into `t` values (1,1,1),(2,2,2);
-- result:
-- !result
select * from `t` order by `c1`,`c2`,`c3`;
-- result:
1	1	1
2	2	2
-- !result
drop temporary table `t`;
-- result:
-- !result
select * from `t` order by `c1`,`c2`;
-- result:
1	1
2	2
3	3
-- !result
-- name: test_ddl_on_temporary_table
create temporary table `t` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
alter table `t` add column `c3` int default null;
-- result:
E: (1064, "Getting analyzing error. Detail message: temporary table doesn't support alter table statement.")
-- !result
-- name: test_submit_task_on_temporary_table
create temporary table `t` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
submit task as insert into `t` select * from `t`;
-- result:
E: (1064, 'Getting analyzing error. Detail message: Cannot submit task based on temporary table.')
-- !result
submit task as create table `t0` as select * from `t`;
-- result:
E: (1064, 'Getting analyzing error. Detail message: Cannot submit task based on temporary table.')
-- !result
-- name: test_select_out_file
create temporary table `t` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
select * from `t` into outfile "oss://${oss_bucket}/test_temporary_table/${uuid0}/" properties("aws.s3.access_key"="${oss_ak}","aws.s3.secret_key"="${oss_sk}","aws.s3.endpoint"="${oss_endpoint}");
-- result:
E: (1064, "Getting analyzing error. Detail message: temporary table doesn't support select outfile statement.")
-- !result
-- name: test_abnormal_drop
drop temporary table `a`.`b`.`c`;
-- result:
E: (1064, 'Getting analyzing error. Detail message: drop temporary table can only be execute under default catalog.')
-- !result
drop temporary table `b`.`c`;
-- result:
E: (5501, "Getting analyzing error. Detail message: Unknown database 'b'.")
-- !result
drop temporary table `c`;
-- result:
E: (5502, "Getting analyzing error. Detail message: Unknown table 'c'.")
-- !result
-- name: test_drop_rename_db
create database temp_table_test_${uuid0};
-- result:
-- !result
use temp_table_test_${uuid0};
-- result:
-- !result
create temporary table `t` (
    `c1` int,
    `c2` int,
    `c3` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
insert into `t` values (1,1,1),(2,2,2);
-- result:
-- !result
select * from `t` order by 1,2,3;
-- result:
1	1	1
2	2	2
-- !result
alter database temp_table_test_${uuid0} rename temp_table_test_${uuid0}_new;
-- result:
-- !result
select * from temp_table_test_${uuid0}.t order by 1,2,3;
-- result:
[REGEX].*Unknown database*
-- !result
select * from temp_table_test_${uuid0}_new.t order by 1,2,3;
-- result:
1	1	1
2	2	2
-- !result
drop database temp_table_test_${uuid0}_new;
-- result:
[REGEX].*cannot be dropped because there are still some temporary tables*
-- !result
drop database temp_table_test_${uuid0}_new force;
-- result:
-- !result
-- name: test_create_view
create temporary table `t` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
create view `v1` as select * from `t`;
-- result:
E: (1064, "Getting analyzing error. Detail message: View can't base on temporary table.")
-- !result
create materialized view `mv1` as select * from `t`;
-- result:
E: (1064, "Getting analyzing error. Detail message: Materialized view can't base on temporary table.")
-- !result
create materialized view `m1` refresh immediate manual as select * from `t`;
-- result:
E: (1064, "Getting analyzing error. Detail message: Materialized view can't base on temporary table.")
-- !result
create table `t1` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
create view `v1` as select * from `t1`;
-- result:
-- !result
alter view `v1` as select * from `t`;
-- result:
E: (1064, "Getting analyzing error. Detail message: View can't base on temporary table.")
-- !result
-- name: test_export
create temporary table `t` (
    `c1` int,
    `c2` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
export table `t`
TO "oss://${oss_bucket}/test_temporary_table/${uuid0}/"
WITH BROKER
(
    "fs.oss.accessKeyId" = "${oss_ak}",
    "fs.oss.accessKeySecret" = "${oss_sk}",
    "fs.oss.endpoint" = "${oss_endpoint}"
);
-- result:
E: (5064, 'Getting analyzing error. Detail message: Do not support exporting temporary table.')
-- !result
-- name: test_sys_temp_tables
create temporary table `t` (
    `c1` int,
    `c2` int,
    `c3` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
desc information_schema.temp_tables;
-- result:
TABLE_CATALOG	varchar(512)	YES	false	None	
TABLE_SCHEMA	varchar(2048)	YES	false	None	
TABLE_NAME	varchar(2048)	YES	false	None	
TABLE_TYPE	varchar(2048)	YES	false	None	
ENGINE	varchar(2048)	YES	false	None	
VERSION	bigint	YES	false	None	
ROW_FORMAT	varchar(10)	YES	false	None	
TABLE_ROWS	bigint	YES	false	None	
AVG_ROW_LENGTH	bigint	YES	false	None	
DATA_LENGTH	bigint	YES	false	None	
MAX_DATA_LENGTH	bigint	YES	false	None	
INDEX_LENGTH	bigint	YES	false	None	
DATA_FREE	bigint	YES	false	None	
AUTO_INCREMENT	bigint	YES	false	None	
CREATE_TIME	datetime	YES	false	None	
UPDATE_TIME	datetime	YES	false	None	
CHECK_TIME	datetime	YES	false	None	
TABLE_COLLATION	varchar(32)	YES	false	None	
CHECKSUM	bigint	YES	false	None	
CREATE_OPTIONS	varchar(255)	YES	false	None	
TABLE_COMMENT	varchar(2048)	YES	false	None	
SESSION	varchar(128)	YES	false	None	
TABLE_ID	bigint	YES	false	None	
-- !result
select TABLE_CATALOG,TABLE_NAME,TABLE_TYPE,ENGINE,TABLE_ROWS,AVG_ROW_LENGTH,DATA_LENGTH,MAX_DATA_LENGTH,INDEX_LENGTH,DATA_FREE,AUTO_INCREMENT,TABLE_COMMENT from information_schema.temp_tables where `session`=(select session_id());
-- result:
def	t	BASE TABLE	StarRocks	0	0	0	None	None	None	None	
-- !result
drop temporary table `t`;
-- result:
-- !result
select TABLE_CATALOG,TABLE_NAME,TABLE_TYPE,ENGINE,TABLE_ROWS,AVG_ROW_LENGTH,DATA_LENGTH,MAX_DATA_LENGTH,INDEX_LENGTH,DATA_FREE,AUTO_INCREMENT,TABLE_COMMENT from information_schema.temp_tables where `session`=(select session_id());
-- result:
-- !result
-- name: test_create_analyze
create temporary table `t` (
    `c1` int,
    `c2` int,
    `c3` int
) engine=OLAP primary key(`c1`) distributed by hash(`c1`) buckets 3 properties("replication_num" = "1");
-- result:
-- !result
create analyze table t;
-- result:
E: (1064, "Getting analyzing error. Detail message: Don't support create analyze job for temporary table.")
-- !result