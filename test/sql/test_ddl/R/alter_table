-- name: test_ddl_alter_table
create database db_${uuid0};
-- result:
-- !result
use db_${uuid0};
-- result:
-- !result
CREATE TABLE t1 (id1 int) DUPLICATE KEY(id1) COMMENT "c1" DISTRIBUTED BY HASH(id1) BUCKETS 1 properties('replication_num' = '1');
-- result:
-- !result
ALTER TABLE t1 COMMENT="c2";
-- result:
-- !result
SHOW CREATE TABLE t1;
-- result:
t1	CREATE TABLE `t1` (
  `id1` int(11) NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`id1`)
COMMENT "c2"
DISTRIBUTED BY HASH(`id1`) BUCKETS 1 
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);
-- !result
CREATE TABLE `test_pk_tbl1` (
`k1` DATE,
`k2` DATETIME,
`k3` VARCHAR(20),
`k4` VARCHAR(20),
`k5` BOOLEAN,
`v1` TINYINT NULL,
`v2` SMALLINT NULL,
`v3` INT NULL,
`v4` BIGINT NOT NULL,
INDEX init_bitmap_index (k2) USING BITMAP
) ENGINE=OLAP
PRIMARY KEY(`k1`, `k2`, `k3`, `k4`, `k5`)
COMMENT "OLAP"
PARTITION BY RANGE (k1) (
    START ("1970-01-01") END ("2030-01-01") EVERY (INTERVAL 30 YEAR)
)
DISTRIBUTED BY HASH(`k1`, `k2`, `k3`, `k4`, `k5`) BUCKETS 50
ORDER BY(`k2`, `v4`)
PROPERTIES (
    "replication_num" = "1",
    "storage_format" = "v2",
    "enable_persistent_index" = "true",
    "bloom_filter_columns" = "k1,k2"
);
-- result:
-- !result
insert into test_pk_tbl1 values ('2023-09-07', '2023-09-07 13:35:00', 'a', 'a', true, 1, 1, 1, 10),  ('2023-09-06', '2023-09-07 13:35:00', 'a', 'a', true, 1, 1, 1, 10);
-- result:
-- !result
select count(1) from test_pk_tbl1;
-- result:
2
-- !result
ALTER TABLE test_pk_tbl1 ORDER BY (k3);
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
select count(1) from test_pk_tbl1;
-- result:
2
-- !result
ALTER TABLE test_pk_tbl1 ORDER BY (k3,v1,v3,k2);
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
select count(1) from test_pk_tbl1;
-- result:
2
-- !result
ALTER TABLE test_pk_tbl1 add COLUMN v5 bitmap after v4;
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
select count(1) from test_pk_tbl1;
-- result:
2
-- !result
ALTER TABLE test_pk_tbl1 add COLUMN (v6 bitmap not null, v7 bitmap);
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
select count(1) from test_pk_tbl1;
-- result:
2
-- !result
ALTER TABLE test_pk_tbl1 modify COLUMN v6 bitmap null;
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
select count(1) from test_pk_tbl1;
-- result:
2
-- !result
-- name: test_alter_with_rollup
CREATE TABLE dup_test (
    k1 bigint(20),
    k2 bigint(20),
    k3 bigint(20),
    k4 bigint(20)
)
DUPLICATE KEY(k1)
PARTITION BY (k1)
DISTRIBUTED BY HASH(`k1`) BUCKETS 1
ORDER BY(k2)
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1",
"enable_persistent_index" = "true"
);
-- result:
-- !result
insert into dup_test values (1,1,1,1),(2,2,2,2);
-- result:
-- !result
CREATE MATERIALIZED VIEW rollup_test1 PROPERTIES ('session.query_timeout' = '3600') AS SELECT k1,k3,k4 FROM dup_test WHERE k2=2;
-- result:
-- !result
function: wait_alter_table_finish("ROLLUP", 8)
-- result:
None
-- !result
alter table dup_test drop column k4;
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
alter table dup_test PARTITIONS(p1,p2) DISTRIBUTED BY HASH(k1) BUCKETS 7;
-- result:
-- !result
function: wait_optimize_table_finish()
-- result:
None
-- !result