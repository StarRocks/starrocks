-- name: test_json_remove
CREATE DATABASE test_json_remove;
-- result:
-- !result
USE test_json_remove;
-- result:
-- !result
SELECT json_remove('{"a": 1, "b": 2, "c": 3}', '$.a') as remove_single_key;
-- result:
{"b": 2, "c": 3}
-- !result
SELECT json_remove('{"a": 1, "b": 2, "c": 3}', '$.a', '$.c') as remove_multiple_keys;
-- result:
{"b": 2}
-- !result
SELECT json_remove('{"a": 1, "b": [10, 20, 30]}', '$.b[1]') as remove_array_element;
-- result:
{"a": 1, "b": [10, 30]}
-- !result
SELECT json_remove('{"a": {"x": 1, "y": 2}, "b": 3}', '$.a.x') as remove_nested_key;
-- result:
{"a": {"y": 2}, "b": 3}
-- !result
SELECT json_remove('{"level1": {"level2": {"level3": "value"}}}', '$.level1.level2') as remove_nested_object;
-- result:
{"level1": {}}
-- !result
SELECT json_remove('{"a": 1, "b": 2}', '$.nonexistent') as remove_nonexistent_key;
-- result:
{"a": 1, "b": 2}
-- !result
SELECT json_remove('{"a": 1, "b": 2}', 'invalid_path') as remove_invalid_path;
-- result:
{"a": 1, "b": 2}
-- !result
SELECT json_remove('{"a": 1, "b": 2}', '$.a', '$.nonexistent', '$.b') as remove_mixed_paths;
-- result:
{}
-- !result
SELECT json_remove('{}', '$.a') as remove_from_empty_object;
-- result:
{}
-- !result
SELECT json_remove('{"a": 1}', '$.a') as remove_all_keys;
-- result:
{}
-- !result
SELECT json_remove('{"a": []}', '$.a') as remove_empty_array;
-- result:
{}
-- !result
SELECT json_remove('{"str": "hello", "num": 42, "bool": true, "null": null}', '$.str', '$.bool') as remove_various_types;
-- result:
{"null": null, "num": 42}
-- !result
SELECT json_remove('{"users": [{"id": 1, "name": "John"}, {"id": 2, "name": "Jane"}], "count": 2}', '$.count') as remove_from_complex;
-- result:
{"users": [{"id": 1, "name": "John"}, {"id": 2, "name": "Jane"}]}
-- !result
CREATE TABLE json_test_table (
  id INT,
  json_data JSON
) DUPLICATE KEY(id);
-- result:
-- !result
INSERT INTO json_test_table VALUES
(1, parse_json('{"name": "Alice", "age": 30, "city": "New York"}')),
(2, parse_json('{"name": "Bob", "age": 25, "city": "San Francisco", "hobbies": ["reading", "gaming"]}')),
(3, parse_json('{"product": "laptop", "price": 999.99, "specs": {"cpu": "Intel", "ram": "16GB"}}')),
(4, parse_json('{"empty": {}, "array": [1, 2, 3, 4, 5]}')),
(5, parse_json('null'));
-- result:
-- !result
SELECT id, json_remove(json_data, '$.age') as without_age FROM json_test_table WHERE id = 1;
-- result:
1	{"city": "New York", "name": "Alice"}
-- !result
SELECT id, json_remove(json_data, '$.city', '$.hobbies') as filtered_data FROM json_test_table WHERE id = 2;
-- result:
2	{"age": 25, "name": "Bob"}
-- !result
SELECT id, json_remove(json_data, '$.specs.ram') as without_ram FROM json_test_table WHERE id = 3;
-- result:
3	{"price": 999.99, "product": "laptop", "specs": {"cpu": "Intel"}}
-- !result
SELECT id, json_remove(json_data, '$.array[2]', '$.array[3]') as removed_elements FROM json_test_table WHERE id = 4;
-- result:
4	{"array": [1, 2, 5], "empty": {}}
-- !result
SELECT id, json_remove(json_data, '$.any') as null_result FROM json_test_table WHERE id = 5;
-- result:
5	"null"
-- !result
SELECT id, json_remove(json_data, '$.name', '$.city') as minimal_data FROM json_test_table WHERE id <= 2 ORDER BY id;
-- result:
1	{"age": 30}
2	{"age": 25, "hobbies": ["reading", "gaming"]}
-- !result
SELECT json_length(json_remove('{"a": 1, "b": 2, "c": 3}', '$.b')) as length_after_remove;
-- result:
2
-- !result
SELECT json_keys(json_remove('{"x": 1, "y": 2, "z": 3}', '$.y')) as keys_after_remove;
-- result:
["x", "z"]
-- !result
SELECT json_exists(json_remove('{"a": 1, "b": 2}', '$.a'), '$.a') as exists_after_remove;
-- result:
0
-- !result
SELECT json_remove(parse_json('{"temp": "data", "keep": "this"}'), '$.temp') as parsed_and_removed;
-- result:
{"keep": "this"}
-- !result
SELECT json_remove('{"a": 1}', '$') as root_path;
-- result:
{"a": 1}
-- !result
SELECT json_remove('{"a": 1}', '$.') as dot_path;
-- result:
{"a": 1}
-- !result
SELECT json_remove('{"a": {"b": {"c": {"d": {"e": "deep"}}}}}', '$.a.b.c.d') as remove_deep_nested;
-- result:
{"a": {"b": {"c": {}}}}
-- !result
SELECT json_remove('{"arr": [0, 1, 2, 3, 4]}', '$.arr[0]') as remove_first_element;
-- result:
{"arr": [1, 2, 3, 4]}
-- !result
SELECT json_remove('{"arr": [0, 1, 2, 3, 4]}', '$.arr[4]') as remove_last_element;
-- result:
{"arr": [0, 1, 2, 3]}
-- !result
SELECT json_remove('{"arr": [0, 1, 2, 3, 4]}', '$.arr[2]') as remove_middle_element;
-- result:
{"arr": [0, 1, 3, 4]}
-- !result
SELECT json_remove('{"key with spaces": "value", "normal": "data"}', '$."key with spaces"') as remove_special_key;
-- result:
{"normal": "data"}
-- !result
DROP TABLE json_test_table;
-- result:
-- !result
DROP DATABASE test_json_remove;
-- result:
-- !result