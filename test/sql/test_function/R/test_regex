-- name: test_regex
CREATE TABLE `ts` (
  `str` varchar(65533) NULL COMMENT "",
  `regex` varchar(65533) NULL COMMENT "",
  `replaced` varchar(65533) NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`str`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`str`) BUCKETS 1 PROPERTIES ("replication_num" = "1");
-- result:
-- !result
insert into ts values ('abcd', '.*', 'xx'), ('abcd', 'a.*', 'xx'), ('abcd', '.*abc.*', 'xx'), ('abcd', '.*cd', 'xx'), ('abcd', 'bc', 'xx'), ('', '', 'xx'), (NULL, '', 'xx'), ('abc中文def', '[\\p{Han}]+', 'xx');
-- result:
-- !result
insert into ts values ('a b c', " ", "-"), ('           XXXX', '       ', '');
-- result:
-- !result
insert into ts values ('xxxx', "x", "-"), ('xxxx', "xx", "-"), ('xxxx', "xxx", "-"), ('xxxx', "xxxx", "-");
-- result:
-- !result
insert into ts values ('xxxx', "not", "xxxxxxxx"), ('xxaxx', 'xx', 'aaa'), ('xaxaxax', 'xax', '-');
-- result:
-- !result
select regexp_replace('abcd', '.*', 'xx');
-- result:
xx
-- !result
select regexp_replace('abcd', 'a.*', 'xx');
-- result:
xx
-- !result
select regexp_replace('abcd', '.*abc.*', 'xx');
-- result:
xx
-- !result
select regexp_replace('abcd', '.*cd', 'xx');
-- result:
xx
-- !result
select regexp_replace('abcd', 'bc', 'xx');
-- result:
axxd
-- !result
select regexp_replace('', '', 'xx');
-- result:
-- !result
select regexp_replace(NULL, '', 'xx');
-- result:
None
-- !result
select regexp_replace('abc中文def', '中文', 'xx');
-- result:
abcxxdef
-- !result
select regexp_replace('abc中文def', '[\\p{Han}]+', 'xx');
-- result:
abcxxdef
-- !result
select regexp_replace('a b c', " ", "-");
-- result:
a-b-c
-- !result
select regexp_replace('           XXXX', '       ', '');
-- result:
    XXXX
-- !result
select regexp_replace('xxxx', "x", "-");
-- result:
----
-- !result
select regexp_replace('xxxx', "xx", "-"); 
select regexp_replace('xxxx', "xxx", "-");
-- result:
--
-- !result
select regexp_replace('xxxx', "xxxx", "-");
-- result:
-
-- !result
select regexp_replace('xxxx', "not", "xxxxxxxx");
-- result:
xxxx
-- !result
select regexp_replace('xxaxx', 'xx', 'aaa'); 
select regexp_replace('xaxaxax', 'xax', '-');
-- result:
aaaaaaa
-- !result
select str, regex, replaced, regexp_replace(str, regex, replaced) from ts order by str, regex, replaced;
-- result:
None		xx	None
		xx	xx
           XXXX	       		    XXXX
a b c	 	-	a-b-c
abcd	.*	xx	xx
abcd	.*abc.*	xx	xx
abcd	.*cd	xx	xx
abcd	a.*	xx	xx
abcd	bc	xx	axxd
abc中文def	[\p{Han}]+	xx	abcxxdef
xaxaxax	xax	-	-a-
xxaxx	xx	aaa	aaaaaaa
xxxx	not	xxxxxxxx	xxxx
xxxx	x	-	----
xxxx	xx	-	--
xxxx	xxx	-	-x
xxxx	xxxx	-	-
-- !result
-- name: test_regexp
CREATE TABLE `tsr` (
  `str` varchar(65533) NULL COMMENT "",
  `regex` varchar(65533) NULL COMMENT "",
  `pos` int NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`str`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`str`) BUCKETS 1 PROPERTIES ("replication_num" = "1");
-- result:
-- !result
insert into tsr values ("AbCdExCeF", "([[:lower:]]+)C([[:lower:]]+)", 3), ("AbCdExCeF", "([[:lower:]]+)C([[:lower:]]+)", 0);
-- result:
-- !result
SELECT regexp_extract_all("AbCdExCeF", "([[:lower:]]+)C([[:lower:]]+)", 0);
-- result:
-- !result
SELECT regexp_extract_all(str, "([[:lower:]]+)C([[:lower:]]+)", 0) from tsr;
-- result:
-- !result
SELECT regexp_extract_all(str, regex, 0) from tsr;
-- result:
-- !result
SELECT regexp_extract_all(str, regex, pos) from tsr;
-- result:
-- !result
SELECT regexp_extract_all(str, "([[:lower:]]+)C([[:lower:]]+)", pos) from tsr;
-- result:
-- !result
SELECT regexp_extract_all("AbCdExCeF", "([[:lower:]]+)C([[:lower:]]+)", pos) from tsr;
-- result:
-- !result
SELECT regexp_extract_all("AbCdExCeF", regex, pos) from tsr;
-- result:
-- !result
SELECT regexp_extract_all(str, "([[:lower:]]+)C([[:lower:]]+)", pos) from tsr;
-- result:
-- !result
SELECT regexp_extract_all("AbCdExCeF", "([[:lower:]]+)C([[:lower:]]+)", 3);
-- result:
-- !result
SELECT regexp_extract_all(str, "([[:lower:]]+)C([[:lower:]]+)", 3) from tsr;
-- result:
-- !result
SELECT regexp_extract_all(str, regex, 3) from tsr;
-- result:
-- !result

-- name: test_regexp_count
CREATE TABLE `tsc` (
  `str` varchar(65533) NULL COMMENT "",
  `regex` varchar(65533) NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`str`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`str`) BUCKETS 1 PROPERTIES ("replication_num" = "1");
-- result:
-- !result
insert into tsc values ('abc123def456', '[0-9]'), ('test.com test.net test.org', '\\.'), ('a b  c   d', '\\s+'), ('ababababab', 'ab'), ('', '.'), (NULL, '.');
-- result:
-- !result
select regexp_count('abc123def456', '[0-9]');
-- result:
6
-- !result
select regexp_count('test.com test.net test.org', '\\.');
-- result:
3
-- !result
select regexp_count('a b  c   d', '\\s+');
-- result:
3
-- !result
select regexp_count('ababababab', 'ab');
-- result:
5
-- !result
select regexp_count('', '.');
-- result:
0
-- !result
select regexp_count(NULL, '.');
-- result:
None
-- !result
select regexp_count('abc', NULL);
-- result:
None
-- !result
select regexp_count('abc中文def', '[\\p{Han}]+');
-- result:
1
-- !result
select regexp_count('AbCdExCeF', 'C');
-- result:
2
-- !result
select regexp_count('1a 2b 14m', '\\d+');
-- result:
3
-- !result
select str, regex, regexp_count(str, regex) from tsc order by str, regex;
-- result:
None	.	None
	.	0
a b  c   d	\s+	3
abc123def456	[0-9]	6
ababababab	ab	5
test.com test.net test.org	\.	3
-- !result
-- name: test_regexp_count_invalid
CREATE TABLE `tsc_invalid` (
  `str` varchar(65533) NULL COMMENT "",
  `regex` varchar(65533) NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`str`)
COMMENT "OLAP"
DISTRIBUTED BY HASH(`str`) BUCKETS 1 PROPERTIES ("replication_num" = "1");
-- result:
-- !result
insert into tsc_invalid values 
('abc123def456', '[0-9'),
('test string', '(unclosed'),
('repetition test', '?invalid'),
('valid test', 'valid');
-- result:
-- !result
select str, regex, regexp_count(str, regex) from tsc_invalid order by str, regex;
-- result:
abc123def456	[0-9	None
repetition test	?invalid	None
test string	(unclosed	None
valid test	valid	1
-- !result
select regexp_count('test string', '[0-9');
-- result:
[REGEX].*Invalid regex expression: \[0-9.*
-- !result
select regexp_count('test string', '(unclosed');
-- result:
[REGEX].*Invalid regex expression: \(unclosed.*
-- !result
select regexp_count('test string', '?invalid');
-- result:
[REGEX].*Invalid regex expression: \?invalid.*
-- !result
select regexp_count('test string', 'a{,}');
-- result:
0
-- !result
select regexp_count(NULL, '[0-9');
-- result:
None
-- !result
select regexp_count('', '[0-9');
-- result:
[REGEX].*Invalid regex expression: \[0-9.*
-- !result
select regexp_count('test', NULL);
-- result:
None
-- !result