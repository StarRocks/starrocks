-- name: test_typeof_literal
select typeof(cast(1 as tinyint));
-- result:
tinyint
-- !result
select typeof(cast(1 as smallint));
-- result:
smallint
-- !result
select typeof(cast(1 as int));
-- result:
int
-- !result
select typeof(cast(1 as bigint));
-- result:
bigint
-- !result
select typeof(cast(1 as largeint));
-- result:
largeint
-- !result
select typeof(cast(1 as decimal(19, 2)));
-- result:
decimal128(19, 2)
-- !result
select typeof(cast(1 as double));
-- result:
double
-- !result
select typeof(cast(1 as float));
-- result:
float
-- !result
select typeof(cast(1 as boolean));
-- result:
boolean
-- !result
select typeof(cast(1 as char));
-- result:
char
-- !result
select typeof(cast(1 as string));
-- result:
varchar
-- !result
select typeof(cast(1 as varchar));
-- result:
varchar
-- !result
select typeof(cast('s' as BINARY));
-- result:
varbinary
-- !result
select typeof(cast('2023-03-07' as date));
-- result:
date
-- !result
select typeof(cast('2023-03-07 11:22:33' as datetime));
-- result:
datetime
-- !result
select typeof([1, 2, 3]);
-- result:
array<tinyint>
-- !result
select typeof(get_json_object('{"k1":1, "k2":"v2"}', '$.k1'));
-- result:
varchar
-- !result
select typeof(map{1:"apple", 2:"orange", 3:"pear"});
-- result:
map<tinyint,varchar>
-- !result
select typeof(struct(1, 2, 3, 4));
-- result:
struct<col1 tinyint, col2 tinyint, col3 tinyint, col4 tinyint>
-- !result
select typeof(bitmap_empty());
-- result:
bitmap
-- !result
select typeof(hll_empty());
-- result:
hll
-- !result
select typeof(parse_json('{"a": 1, "b": true}'));
-- result:
json
-- !result
select typeof(null);
-- result:
null_type
-- !result
-- name: test_typeof_table
create table t1 properties("replication_num" = "1") as
select cast(1 as tinyint) as c1
,cast(1 as smallint) as c2
,cast(1 as int) as c3
,cast(1 as bigint) as c4
,cast(1 as largeint) as c5
,cast(1 as decimal(19, 2)) as c6
,cast(1 as double) as c7
,cast(1 as float) as c8
,cast(1 as boolean) as c9
,cast(1 as char) as c10
,cast(1 as string) as c11
,cast(1 as varchar) as c12
,cast('s' as BINARY) as c13
,cast('2023-03-07' as date) as c14
,cast('2023-03-07 11:22:33' as datetime) as c15
,[1, 2, 3] as c16
,get_json_object('{"k1":1, "k2":"v2"}', '$.k1') as c17
,map{1:"apple", 2:"orange", 3:"pear"} as c18
,struct(1, 2, 3, 4) as c19
,parse_json('{"a": 1, "b": true}') as c20;
-- result:
-- !result
select typeof(c1)
  ,typeof(c2)
  ,typeof(c3)
  ,typeof(c4)
  ,typeof(c5)
  ,typeof(c6)
  ,typeof(c7)
  ,typeof(c8)
  ,typeof(c9)
  ,typeof(c10)
  ,typeof(c11)
  ,typeof(c12)
  ,typeof(c13)
  ,typeof(c14)
  ,typeof(c15)
  ,typeof(c16)
  ,typeof(c17)
  ,typeof(c18)
  ,typeof(c19)
  ,typeof(c20)
  from t1;
-- result:
tinyint	smallint	int	bigint	largeint	decimal128(19, 2)	decimal128(38, 9)	decimal128(38, 9)	boolean	varchar	varchar	varchar	varbinary	date	datetime	array<tinyint>	varchar	map<tinyint,varchar>	struct<col1 tinyint, col2 tinyint, col3 tinyint, col4 tinyint>	json
-- !result
-- name: test_typeof_table_bitmap
CREATE TABLE pv_bitmap (
    dt INT(11) NULL COMMENT "",
    page VARCHAR(10) NULL COMMENT "",
    user_id bitmap BITMAP_UNION NULL COMMENT ""
) ENGINE=OLAP
AGGREGATE KEY(dt, page)
COMMENT "OLAP"
DISTRIBUTED BY HASH(dt)
properties("replication_num" = "1");
-- result:
-- !result
insert into pv_bitmap values(1, 'test', to_bitmap(10));
-- result:
-- !result
select typeof(user_id) from pv_bitmap;
-- result:
bitmap
-- !result
-- name: test_typeof_table_hll
create table test_uv(
    dt date,
    id int,
    uv_set hll hll_union
)
distributed by hash(id)
properties("replication_num" = "1");
-- result:
-- !result
insert into test_uv values('2024-01-01', 1, hll_hash(10));
-- result:
-- !result
select typeof(uv_set) from test_uv;
-- result:
hll
-- !result