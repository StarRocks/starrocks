-- name: test_cast_string_to_datetime

-- # 1.1 Prepare Table and Data.
create table t1 (
    k1 int NULL,
    date_str string,
    datetime_str string,
    date_str_with_whitespace string,
    datetime_str_with_whitespace string
)
duplicate key(k1)
distributed by hash(k1) buckets 32;


CREATE TABLE __row_util (
  k1 bigint null
) ENGINE=OLAP
DUPLICATE KEY(`k1`)
DISTRIBUTED BY HASH(`k1`) BUCKETS 32;
insert into __row_util select generate_series from TABLE(generate_series(0, 10000 - 1));
insert into __row_util select k1 + 20000 from __row_util;
insert into __row_util select k1 + 40000 from __row_util;
insert into __row_util select k1 + 80000 from __row_util;

-- ## 1.2 Insert valid date and datetime with/without whitespace.
insert into t1
select
    cast(random() *2e9 as int),
    cast(cast(date_add('2020-01-01', INTERVAL row_number() over() DAY) as date) as varchar),
    concat(cast(cast(date_add('2020-01-01', INTERVAL row_number() over() DAY) as date) as varchar), ' 01:02:03'),
    concat('  ', cast(cast(date_add('2020-01-01', INTERVAL row_number() over() DAY) as date) as varchar), '  '),
    concat('   ', cast(cast(date_add('2020-01-01', INTERVAL row_number() over() DAY) as date) as varchar), ' 01:02:03  ')
from __row_util;

insert into t1 (date_str)
values
    ("20200101"),
    ("20200101010203"),
    ("20200101T010203"),
    ("20200101T0102033"),
    ("20200101T010203.123"),

    ("200101"),
    ("200101010203"),
    ("200101T010203"),
    ("200101T0102033"),
    ("200101T010203.123"),

    ("2020.01.01"),
    ("2020.01.01T01.02.03"),
    ("2020.01.01T01.02.033"),
    ("2020.01.01T01.0203.123"),

    ("  20200101 "),
    ("  20200101010203   "),
    ("  20200101T010203"),
    ("20200101T0102033  "),
    ("  20200101T010203.123    \n"),
    ("  20200101T010203.123    \n \t \v \f \r "),

    ("2020.13.29"),
    ("2020.13.61"),

    ("2020.02.29"),
    ("2020.02.28"),
    ("2000.02.29"),
    ("2000.02.28"),

    ("2021.02.28"),
    ("2100.02.28"),

-- ## 1.3 Insert invalid datetime.
    ("invalid"),

    ("2021.02.29"),
    ("2100.02.29"),

    ("?100.02.28"),
    ("2?00.02.28"),
    ("21?0.02.28"),
    ("210?.02.28"),
    ("2100902.28"),
    ("2100.?2.28"),
    ("2100.0?.28"),
    ("2100.02928"),
    ("2100.02.?8"),
    ("2100.02.2?"),
    ("2020-01-01T01:02:03Z"),            -- Basic Z format
    ("2020-01-01T01:02:03.123Z"),        -- Z with 3 microseconds
    ("2020-01-01T01:02:03.123456Z"),     -- Z with 6 microseconds
    ("2020-01-01T01:02:03.1Z"),          -- Z with 1 microsecond
    ("  2020-01-01T01:02:03Z  "),        -- Z with whitespace
    ("  2020-01-01T01:02:03.123Z  "),    -- Z with microseconds and whitespace

    -- Invalid Z format tests:
    ("2020-01-01T01:02:03z"),            -- lowercase z
    ("2020-01-01T01:02:03Zextra"),       -- extra chars after Z
    ("2020-01-01T01:02:03.Z"),           -- decimal but no microseconds
    ("2020-01-01T01:02:03.1234567Z");    -- too many microsecond digits;

-- # 2. Query.

-- ## 2.1 Query without null row.
select
    ifnull(sum(murmur_hash3_32(
        cast(date_str as datetime)
    )), 0) +
    ifnull(sum(murmur_hash3_32(
        cast(date_str_with_whitespace as datetime)
    )), 0) +
    ifnull(sum(murmur_hash3_32(
        cast(datetime_str as datetime)
    )), 0) +
    ifnull(sum(murmur_hash3_32(
        cast(datetime_str_with_whitespace as datetime)
    )), 0)
from t1;

-- ## 2.2 Query with null row.
insert into t1
select
    cast(random() *2e9 as int),
    null, null, null ,null
from __row_util;

select
    ifnull(sum(murmur_hash3_32(
        cast(date_str as datetime)
    )), 0) +
    ifnull(sum(murmur_hash3_32(
        cast(date_str_with_whitespace as datetime)
    )), 0) +
    ifnull(sum(murmur_hash3_32(
        cast(datetime_str as datetime)
    )), 0) +
    ifnull(sum(murmur_hash3_32(
        cast(datetime_str_with_whitespace as datetime)
    )), 0)
from t1;

-- ## 2.3 Query constants.
select cast(column_0 as datetime) from (values (NULL)) as tmp;
select cast(column_0 as datetime) from (values ("20200101")) as tmp;
select cast(column_0 as datetime) from (values ("20200101010203")) as tmp;
select cast(column_0 as datetime) from (values ("20200101T010203")) as tmp;
select cast(column_0 as datetime) from (values ("20200101T0102033")) as tmp;
select cast(column_0 as datetime) from (values ("20200101T010203.123")) as tmp;

select cast(column_0 as datetime) from (values ("200101")) as tmp;
select cast(column_0 as datetime) from (values ("200101010203")) as tmp;
select cast(column_0 as datetime) from (values ("200101T010203")) as tmp;
select cast(column_0 as datetime) from (values ("200101T0102033")) as tmp;
select cast(column_0 as datetime) from (values ("200101T010203.123")) as tmp;

select cast(column_0 as datetime) from (values ("2020.01.01")) as tmp;
select cast(column_0 as datetime) from (values ("2020.01.01T01.02.03")) as tmp;
select cast(column_0 as datetime) from (values ("2020.01.01T01.02.033")) as tmp;
select cast(column_0 as datetime) from (values ("2020.01.01T01.0203.123")) as tmp;

select cast(column_0 as datetime) from (values ("  20200101 ")) as tmp;
select cast(column_0 as datetime) from (values ("  20200101010203   ")) as tmp;
select cast(column_0 as datetime) from (values ("  20200101T010203")) as tmp;
select cast(column_0 as datetime) from (values ("20200101T0102033  ")) as tmp;
select cast(column_0 as datetime) from (values ("  20200101T010203.123    \n")) as tmp;
select cast(column_0 as datetime) from (values ("  20200101T010203.123    \n \t \v \f \r ")) as tmp;

select cast(column_0 as datetime) from (values ("2020.13.29")) as tmp;
select cast(column_0 as datetime) from (values ("2020.13.61")) as tmp;

select cast(column_0 as datetime) from (values ("2020.02.29")) as tmp;
select cast(column_0 as datetime) from (values ("2020.02.28")) as tmp;
select cast(column_0 as datetime) from (values ("2000.02.29")) as tmp;
select cast(column_0 as datetime) from (values ("2000.02.28")) as tmp;

select cast(column_0 as datetime) from (values ("2021.02.28")) as tmp;
select cast(column_0 as datetime) from (values ("2100.02.28")) as tmp;

select cast(column_0 as datetime) from (values ("invalid")) as tmp;

select cast(column_0 as datetime) from (values ("2021.02.29")) as tmp;
select cast(column_0 as datetime) from (values ("2100.02.29")) as tmp;

select cast(column_0 as datetime) from (values ("?100.02.28")) as tmp;
select cast(column_0 as datetime) from (values ("2?00.02.28")) as tmp;
select cast(column_0 as datetime) from (values ("21?0.02.28")) as tmp;
select cast(column_0 as datetime) from (values ("210?.02.28")) as tmp;
select cast(column_0 as datetime) from (values ("2100902.28")) as tmp;
select cast(column_0 as datetime) from (values ("2100.?2.28")) as tmp;
select cast(column_0 as datetime) from (values ("2100.0?.28")) as tmp;
select cast(column_0 as datetime) from (values ("2100.02928")) as tmp;
select cast(column_0 as datetime) from (values ("2100.02.?8")) as tmp;
select cast(column_0 as datetime) from (values ("2100.02.2?")) as tmp;

-- Add to "2.3 Query constants" section:
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03Z")) as tmp;
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03.123Z")) as tmp;
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03.123456Z")) as tmp;
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03.1Z")) as tmp;
select cast(column_0 as datetime) from (values ("  2020-01-01T01:02:03Z  ")) as tmp;
select cast(column_0 as datetime) from (values ("  2020-01-01T01:02:03.123Z  ")) as tmp;

-- Invalid cases:
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03z")) as tmp;
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03Zextra")) as tmp;
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03.Z")) as tmp;
select cast(column_0 as datetime) from (values ("2020-01-01T01:02:03.1234567Z")) as tmp;
