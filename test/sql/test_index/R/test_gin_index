-- name: test_gin_index_table
create database test_gin_index;
-- result:
-- !result
use  test_gin_index;
-- result:
-- !result
ADMIN SET FRONTEND CONFIG ("enable_experimental_gin" = "true");
-- result:
-- !result
CREATE TABLE `t1_dup` (
    `id1` bigint(20) NOT NULL COMMENT "",
    `value` varchar(255) NOT NULL COMMENT "",
    INDEX gin_english (`value`) USING GIN ("parser" = "english")
)
DUPLICATE KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1
PROPERTIES (
    "replicated_storage" = "true",
    "replication_num" = "1"
);
-- result:
-- !result
show create table t1_dup;
-- result:
t1_dup	CREATE TABLE `t1_dup` (
  `id1` bigint(20) NOT NULL COMMENT "",
  `value` varchar(255) NOT NULL COMMENT "",
  INDEX gin_english (`value`) USING GIN("imp_lib" = "clucene", "parser" = "english") COMMENT ''
) ENGINE=OLAP 
DUPLICATE KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1 
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "false",
"replication_num" = "1"
);
-- !result
CREATE TABLE `t1_unique` (
    `id1` bigint(20) NOT NULL COMMENT "",
    `value` varchar(255) NOT NULL COMMENT "",
    INDEX gin_english (`value`) USING GIN ("parser" = "english")
)
UNIQUE KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1
PROPERTIES (
    "replicated_storage" = "false",
    "replication_num" = "1"
);
-- result:
E: (1064, 'Getting analyzing error. Detail message: The inverted index can only be build on DUPLICATE/PRIMARY_KEYS table..')
-- !result
CREATE TABLE `t1_agg` (
    `id1` bigint(20) NOT NULL COMMENT "",
    `value` varchar(255) REPLACE NOT NULL COMMENT "",
    `cnt` bigint(20) SUM DEFAULT "0",
    INDEX gin_english (`value`) USING GIN ("parser" = "english")
)
AGGREGATE KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1
PROPERTIES (
    "replicated_storage" = "false",
    "replication_num" = "1"
);
-- result:
E: (1064, 'Getting analyzing error. Detail message: The inverted index can only be build on DUPLICATE/PRIMARY_KEYS table..')
-- !result
CREATE TABLE `t1_primary` (
    `id1` bigint(20) NOT NULL COMMENT "",
    `value` varchar(255) NOT NULL COMMENT "",
    INDEX gin_english (`value`) USING GIN ("parser" = "english")
)
PRIMARY KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1
PROPERTIES (
    "replicated_storage" = "true",
    "replication_num" = "1"
);
-- result:
-- !result
show create table t1_primary;
-- result:
t1_primary	CREATE TABLE `t1_primary` (
  `id1` bigint(20) NOT NULL COMMENT "",
  `value` varchar(255) NOT NULL COMMENT "",
  INDEX gin_english (`value`) USING GIN("imp_lib" = "clucene", "parser" = "english") COMMENT ''
) ENGINE=OLAP 
PRIMARY KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1 
PROPERTIES (
"compression" = "LZ4",
"enable_persistent_index" = "true",
"fast_schema_evolution" = "true",
"replicated_storage" = "false",
"replication_num" = "1"
);
-- !result
insert into t1_primary values (1, 'hello'), (2, 'world'), (3, 'hello world'), (4, 'starrocks database');
-- result:
-- !result
select * from t1_primary where value match 'hello';
-- result:
1	hello
3	hello world
-- !result
select * from t1_primary where value match 'starrocks';
-- result:
4	starrocks database
-- !result
select * from t1_primary where value match 'hello world';
-- result:
-- !result
select * from t1_primary where value match 'starrocks database';
-- result:
-- !result
select * from t1_primary where value match '%hello%';
-- result:
1	hello
3	hello world
-- !result
select * from t1_primary where value match '%world%';
-- result:
2	world
3	hello world
-- !result
select * from t1_primary where value match '%starrocks%';
-- result:
4	starrocks database
-- !result
select * from t1_primary where value match '%database%';
-- result:
4	starrocks database
-- !result
select * from t1_primary where value match '%hello';
-- result:
1	hello
3	hello world
-- !result
select * from t1_primary where value match '%world';
-- result:
2	world
3	hello world
-- !result
select * from t1_primary where value match 'hello%';
-- result:
1	hello
3	hello world
-- !result
select * from t1_primary where value match 'starrocks%';
-- result:
4	starrocks database
-- !result
CREATE TABLE t2_dup (
    id1 bigint(20) NOT NULL COMMENT "",
    value varchar(255) COMMENT ""
)
DUPLICATE KEY(id1)
DISTRIBUTED BY HASH(id1) BUCKETS 1
PROPERTIES (
    "replicated_storage" = "true",
    "replication_num" = "1"
);
-- result:
-- !result
show create table t2_dup;
-- result:
t2_dup	CREATE TABLE `t2_dup` (
  `id1` bigint(20) NOT NULL COMMENT "",
  `value` varchar(255) NULL COMMENT ""
) ENGINE=OLAP 
DUPLICATE KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1 
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);
-- !result
insert into t2_dup values (1, 'hello', 1), (2, 'world', 2), (3, 'hello world', 3), (4, 'starrocks database', 4);
-- result:
E: (5604, "Getting analyzing error. Detail message: Inserted target column count: 2 doesn't match select/value column count: 3.")
-- !result
ALTER TABLE t2_dup ADD INDEX gin_english(value) USING GIN ("parser" = "english");
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
show create table from t2_dup;
-- result:
E: (1064, "Getting syntax error at line 1, column 18. Detail message: Unexpected input 'from', the most similar input is {a legal identifier}.")
-- !result
CREATE TABLE t2_primary (
    id1 bigint(20) NOT NULL COMMENT "",
    value varchar(255) NOT NULL COMMENT ""
)
PRIMARY KEY(id1)
DISTRIBUTED BY HASH(id1) BUCKETS 1
PROPERTIES (
    "replicated_storage" = "true",
    "replication_num" = "1"
);
-- result:
-- !result
show create table t2_primary;
-- result:
t2_primary	CREATE TABLE `t2_primary` (
  `id1` bigint(20) NOT NULL COMMENT "",
  `value` varchar(255) NOT NULL COMMENT ""
) ENGINE=OLAP 
PRIMARY KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1 
PROPERTIES (
"compression" = "LZ4",
"enable_persistent_index" = "true",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);
-- !result
insert into t2_primary values (1, 'hello'), (2, 'world'), (3, 'hello world'), (4, 'starrocks database');
-- result:
-- !result
ALTER TABLE t2_primary ADD INDEX gin_english(value) USING GIN ("parser" = "english");
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
show create table t2_primary;
-- result:
t2_primary	CREATE TABLE `t2_primary` (
  `id1` bigint(20) NOT NULL COMMENT "",
  `value` varchar(255) NOT NULL COMMENT "",
  INDEX gin_english (`value`) USING GIN("imp_lib" = "clucene", "parser" = "english") COMMENT ''
) ENGINE=OLAP 
PRIMARY KEY(`id1`)
DISTRIBUTED BY HASH(`id1`) BUCKETS 1 
PROPERTIES (
"compression" = "LZ4",
"enable_persistent_index" = "true",
"fast_schema_evolution" = "true",
"replicated_storage" = "false",
"replication_num" = "1"
);
-- !result
CREATE TABLE rewrite_test (
    AAA DATETIME not NULL COMMENT "",
    BBB VARCHAR(200) not NULL COMMENT "",
    CCC VARCHAR(200) not NULL COMMENT "",
    DDD VARCHAR(2000) COMMENT "",
    EEE LARGEINT  NULL COMMENT "",
    FFF DECIMAL(20,10) NULL COMMENT "",
    GGG VARCHAR(200)  NULL COMMENT "",
    HHH FLOAT  NULL COMMENT "",
    III BOOLEAN  NULL COMMENT "",
    KKK CHAR(20)   NULL COMMENT "",
    LLL STRING   NULL COMMENT "",
    MMM VARCHAR(20)   NULL COMMENT "",
    NNN BINARY  NULL COMMENT "",
    OOO TINYINT NULL COMMENT "",
    PPP DATETIME NULL COMMENT "",
    QQQ ARRAY<INT> NULL COMMENT "",
    RRR JSON NULL COMMENT "",
    SSS MAP<INT,INT> NULL COMMENT "",
    TTT STRUCT<a INT, b INT> NULL COMMENT "",
    INDEX init_bitmap_index (KKK) USING BITMAP
)
primary KEY(AAA, BBB, CCC)
PARTITION BY RANGE (`AAA`) (
    START ("1970-01-01") END ("2030-01-01") EVERY (INTERVAL 30 YEAR)
)
DISTRIBUTED BY HASH(`AAA`, `BBB`) BUCKETS 1
ORDER BY(`AAA`,`BBB`,`CCC`,`DDD`)
PROPERTIES (
      "replicated_storage"="true",
      "replication_num" = "1",
      "storage_format" = "v2",
      "enable_persistent_index" = "true",
      "bloom_filter_columns" = "MMM"
  );
-- result:
-- !result
CREATE INDEX idx ON rewrite_test(DDD) USING GIN('parser' = 'english');
-- result:
-- !result
function: wait_alter_table_finish()
-- result:
None
-- !result
show create table rewrite_test;
-- result:
rewrite_test	CREATE TABLE `rewrite_test` (
  `AAA` datetime NOT NULL COMMENT "",
  `BBB` varchar(200) NOT NULL COMMENT "",
  `CCC` varchar(200) NOT NULL COMMENT "",
  `DDD` varchar(2000) NULL COMMENT "",
  `EEE` largeint(40) NULL COMMENT "",
  `FFF` decimal(20, 10) NULL COMMENT "",
  `GGG` varchar(200) NULL COMMENT "",
  `HHH` float NULL COMMENT "",
  `III` boolean NULL COMMENT "",
  `KKK` char(20) NULL COMMENT "",
  `LLL` varchar(65533) NULL COMMENT "",
  `MMM` varchar(20) NULL COMMENT "",
  `NNN` varbinary NULL COMMENT "",
  `OOO` tinyint(4) NULL COMMENT "",
  `PPP` datetime NULL COMMENT "",
  `QQQ` array<int(11)> NULL COMMENT "",
  `RRR` json NULL COMMENT "",
  `SSS` map<int(11),int(11)> NULL COMMENT "",
  `TTT` struct<a int(11), b int(11)> NULL COMMENT "",
  INDEX init_bitmap_index (`KKK`) USING BITMAP COMMENT '',
  INDEX idx (`DDD`) USING GIN("imp_lib" = "clucene", "parser" = "english") COMMENT ''
) ENGINE=OLAP 
PRIMARY KEY(`AAA`, `BBB`, `CCC`)
PARTITION BY RANGE(`AAA`)
(PARTITION p1970 VALUES [("1970-01-01 00:00:00"), ("2000-01-01 00:00:00")),
PARTITION p2000 VALUES [("2000-01-01 00:00:00"), ("2030-01-01 00:00:00")))
DISTRIBUTED BY HASH(`AAA`, `BBB`) BUCKETS 1 
ORDER BY(`AAA`, `BBB`, `CCC`, `DDD`)
PROPERTIES (
"bloom_filter_columns" = "MMM",
"compression" = "LZ4",
"enable_persistent_index" = "true",
"fast_schema_evolution" = "true",
"replicated_storage" = "false",
"replication_num" = "1"
);
-- !result
insert into rewrite_test values ('1977-10-08 20:50:42', 'AgMXONftRPruaiBlvJHO', 'uemCTOqkQCJZZwDxGrIW', 'srCfYYvbThIBOwSaMErV', 5187, -69123.51853, 'wUEOQaCkRLZvSHRBhseT', 599331301.446185, False, 'aMUVBOGurHVaHmErWVJq', 'PnuvSmQaKeJnMzfZMbAj', 'WUxeIhcQNraNBlfHkptk', '', 9, '2017-12-03 04:20:42', [3243, 7145, 12296], '{"job": "Archivist", "company": "Kelley-Booth", "ssn": "168-18-5592", "residence": "743 Mcpherson Street Suite 502\nPort Zachary, UT 66496", "current_location": ["43.016968", "154.620014"], "blood_group": "A+", "website": ["https://www.castillo.info/", "http://www.cuevas.biz/", "https://www.rogers-mendez.biz/", "https://www.hall.info/"], "username": "nicole21", "name": "Kaylee Turner", "sex": "F", "address": "421 Andrew Prairie Apt. 354\nJamesville, NC 40343", "mail": "kchurch@gmail.com", "birthdate": "1975-11-19"}', null, null);
-- result:
-- !result
select * from rewrite_test where DDD match 'srcfyyvbthibowsamerv';
-- result:
1977-10-08 20:50:42	AgMXONftRPruaiBlvJHO	uemCTOqkQCJZZwDxGrIW	srCfYYvbThIBOwSaMErV	5187	-69123.5185300000	wUEOQaCkRLZvSHRBhseT	599331300.0	0	aMUVBOGurHVaHmErWVJq	PnuvSmQaKeJnMzfZMbAj	WUxeIhcQNraNBlfHkptk		9	2017-12-03 04:20:42	[3243,7145,12296]	None	None	None
-- !result
drop database test_gin_index;
-- result:
-- !result