-- name: test_alter_pk_table_abnormal

CREATE TABLE t0(k0 BIGINT, k1 DATETIME, v0 INT, v1 VARCHAR(100))
 primary key(k0, k1)
 distributed by hash(k0)
 buckets 1
 order by (v0)
 properties('replication_num'='1');

INSERT INTO t0 VALUES(0, '2024-01-01 00:00:00', 10, '100');

ALTER TABLE t0 ADD COLUMN k0 FLOAT;

ALTER TABLE t0 ADD COLUMN v0 BIGINT;

ALTER TABLE t0 DROP COLUMN k1;

ALTER TABLE t0 DROP COLUMN k0;

ALTER TABLE t0 MODIFY COLUMN k0 INT;

ALTER TABLE t0 MODIFY COLUMN k0 LARGEINT;

ALTER TABLE t0 MODIFY COLUMN v0 BIGINT;

ALTER TABLE t0 MODIFY COLUMN v1 VARCHAR(200), MODIFY COLUMN v0 BIGINT;

ALTER TABLE t0 MODIFY COLUMN v1 VARCHAR(100) MAX;

ALTER TABLE t0 ADD column k2 SMALLINT KEY;

ALTER TABLE t0 ADD COLUMN v2 BIGINT, ADD COLUMN v2 FLOAT;

ALTER TABLE t0 ADD COLUMN v2 BIGINT, ADD COLUMN v2 BIGINT KEY;

ALTER TABLE t0 ADD COLUMN v2 BIGINT, ADD COLUMN k2 BIGINT KEY;

ALTER TABLE t0 ADD COLUMN v2 BIGINT, DROP COLUMN v2;

DESC t0;

ALTER TABLE t0 ADD COLUMN v2 BIGINT, ADD COLUMN v0 BIGINT;

ALTER TABLE t0 DROP COLUMN k0;

ALTER TABLE t0 DROP COLUMN v1, DROP COLUMN k0;

ALTER TABLE t0 DROP COLUMN v0;

ALTER TABLE t0 DROP COLUMN v1, DROP COLUMN v0;

ALTER TABLE t0 DROP COLUMN v1, DROP COLUMN v100;

DESC t0;

SELECT * from t0;

-- name: test_alter_unique_table_abnormal

CREATE TABLE t1(k0 BIGINT, k1 DATETIME, v0 BIGINT, v1 VARCHAR(100))
 unique key(k0, k1)
 distributed by hash(k0) buckets 1
 properties('replication_num'='1');

INSERT INTO t1 VALUES(0, '2024-01-01 00:00:00', 10, '100');

ALTER TABLE t1 ADD column k2 SMALLINT KEY SUM;

ALTER TABLE t1 ADD column v2 BIGINT MIN;

ALTER TABLE t1 ADD COLUMN v2 BIGINT, ADD COLUMN v2 FLOAT;

ALTER TABLE t1 ADD COLUMN v2 BIGINT, ADD COLUMN v2 BIGINT KEY;

ALTER TABLE t1 ADD COLUMN v2 BIGINT, DROP COLUMN v2;

DESC t1;

ALTER TABLE t1 ADD COLUMN v2 BIGINT, ADD COLUMN v0 BIGINT;

ALTER TABLE t1 DROP COLUMN k1;

ALTER TABLE t1 DROP COLUMN v0, DROP COLUMN k1;

ALTER TABLE t1 DROP COLUMN v0, DROP COLUMN v100;

ALTER TABLE t1 MODIFY COLUMN v1 VARCHAR(100) MAX;

DESC t1;

SELECT * from t1;

-- name: test_alter_duplicate_table_abnormal

CREATE TABLE t2(k0 BIGINT, k1 DATETIME, v0 BIGINT, v1 VARCHAR(100))
 duplicate key(k0, k1)
 distributed by hash(k0) buckets 1
 properties('replication_num'='1');

INSERT INTO t2 VALUES(0, '2024-01-01 00:00:00', 10, '100');

ALTER TABLE t2 ADD column k2 SMALLINT KEY SUM;

ALTER TABLE t2 ADD column v2 BIGINT MIN;

ALTER TABLE t2 ADD COLUMN v2 BIGINT, ADD COLUMN v2 FLOAT;

ALTER TABLE t2 ADD COLUMN v2 BIGINT, ADD COLUMN v2 BIGINT KEY;

ALTER TABLE t2 ADD COLUMN v2 BIGINT, DROP COLUMN v2;

ALTER TABLE t2 ADD COLUMN v2 BIGINT, ADD COLUMN v0 BIGINT;

ALTER TABLE t2 DROP COLUMN v0, DROP COLUMN v100;

ALTER TABLE t2 MODIFY COLUMN v1 VARCHAR(100) MAX;

DESC t2;

SELECT * from t2;


-- name: test_alter_table_storage_ttl
CREATE TABLE `test` (
  `k1` date NULL COMMENT "",
  `k2` datetime NULL COMMENT "",
  `k3` varchar(65533) NULL COMMENT "",
  `k4` varchar(20) NULL COMMENT "",
  `k5` boolean NULL COMMENT "",
  `k6` tinyint(4) NULL COMMENT "",
  `k7` smallint(6) NULL COMMENT "",
  `k8` int(11) NULL COMMENT "",
  `k9` bigint(20) NULL COMMENT "",
  `k10` largeint(40) NULL COMMENT "",
  `k11` float NULL COMMENT "",
  `k12` double NULL COMMENT "",
  `k13` decimal(27, 9) NULL COMMENT ""
) ENGINE=OLAP
UNIQUE KEY(`k1`, `k2`, `k3`, `k4`, `k5`)
PARTITION BY time_slice(k2, 1, 'month', 'floor')
DISTRIBUTED BY HASH(`k1`, `k2`, `k3`)
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "3",
"storage_cooldown_ttl" = "3 day",
"storage_medium" = "SSD"
);
insert into test values('2020-01-01', '2024-10-30 11:17:01', 'asfgrgte', 'wergergqer', 0, 11, 111, 1111, 11111, 111111, 11.11, 111.111, 1111.1111),('2020-01-01', '2024-10-30 10:17:01', 'asfgrgte', 'wergergqer', 0, 11, 111, 1111, 11111, 111111, 11.11, 111.111, 1111.1111),('2020-01-01', '2024-10-30 09:17:01', 'asfgrgte', 'wergergqer', 0, 11, 111, 1111, 11111, 111111, 11.11, 111.111, 1111.1111),('2020-01-01', '2024-10-30 12:17:01', 'asfgrgte', 'wergergqer', 0, 11, 111, 1111, 11111, 111111, 11.11, 111.111, 1111.1111);
alter table test modify PARTITION (*) set ("storage_cooldown_ttl" = "1 year", "storage_medium" = "SSD");
