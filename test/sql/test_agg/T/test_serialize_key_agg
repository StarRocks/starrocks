-- name: test_serialize_key_agg
create table t0 (
    c0 STRING,
    c1 STRING,
    c2 STRING
) DUPLICATE KEY(c0) DISTRIBUTED BY HASH(c0) BUCKETS 3 PROPERTIES('replication_num' = '1');

select distinct c0, c1 from t0 order by c0, c1 desc limit 10;
select distinct c0, c1 from (select * from t0 union all select space(1000000) as c0, space(1000000) as c1, space(1000000) as c2) tb order by c0, c1 desc limit 10;
select length(c0), max(length(c1)), max(length(c2)) from (select * from t0 union all select space(1000000) as c0, space(1000000) as c1, space(1000000) as c2) tb group by c0 order by 1, 2 desc limit 10;
insert into t0 SELECT generate_series, 4096 - generate_series, generate_series FROM TABLE(generate_series(1,  4096));

select max(length(c0)), max(length(c1)) from (select distinct c0, c1 from t0) tb;
select max(length(c0)), max(length(c1)) from (select distinct c0, c1 from (select * from t0 union all select space(1000000) as c0, space(1000000) as c1, space(1000000) as c2) tb) tb order by 1, 2 desc limit 10;
select length(c0), max(length(c1)), max(length(c2)) from (select * from t0 union all select space(1000000) as c0, space(1000000) as c1, space(1000000) as c2) tb group by c0, c1, c2 order by 1, 2 desc limit 10;

SET @var = array_map(x -> CAST(x AS STRING), array_generate(1, 20000000, 1));
with input as (SELECT @var AS a UNION ALL SELECT ["A", "B", "C"] AS a)
SELECT count(*) from (select a from input group by 1) AS t;
CREATE TABLE `t1` (
  `id` int(11) NULL COMMENT "",
  `array_varchar` array<varchar(100)>
) ENGINE=OLAP
DUPLICATE KEY(`id`)
DISTRIBUTED BY HASH(`id`) BUCKETS 3
PROPERTIES (
"replication_num" = "1"
);
insert into t1 select generate_series, array_map(x -> cast(x as string), array_generate(1, generate_series % 100, 1)) from table(generate_series(1, 10000));
insert into t1 values (0, array_map(x -> CAST(x AS STRING), array_generate(1, 100000, 1))),
(10001, array_map(x -> CAST(x AS STRING), array_generate(1, 100000, 1)));
select count() from (select distinct array_varchar from t1) t;