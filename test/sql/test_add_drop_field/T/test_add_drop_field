-- name: test_add_drop_field_struct
create database test_add_drop_field_struct;
use test_add_drop_field_struct;

CREATE TABLE `tab1` (
  `c0` int(11) NULL COMMENT "",
  `c1` STRUCT<v1 INT, v2 Struct<v3 int, v4 int>>
) ENGINE=OLAP
DUPLICATE KEY(`c0`)
DISTRIBUTED BY HASH(`c0`) BUCKETS 1
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);

insert into tab1 values (1, row(1, row(1,1))), (2, row(2, row(2,2)));
select * from tab1;

alter table tab1 modify column c1 add field v1.v5 int;
alter table tab1 modify column c1 add field v2 int;
alter table tab1 modify column c1 add field v2.v3 int;
alter table tab1 modify column c1 add field val1 int;
function: wait_alter_table_finish()
select * from tab1;

insert into tab1 values (3, row(3, row(3,3), 3));
select * from tab1;

alter table tab1 modify column c1 drop field v2.v5;
alter table tab1 modify column c1 drop field v1;
function: wait_alter_table_finish()
select * from tab1;

alter table tab1 modify column c1 add field v1 int AFTER v2;
function: wait_alter_table_finish()
select * from tab1;
insert into tab1 values (4, row(row(4,4), 4, 4));
select * from tab1;

drop table tab1;
drop database test_add_drop_field_struct;


-- name: test_add_drop_field_array
create database test_add_drop_field_array;
use test_add_drop_field_array;

CREATE TABLE `tab1` (
  `c0` int(11) NULL COMMENT "",
  `c1` Array<Struct<v1 int, v2 int>>
) ENGINE=OLAP
DUPLICATE KEY(`c0`)
DISTRIBUTED BY HASH(`c0`) BUCKETS 1
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "true",
"replicated_storage" = "true",
"replication_num" = "1"
);

insert into tab1 values (1, [row(1,1), row(1,2)]), (2, [row(2,1), row(2,2)]);
select * from tab1;

alter table tab1 modify column c1 drop field [*];
alter table tab1 modify column c1 drop field [*].v3;
alter table tab1 modify column c1 add field val1 int;
alter table tab1 modify column c1 add field [*].val1 int;
function: wait_alter_table_finish()
select * from tab1;

insert into tab1 values (3, [row(3,1,1), row(3,2,1)]);
select * from tab1;

alter table tab1 modify column c1 drop field [*].v1;
function: wait_alter_table_finish()
select * from tab1;

insert into tab1 values (4, [row(4,4), row(4,5)]);
select * from tab1;

alter table tab1 modify column c1 add field [*].v1 int;
function: wait_alter_table_finish()
select * from tab1;

insert into tab1 values (5, [row(5,5,5), row(5,6,6)]);
select * from tab1;

drop table tab1;
drop database test_add_drop_field_array;


-- name: test_add_drop_field_not_allowed

create database test_add_drop_field_not_allowed;
use test_add_drop_field_not_allowed;

CREATE TABLE `tab1` (
  `c0` int(11) NULL COMMENT "",
  `c1` Array<Struct<v1 int, v2 int>>
) ENGINE=OLAP
DUPLICATE KEY(`c0`)
DISTRIBUTED BY HASH(`c0`) BUCKETS 1
PROPERTIES (
"compression" = "LZ4",
"fast_schema_evolution" = "false",
"replicated_storage" = "true",
"replication_num" = "1"
);

alter table tab1 modify column c1 add field [*].val1 int;
alter table tab1 modify column c1 drop field [*].v1;

drop table tab1;
drop database test_add_drop_field_not_allowed;