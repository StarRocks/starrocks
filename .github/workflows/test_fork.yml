name: PR TEST PIPELINE

on:
  pull_request:

permissions:
  checks: write
  actions: write
  contents: write
  deployments: write
  discussions: write
  issues: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:

  clang-format:
    runs-on: [self-hosted, normal]
    name: Clang-Format
    env:
      PR_NUMBER: ${{ github.event.number }}
    if: ${{ needs.be-checker.outputs.output1 == 'true' }}
    steps:
      - name: clean
        run: |
          rm -rf ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: BRANCH INFO
        id: branch
        run: |
          echo ${{github.base_ref}}
          echo "branch=${{github.base_ref}}" >> $GITHUB_OUTPUT

#      - name: Checkout PR
#        run: |
#          BRANCH=${{steps.branch.outputs.branch}}
#          git checkout $BRANCH;
#          git pull;
#          BRANCH_NAME="${BRANCH}-${PR_NUMBER}";
#          git fetch origin pull/${PR_NUMBER}/head:${BRANCH_NAME};
#          git checkout $BRANCH_NAME;
#          git checkout -b merge_pr;
#          git merge --squash --no-edit ${BRANCH} || (echo "Merge conflict, please check." && exit -1);

      - name: Run Clang-Format
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash build-support/test.sh

  
