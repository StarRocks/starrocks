name: Report on the pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: [ "PR TEST PIPELINE" ]
    types:
      - completed

jobs:
  upload:
    runs-on: [ self-hosted, normal ]
    if: >
      github.event.workflow_run.event == 'pull_request'
    steps:
      - name: 'Report Test'
        run: |
          echo workflow

  FE-UT-REPORT:
    runs-on: [ self-hosted, normal ]
    if: >
      github.event.workflow_run.event == 'pull_request'
    env:
      PR_NUMBER: ${{ github.event.workflow_run.event.number }}
    steps:
      - name: CLEAN
        run: |
          rm -rf ${{ github.workspace }} && mkdir -p ${{ github.workspace }}

      - uses: xSAVIKx/artifact-exists-action@v0
        name: CHECK FE UT FILES
        id: check-exists
        with:
          name: 'FE UT XML'

      - name: Download FE UT XML
        uses: actions/download-artifact@v3
        id: download-fe-ut-xml
        if: steps.check-exists.outputs.exists == 'true'
        with:
          name: 'FE UT XML'
          path: ./fe-ut/

      - name: UT Report
        if: steps.download-fe-ut-xml.conclusion == 'success'
        uses: mikepenz/action-junit-report@v3
        env:
          github_token: ${{ secrets.PAT }}
          token: ${{ secrets.PAT }}
        with:
          check_name: 'FE UT Report'
          detailed_summary: true
          report_paths: ./fe-ut/*.xml

      # Increase
      - name: Incremental Coverage Report
        if: steps.download-fe-ut-result.conclusion == 'success'
        run: |
          source ~/.profile
          cd ${{ github.workspace }}
          mkdir fe-result && cd fe-result
          branch=${{ github.event.workflow_run.base_ref }}
          ossutil64 cp oss://${bucket_prefix}-ci-release/$branch/Release/pr/UT-Result/${PR_NUMBER}/ . --recursive
          
          cd ${{ github.workspace }}
          rm -rf ./coverchecker && ln -s /var/local/env/coverchecker ./coverchecker && cd coverchecker && git pull
          time_count=0
          pull_status=1
          export JAVA_HOME=/var/local/env/jdk1.8.0_202;
          export PATH=$JAVA_HOME/bin:$PATH;
          while (( $pull_status != 0 )); do
            if (( $time_count == 3 )); then
              exit 1
            fi
            timeout 180 java -jar cover-checker-console/target/cover-checker-console-1.4.0-jar-with-dependencies.jar \
              --cover ${{ github.workspace }}/fe-result/ --github-token ${{ secrets.PAT }} \
              --repo ${{ github.repository }} --threshold 80 --github-url api.github.com --pr ${PR_NUMBER} -type jacoco
            pull_status=$?
            time_count=`expr $time_count + 1`
          done

