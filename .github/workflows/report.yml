name: Report on the pull request

on:
  workflow_run:
    workflows: [ "CI PIPELINE 2" ]
    types:
      - completed

permissions:
  checks: write
  actions: write
  contents: write
  deployments: write
  discussions: write
  issues: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write
  
jobs:
  INFO:
    runs-on: [ self-hosted, quick ]
    if: >
      github.event.workflow_run.event == 'pull_request'
    outputs:
      PR_NUMBER: ${{ steps.pr_details.outputs.PR_NUMBER }}
      BASE_REF: ${{ steps.pr_details.outputs.base_ref }}
    steps:
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.11.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          workflow: test_fork.yml
          name: 'pr_num'

      - name: Read the pr_num file
        id: pr_num_reader
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: ./pr_num.txt

      - name: PR DETAILS
        id: pr_details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.pr_num_reader.outputs.content }}
          REPO: ${{ github.repository }}
        run: |
          PR_NUMBER=`echo ${PR_NUMBER}`
          base_ref=`gh pr view ${PR_NUMBER} -R ${REPO} --json baseRefName -q .baseRefName`
          echo "base_ref=${base_ref}" >> $GITHUB_OUTPUT 
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_OUTPUT 

  FE-UT-REPORT:
    runs-on: [ self-hosted, quick ]
    needs: INFO
    env:
      PR_NUMBER: ${{ needs.INFO.outputs.PR_NUMBER }}
      branch: ${{ needs.INFO.outputs.BASE_REF }}
    steps:
      - name: CLEAN
        run: |
          rm -rf ${{ github.workspace }} && mkdir -p ${{ github.workspace }}

      - name: INFO
        id: info
        run: |
          repo="${{ github.repository }}"
          bucket_prefix=`echo ${repo%/*} | tr '[:upper:]' '[:lower:]'`
          echo "bucket_prefix=${bucket_prefix}" >> $GITHUB_OUTPUT

      - name: Download FE UT XML
        id: download-ut-xml
        env:
          bucket_prefix: ${{ steps.info.outputs.bucket_prefix }}
        run: |
          mkdir fe-ut && cd fe-ut
          oss_path=oss://${bucket_prefix}-ci-release/$branch/Release/pr/UT-XML/${PR_NUMBER}/
          size=$(ossutil64 --config-file ~/.ossutilconfig du ${oss_path} | grep "total du size" | awk -F':' '{print $NF}')
          echo "size=${size}" >> $GITHUB_OUTPUT
          if [[ "$size" != "0" ]]; then
            ossutil64 --config-file ~/.ossutilconfig cp ${oss_path} . --recursive
          fi

      - name: Publish UT Report
        uses: mikepenz/action-junit-report@v3
        if: steps.download-ut-xml.outputs.size != '0'
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
        with:
          check_name: 'FE UT Report'
          detailed_summary: true
          report_paths: ./fe-ut/*.xml

      # Incremental Coverage
      - name: Download Incremental Coverage Result
        id: download-incremental-result
        env:
          bucket_prefix: ${{ steps.info.outputs.bucket_prefix }}
        run: |
          mkdir fe-result && cd fe-result
          oss_path=oss://${bucket_prefix}-ci-release/$branch/Release/pr/UT-Result/${PR_NUMBER}/
          size=$(ossutil64 --config-file ~/.ossutilconfig du ${oss_path} | grep "total du size" | awk -F':' '{print $NF}')
          echo "size=${size}" >> $GITHUB_OUTPUT
          if [[ "$size" != "0" ]]; then
            ossutil64 --config-file ~/.ossutilconfig cp ${oss_path} . --recursive
          fi

      - name: Publish Incremental Coverage Report
        if: steps.download-incremental-result.outputs.size != '0'
        run: |
          rm -rf ./coverchecker && ln -s /var/local/env/coverchecker ./coverchecker && cd coverchecker && git pull
          time_count=0
          pull_status=1
          export JAVA_HOME=/var/local/env/jdk1.8.0_202;
          export PATH=$JAVA_HOME/bin:$PATH;
          while (( $pull_status != 0 )); do
            if (( $time_count == 3 )); then
              exit 1
            fi
            timeout 180 java -jar cover-checker-console/target/cover-checker-console-1.4.0-jar-with-dependencies.jar \
              --cover ${{ github.workspace }}/fe-result/ --github-token ${{ secrets.GITHUB_TOKEN }} \
              --repo ${{ github.repository }} --threshold 80 --github-url api.github.com --pr ${PR_NUMBER} -type jacoco
            pull_status=$?
            time_count=`expr $time_count + 1`
          done
          
  SQL-Tester-REPORT:
    runs-on: [ self-hosted, quick ]
    needs: INFO
    env:
      PR_NUMBER: ${{ needs.INFO.outputs.PR_NUMBER }}
      branch: ${{ needs.INFO.outputs.BASE_REF }}
    steps:
      - name: CLEAN
        run: |
          rm -rf ${{ github.workspace }} && mkdir -p ${{ github.workspace }}

      - name: INFO
        id: info
        run: |
          repo="${{ github.repository }}"
          bucket_prefix=`echo ${repo%/*} | tr '[:upper:]' '[:lower:]'`
          echo "bucket_prefix=${bucket_prefix}" >> $GITHUB_OUTPUT

      - name: Download SQL-Tester XML
        id: download-SQL-Tester-xml
        env:
          bucket_prefix: ${{ steps.info.outputs.bucket_prefix }}
        run: |
          mkdir sql-tester-result && cd sql-tester-result
          oss_path=oss://${bucket_prefix}-ci-release/$branch/Release/pr/SQL-Tester-XML/${PR_NUMBER}/
          size=$(ossutil64 --config-file ~/.ossutilconfig du ${oss_path} | grep "total du size" | awk -F':' '{print $NF}')
          echo "size=${size}" >> $GITHUB_OUTPUT
          if [[ "$size" != "0" ]]; then
            ossutil64 --config-file ~/.ossutilconfig cp ${oss_path} . --recursive
          fi

      - name: Prepare Tools
        if: steps.download-SQL-Tester-xml.outputs.size != '0'
        run: |
          mkdir -p .actions/nose-report-action
          cd .actions/nose-report-action
          git clone https://github.com/StarRocks/action-junit-report.git .

      - name: Publish SQL-Tester Report
        uses: ./.actions/nose-report-action
        with:
          check_name: 'SQL-Tester Report'
          fail_on_failure: true
          detailed_summary: true
          token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: 'sql-tester-result/*.xml'

  Admit-REPORT:
    runs-on: [ self-hosted, quick ]
    needs: INFO
    env:
      PR_NUMBER: ${{ needs.INFO.outputs.PR_NUMBER }}
      branch: ${{ needs.INFO.outputs.BASE_REF }}
    steps:
      - name: CLEAN
        run: |
          rm -rf ${{ github.workspace }} && mkdir -p ${{ github.workspace }}

      - name: INFO
        id: info
        run: |
          repo="${{ github.repository }}"
          bucket_prefix=`echo ${repo%/*} | tr '[:upper:]' '[:lower:]'`
          echo "bucket_prefix=${bucket_prefix}" >> $GITHUB_OUTPUT

      - name: Download Admit XML
        id: download-admit-xml
        env:
          bucket_prefix: ${{ steps.info.outputs.bucket_prefix }}
        run: |
          mkdir admit-result && cd admit-result
          oss_path=oss://${bucket_prefix}-ci-release/$branch/Release/pr/Admit-XML/${PR_NUMBER}/
          size=$(ossutil64 --config-file ~/.ossutilconfig du ${oss_path} | grep "total du size" | awk -F':' '{print $NF}')
          echo "size=${size}" >> $GITHUB_OUTPUT
          if [[ "$size" != "0" ]]; then
            ossutil64 --config-file ~/.ossutilconfig cp ${oss_path} . --recursive
          fi

      - name: Prepare Tools
        if: steps.download-admit-xml.outputs.size != '0'
        run: |
          mkdir -p .actions/nose-report-action
          cd .actions/nose-report-action
          git clone https://github.com/StarRocks/action-junit-report.git .

      - name: Publish Admit Report
        uses: ./.actions/nose-report-action
        with:
          check_name: 'Admit Report'
          fail_on_failure: true
          detailed_summary: true
          token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: 'admit-result/*.xml'
