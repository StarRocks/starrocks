// This file is licensed under the Elastic License 2.0. Copyright 2021-present, StarRocks Inc.

syntax="proto2";

package starrocks.lake;
option java_package = "com.starrocks.proto";

import "types.proto";
import "tablet_schema.proto";

message RowsetMetadataPB {
    optional uint32 id = 1;
    optional bool overlapped = 2;
    repeated string segments = 3; 
    optional int64 num_rows = 4;
    optional int64 data_size = 5;
    optional DeletePredicatePB delete_predicate = 6;
}

message TabletMetadataPB {
    optional int64 id = 1;
    optional int64 version = 2;
    optional TabletSchemaPB schema = 3;
    repeated RowsetMetadataPB rowsets = 4;
    optional uint32 next_rowset_id = 5;
    // cumulative point rowset index
    optional uint32 cumulative_point = 6;
}

message TxnLogPB {
    message OpWrite {
        optional RowsetMetadataPB rowset = 1;
    }
    
    message OpCompaction {
        repeated uint32 input_rowsets = 1;
        optional RowsetMetadataPB output_rowset = 2;
    }
    
    message OpSchemaChange {
        repeated RowsetMetadataPB rowsets = 1; 
        // Whether segment files are linked to new tablet's segment files.
        // If it's false, the segment files can be deleted on aborting,
        // otherwise cannot delete them.
        optional bool linked_segment = 2;
        // The data <= |alter_version| is generated by schema change,
        // and the rowsets are saved in txn_log.
        // The data between |alter_version + 1| and |new_version - 1| in publish version request is generated by load,
        // and the rowsets are saved in vtxn_log.
        optional int64 alter_version = 3;
    }

    optional int64 tablet_id = 1;
    optional int64 txn_id = 2;
    optional OpWrite op_write = 3;
    optional OpCompaction op_compaction = 4;
    optional OpSchemaChange op_schema_change = 5;
}

message TabletMetadataLockPB {
}
