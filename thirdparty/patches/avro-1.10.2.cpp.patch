--- CMakeLists.txt
+++ CMakeLists.txt
@@ -41,6 +41,7 @@ list(GET AVRO_VERSION 2 AVRO_VERSION_PATCH)

 project (Avro-cpp)
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})
+set(CMAKE_INSTALL_PREFIX $ENV{TP_INSTALL_DIR})

 if (WIN32 AND NOT CYGWIN AND NOT MSYS)
     add_definitions (/EHa)
@@ -68,10 +69,18 @@ if (AVRO_ADD_PROTECTOR_FLAGS)
 endif ()
 endif ()

+set ( BOOST_INCLUDEDIR $ENV{TP_INSTALL_DIR}/include )
+set ( BOOST_LIBRARYDIR $ENV{TP_INSTALL_DIR}/lib )

+set ( ZLIB_INCLUDEDIR $ENV{TP_INSTALL_DIR}/include )
+set ( ZLIB_LIBRARYDIR $ENV{TP_INSTALL_DIR}/lib )
+
+set ( Boost_USE_STATIC_RUNTIME ON )
 find_package (Boost 1.38 REQUIRED
     COMPONENTS filesystem iostreams program_options regex system)

+find_package (ZLIB)
+
 find_package(Snappy)
 if (SNAPPY_FOUND)
     set(SNAPPY_PKG libsnappy)
@@ -80,6 +89,7 @@ if (SNAPPY_FOUND)
 else (SNAPPY_FOUND)
     set(SNAPPY_PKG "")
     set(SNAPPY_LIBRARIES "")
+    set(SNAPPY_INCLUDE_DIR "")
     message("Disabled snappy codec. libsnappy not found.")
 endif (SNAPPY_FOUND)

@@ -121,12 +131,12 @@ set_target_properties (avrocpp PROPERTIES
 set_target_properties (avrocpp_s PROPERTIES
     VERSION ${AVRO_VERSION_MAJOR}.${AVRO_VERSION_MINOR}.${AVRO_VERSION_PATCH})

-target_link_libraries (avrocpp ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES})
+target_link_libraries (avrocpp ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES} ${ZLIB_LIBRARIES})
 target_include_directories(avrocpp PRIVATE ${SNAPPY_INCLUDE_DIR})

 add_executable (precompile test/precompile.cc)

-target_link_libraries (precompile avrocpp_s ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES})
+target_link_libraries (precompile avrocpp_s ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES} ${ZLIB_LIBRARIES})

 macro (gen file ns)
     add_custom_command (OUTPUT ${file}.hh
@@ -156,13 +166,13 @@ gen (primitivetypes pt)
 gen (cpp_reserved_words cppres)

 add_executable (avrogencpp impl/avrogencpp.cc)
-target_link_libraries (avrogencpp avrocpp_s ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES})
+target_link_libraries (avrogencpp avrocpp_s ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES} ${ZLIB_LIBRARIES})

 enable_testing()

 macro (unittest name)
     add_executable (${name} test/${name}.cc)
-    target_link_libraries (${name} avrocpp ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES})
+    target_link_libraries (${name} avrocpp ${Boost_LIBRARIES} ${SNAPPY_LIBRARIES} ${ZLIB_LIBRARIES})
     add_test (NAME ${name} WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
         COMMAND ${CMAKE_CURRENT_BINARY_DIR}/${name})
 endmacro (unittest)