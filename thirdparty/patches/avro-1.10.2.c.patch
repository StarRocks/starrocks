--- CMakeLists.txt
+++ CMakeLists.txt
@@ -18,7 +18,7 @@
 #
 cmake_minimum_required(VERSION 3.1)
 project(AvroC C)
-enable_testing()
+# enable_testing()
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})
 
@@ -136,12 +136,14 @@ include_directories(${AvroC_SOURCE_DIR}/
 
 
 # Enable codecs
-
+set ( ZLIB_INCLUDE_DIR $ENV{TP_INSTALL_DIR}/include )
+set ( ZLIB_LIBRARIES $ENV{TP_INSTALL_DIR}/lib/libz.a )
 find_package(ZLIB)
 if (ZLIB_FOUND)
     set(ZLIB_PKG zlib)
     add_definitions(-DDEFLATE_CODEC)
-    include_directories(${ZLIB_INCLUDE_DIRS})
+    include_directories(${ZLIB_INCLUDE_DIR})
+    link_directories(${ZLIB_LIBRARIES})
     message("Enabled deflate codec")
 else (ZLIB_FOUND)
     set(ZLIB_PKG "")
@@ -149,41 +151,18 @@ else (ZLIB_FOUND)
     message("Disabled deflate codec. zlib not found.")
 endif (ZLIB_FOUND)
 
-find_package(Snappy)
-if (SNAPPY_FOUND AND ZLIB_FOUND)  # Snappy borrows crc32 from zlib
-    set(SNAPPY_PKG libsnappy)
-    add_definitions(-DSNAPPY_CODEC)
-    include_directories(${SNAPPY_INCLUDE_DIRS})
-    message("Enabled snappy codec")
-else (SNAPPY_FOUND AND ZLIB_FOUND)
-    set(SNAPPY_PKG "")
-    set(SNAPPY_LIBRARIES "")
-    message("Disabled snappy codec. libsnappy not found or zlib not found.")
-endif (SNAPPY_FOUND AND ZLIB_FOUND)
-
-find_package(PkgConfig)
-pkg_check_modules(LZMA liblzma)
-if (LZMA_FOUND)
-    set(LZMA_PKG liblzma)
-    add_definitions(-DLZMA_CODEC)
-    include_directories(${LZMA_INCLUDE_DIRS})
-    link_directories(${LZMA_LIBRARY_DIRS})
-    message("Enabled lzma codec")
-else (LZMA_FOUND)
-    set(LZMA_PKG "")
-    set(LZMA_LIBRARIES "")
-    message("Disabled lzma codec. liblzma not found.")
-endif (LZMA_FOUND)
-
 set(CODEC_LIBRARIES ${ZLIB_LIBRARIES} ${LZMA_LIBRARIES} ${SNAPPY_LIBRARIES})
 set(CODEC_PKG "@ZLIB_PKG@ @LZMA_PKG@ @SNAPPY_PKG@")
 
 # Jansson JSON library
-pkg_check_modules(JANSSON jansson>=2.3)
+# pkg_check_modules(JANSSON jansson>=2.3)
+set ( JANSSON_INCLUDE_DIR $ENV{TP_INSTALL_DIR}/include )
+set ( JANSSON_LIBRARIES $ENV{TP_INSTALL_DIR}/lib/libjansson.a )
+find_package(jansson)
 if (JANSSON_FOUND)
     set(JANSSON_PKG libjansson)
-    include_directories(${JANSSON_INCLUDE_DIRS})
-    link_directories(${JANSSON_LIBRARY_DIRS})
+    include_directories(${JANSSON_INCLUDE_DIR})
+    link_directories(${JANSSON_LIBRARIES})
 else (JANSSON_FOUND)
     message(FATAL_ERROR "libjansson >=2.3 not found")
 endif (JANSSON_FOUND)
@@ -191,8 +170,9 @@ endif (JANSSON_FOUND)
 
 add_subdirectory(src)
 add_subdirectory(examples)
-add_subdirectory(tests)
+# add_subdirectory(tests)
 add_subdirectory(docs)
 
 add_custom_target(pretty
     "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_SOURCE_DIR}/cmake_pretty.cmake")
+
