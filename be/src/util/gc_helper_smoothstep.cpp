// This file is licensed under the Elastic License 2.0. Copyright 2021 StarRocks Limited.

/**
--------------------------------------------------------------------------------
Copyright (C) 2002-present Jason Evans <jasone@canonware.com>.
All rights reserved.
Copyright (C) 2007-2012 Mozilla Foundation.  All rights reserved.
Copyright (C) 2009-present Facebook, Inc.  All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice(s),
this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice(s),
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
EVENT SHALL THE COPYRIGHT HOLDER(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--------------------------------------------------------------------------------'
**/

#include <cstdint>

#include "util/gc_helper_smoothstep.h"

namespace starrocks {

// the following code is generated by JeMalloc script, `smoothstep.sh smoother 120 24 3 15`
#define SMOOTHSTEP_VARIANT "smoother"
// #define SMOOTHSTEP_NSTEPS 120
// #define SMOOTHSTEP_BFP 24
#define SMOOTHSTEP                                                    \
    /* STEP(step, h,                            x,     y) */          \
    STEP(1, UINT64_C(0x000000000000005f), 0.008, 0.000005714940202)   \
    STEP(2, UINT64_C(0x00000000000002f5), 0.016, 0.000045146604943)   \
    STEP(3, UINT64_C(0x00000000000009dc), 0.025, 0.000150449218750)   \
    STEP(4, UINT64_C(0x0000000000001713), 0.033, 0.000352098765433)   \
    STEP(5, UINT64_C(0x0000000000002c7e), 0.041, 0.000678921923216)   \
    STEP(6, UINT64_C(0x0000000000004be6), 0.050, 0.001158125000000)   \
    STEP(7, UINT64_C(0x00000000000076f8), 0.058, 0.001815322868450)   \
    STEP(8, UINT64_C(0x000000000000af47), 0.066, 0.002674567901237)   \
    STEP(9, UINT64_C(0x000000000000f64f), 0.075, 0.003758378906250)   \
    STEP(10, UINT64_C(0x0000000000014d6e), 0.083, 0.005087770061735)  \
    STEP(11, UINT64_C(0x000000000001b5ee), 0.091, 0.006682279851470)  \
    STEP(12, UINT64_C(0x00000000000230fc), 0.100, 0.008560000000000)  \
    STEP(13, UINT64_C(0x000000000002bfb3), 0.108, 0.010737604407794)  \
    STEP(14, UINT64_C(0x0000000000036310), 0.116, 0.013230378086409)  \
    STEP(15, UINT64_C(0x0000000000041c00), 0.125, 0.016052246093750)  \
    STEP(16, UINT64_C(0x000000000004eb53), 0.133, 0.019215802469130)  \
    STEP(17, UINT64_C(0x000000000005d1c9), 0.141, 0.022732339168602)  \
    STEP(18, UINT64_C(0x000000000006d009), 0.150, 0.026611875000000)  \
    STEP(19, UINT64_C(0x000000000007e6a6), 0.158, 0.030863184558249)  \
    STEP(20, UINT64_C(0x000000000009161f), 0.166, 0.035493827160495)  \
    STEP(21, UINT64_C(0x00000000000a5edf), 0.175, 0.040510175781250)  \
    STEP(22, UINT64_C(0x00000000000bc13e), 0.183, 0.045917445987657)  \
    STEP(23, UINT64_C(0x00000000000d3d80), 0.191, 0.051719724874615)  \
    STEP(24, UINT64_C(0x00000000000ed3d8), 0.200, 0.057920000000000)  \
    STEP(25, UINT64_C(0x0000000000108465), 0.208, 0.064520188319827)  \
    STEP(26, UINT64_C(0x0000000000124f36), 0.216, 0.071521165123459)  \
    STEP(27, UINT64_C(0x0000000000143448), 0.225, 0.078922792968750)  \
    STEP(28, UINT64_C(0x000000000016338a), 0.233, 0.086723950617274)  \
    STEP(29, UINT64_C(0x0000000000184cd8), 0.241, 0.094922561969518)  \
    STEP(30, UINT64_C(0x00000000001a8000), 0.250, 0.103515625000000)  \
    STEP(31, UINT64_C(0x00000000001cccc0), 0.258, 0.112499240692512)  \
    STEP(32, UINT64_C(0x00000000001f32c8), 0.266, 0.121868641975310)  \
    STEP(33, UINT64_C(0x000000000021b1bb), 0.275, 0.131618222656250)  \
    STEP(34, UINT64_C(0x000000000024492c), 0.283, 0.141741566358020)  \
    STEP(35, UINT64_C(0x000000000026f8a4), 0.291, 0.152231475453320)  \
    STEP(36, UINT64_C(0x000000000029bf9c), 0.300, 0.163080000000000)  \
    STEP(37, UINT64_C(0x00000000002c9d83), 0.308, 0.174278466676307)  \
    STEP(38, UINT64_C(0x00000000002f91bc), 0.316, 0.185817507716045)  \
    STEP(39, UINT64_C(0x0000000000329b9f), 0.325, 0.197687089843750)  \
    STEP(40, UINT64_C(0x000000000035ba78), 0.333, 0.209876543209873)  \
    STEP(41, UINT64_C(0x000000000038ed8a), 0.341, 0.222374590326003)  \
    STEP(42, UINT64_C(0x00000000003c340f), 0.350, 0.235169375000000)  \
    STEP(43, UINT64_C(0x00000000003f8d36), 0.358, 0.248248491271221)  \
    STEP(44, UINT64_C(0x000000000042f827), 0.366, 0.261599012345679)  \
    STEP(45, UINT64_C(0x0000000000467400), 0.375, 0.275207519531250)  \
    STEP(46, UINT64_C(0x000000000049ffd8), 0.383, 0.289060131172836)  \
    STEP(47, UINT64_C(0x00000000004d9abf), 0.391, 0.303142531587570)  \
    STEP(48, UINT64_C(0x00000000005143bf), 0.400, 0.317440000000000)  \
    STEP(49, UINT64_C(0x000000000054f9da), 0.408, 0.331937439477236)  \
    STEP(50, UINT64_C(0x000000000058bc0c), 0.416, 0.346619405864194)  \
    STEP(51, UINT64_C(0x00000000005c894e), 0.425, 0.361470136718750)  \
    STEP(52, UINT64_C(0x0000000000606092), 0.433, 0.376473580246912)  \
    STEP(53, UINT64_C(0x00000000006440c7), 0.441, 0.391613424238041)  \
    STEP(54, UINT64_C(0x00000000006828d6), 0.450, 0.406873125000000)  \
    STEP(55, UINT64_C(0x00000000006c17a7), 0.458, 0.422235936294367)  \
    STEP(56, UINT64_C(0x0000000000700c1e), 0.466, 0.437684938271614)  \
    STEP(57, UINT64_C(0x000000000074051d), 0.475, 0.453203066406250)  \
    STEP(58, UINT64_C(0x0000000000780184), 0.483, 0.468773140432101)  \
    STEP(59, UINT64_C(0x00000000007c0030), 0.491, 0.484377893277383)  \
    STEP(60, UINT64_C(0x0000000000800000), 0.500, 0.500000000000000)  \
    STEP(61, UINT64_C(0x000000000083ffcf), 0.508, 0.515622106722611)  \
    STEP(62, UINT64_C(0x000000000087fe7b), 0.516, 0.531226859567902)  \
    STEP(63, UINT64_C(0x00000000008bfae2), 0.525, 0.546796933593750)  \
    STEP(64, UINT64_C(0x00000000008ff3e1), 0.533, 0.562315061728394)  \
    STEP(65, UINT64_C(0x000000000093e858), 0.541, 0.577764063705635)  \
    STEP(66, UINT64_C(0x000000000097d729), 0.550, 0.593126875000000)  \
    STEP(67, UINT64_C(0x00000000009bbf38), 0.558, 0.608386575761962)  \
    STEP(68, UINT64_C(0x00000000009f9f6d), 0.566, 0.623526419753091)  \
    STEP(69, UINT64_C(0x0000000000a376b1), 0.575, 0.638529863281250)  \
    STEP(70, UINT64_C(0x0000000000a743f3), 0.583, 0.653380594135806)  \
    STEP(71, UINT64_C(0x0000000000ab0625), 0.591, 0.668062560522761)  \
    STEP(72, UINT64_C(0x0000000000aebc40), 0.600, 0.682560000000000)  \
    STEP(73, UINT64_C(0x0000000000b26540), 0.608, 0.696857468412423)  \
    STEP(74, UINT64_C(0x0000000000b60027), 0.616, 0.710939868827150)  \
    STEP(75, UINT64_C(0x0000000000b98c00), 0.625, 0.724792480468750)  \
    STEP(76, UINT64_C(0x0000000000bd07d8), 0.633, 0.738400987654325)  \
    STEP(77, UINT64_C(0x0000000000c072c9), 0.641, 0.751751508728782)  \
    STEP(78, UINT64_C(0x0000000000c3cbf0), 0.650, 0.764830625000000)  \
    STEP(79, UINT64_C(0x0000000000c71275), 0.658, 0.777625409673993)  \
    STEP(80, UINT64_C(0x0000000000ca4587), 0.666, 0.790123456790118)  \
    STEP(81, UINT64_C(0x0000000000cd6460), 0.675, 0.802312910156250)  \
    STEP(82, UINT64_C(0x0000000000d06e43), 0.683, 0.814182492283954)  \
    STEP(83, UINT64_C(0x0000000000d3627c), 0.691, 0.825721533323694)  \
    STEP(84, UINT64_C(0x0000000000d64063), 0.700, 0.836920000000000)  \
    STEP(85, UINT64_C(0x0000000000d9075b), 0.708, 0.847768524546684)  \
    STEP(86, UINT64_C(0x0000000000dbb6d3), 0.716, 0.858258433641967)  \
    STEP(87, UINT64_C(0x0000000000de4e44), 0.725, 0.868381777343750)  \
    STEP(88, UINT64_C(0x0000000000e0cd37), 0.733, 0.878131358024686)  \
    STEP(89, UINT64_C(0x0000000000e3333f), 0.741, 0.887500759307488)  \
    STEP(90, UINT64_C(0x0000000000e58000), 0.750, 0.896484375000000)  \
    STEP(91, UINT64_C(0x0000000000e7b327), 0.758, 0.905077438030481)  \
    STEP(92, UINT64_C(0x0000000000e9cc75), 0.766, 0.913276049382715)  \
    STEP(93, UINT64_C(0x0000000000ebcbb7), 0.775, 0.921077207031250)  \
    STEP(94, UINT64_C(0x0000000000edb0c9), 0.783, 0.928478834876545)  \
    STEP(95, UINT64_C(0x0000000000ef7b9a), 0.791, 0.935479811680169)  \
    STEP(96, UINT64_C(0x0000000000f12c27), 0.800, 0.942080000000000)  \
    STEP(97, UINT64_C(0x0000000000f2c27f), 0.808, 0.948280275125381)  \
    STEP(98, UINT64_C(0x0000000000f43ec1), 0.816, 0.954082554012337)  \
    STEP(99, UINT64_C(0x0000000000f5a120), 0.825, 0.959489824218750)  \
    STEP(100, UINT64_C(0x0000000000f6e9e0), 0.833, 0.964506172839510) \
    STEP(101, UINT64_C(0x0000000000f81959), 0.841, 0.969136815441740) \
    STEP(102, UINT64_C(0x0000000000f92ff6), 0.850, 0.973388125000000) \
    STEP(103, UINT64_C(0x0000000000fa2e36), 0.858, 0.977267660831408) \
    STEP(104, UINT64_C(0x0000000000fb14ac), 0.866, 0.980784197530860) \
    STEP(105, UINT64_C(0x0000000000fbe400), 0.875, 0.983947753906250) \
    STEP(106, UINT64_C(0x0000000000fc9cef), 0.883, 0.986769621913572) \
    STEP(107, UINT64_C(0x0000000000fd404c), 0.891, 0.989262395592209) \
    STEP(108, UINT64_C(0x0000000000fdcf03), 0.900, 0.991440000000000) \
    STEP(109, UINT64_C(0x0000000000fe4a11), 0.908, 0.993317720148525) \
    STEP(110, UINT64_C(0x0000000000feb291), 0.916, 0.994912229938268) \
    STEP(111, UINT64_C(0x0000000000ff09b0), 0.925, 0.996241621093750) \
    STEP(112, UINT64_C(0x0000000000ff50b8), 0.933, 0.997325432098767) \
    STEP(113, UINT64_C(0x0000000000ff8907), 0.941, 0.998184677131564) \
    STEP(114, UINT64_C(0x0000000000ffb419), 0.950, 0.998841875000000) \
    STEP(115, UINT64_C(0x0000000000ffd381), 0.958, 0.999321078076771) \
    STEP(116, UINT64_C(0x0000000000ffe8ec), 0.966, 0.999647901234558) \
    STEP(117, UINT64_C(0x0000000000fff623), 0.975, 0.999849550781250) \
    STEP(118, UINT64_C(0x0000000000fffd0a), 0.983, 0.999954853395052) \
    STEP(119, UINT64_C(0x0000000000ffffa0), 0.991, 0.999994285059804) \
    STEP(120, UINT64_C(0x0000000001000000), 1.000, 1.000000000000000)

static const uint64_t h_steps[SMOOTHSTEP_NSTEPS] = {
#define STEP(step, h, x, y) h,
        SMOOTHSTEP
#undef STEP
};

size_t get_smoothstep_at(size_t index) {
    return h_steps[index];
}

} // namespace starrocks
